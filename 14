/Nyr/openvpn-install.git | OpenVPN road warrior installer for Ubuntu, Debian, AlmaLinux, Rocky Linux, .. \ https://github.com/Nyr/openvpn-install.git
/myspaghetti/macos-virtualbox.git | Push-button installer of macOS Catalina, Mojave, and High Sierra guests in .. \ https://github.com/myspaghetti/macos-virtualbox.git
/rastapasta/mapscii.git |   MapSCII is a Braille & ASCII world map renderer for your console - enter.. \ https://github.com/rastapasta/mapscii.git
/rajkumardusad/Tool-X.git | Tool-X is a kali linux hacking Tool installer. Tool-X developed for termux .. \ https://github.com/rajkumardusad/Tool-X.git
/meefik/linuxdeploy.git | Install and run GNU/Linux on Android \ https://github.com/meefik/linuxdeploy.git
/LionSec/katoolin.git | Automatically install all Kali linux tools \ https://github.com/LionSec/katoolin.git
/archlinux/archinstall.git | Arch Linux installer - guided, templates etc. \ https://github.com/archlinux/archinstall.git
/Gictorbit/photoshopCClinux.git | Photoshop CC v19  installer for Gnu/Linux \ https://github.com/Gictorbit/photoshopCClinux.git
/angristan/wireguard-install.git | WireGuard VPN installer for Linux servers \ https://github.com/angristan/wireguard-install.git
/netbootxyz/netboot.xyz.git | Your favorite operating systems in one place.  A network-based bootable ope.. \ https://github.com/netbootxyz/netboot.xyz.git
/openmediavault/openmediavault.git | openmediavault is the next generation network attached storage (NAS) soluti.. \ https://github.com/openmediavault/openmediavault.git
/teddysun/lamp.git | Install LAMP(Linux + Apache + MySQL/MariaDB + PHP ) for CentOS/Debian/Ubunt.. \ https://github.com/teddysun/lamp.git
/WSA-Community/WSAGAScript.git | Scripts to install Google Apps into a WSA image. Plus optional root \ https://github.com/WSA-Community/WSAGAScript.git
/MatMoul/archfi.git | Arch Linux Fast Installer : tutorial installer \ https://github.com/MatMoul/archfi.git
/xtr4nge/FruityWifi.git | FruityWiFi is a wireless network auditing tool. The application can be inst.. \ https://github.com/xtr4nge/FruityWifi.git
/unetbootin/unetbootin.git | UNetbootin installs Linux/BSD distributions to a partition or USB drive \ https://github.com/unetbootin/unetbootin.git
/MvsCode/frps-onekey.git |  Frps & A tool to auto-compile & install frps on Linux \ https://github.com/MvsCode/frps-onekey.git
/Nyr/wireguard-install.git | WireGuard road warrior installer for Ubuntu, Debian, AlmaLinux, Rocky Linux.. \ https://github.com/Nyr/wireguard-install.git
/casualsnek/cassowary.git | Run Windows Applications on Linux as if they are native, Use linux applicat.. \ https://github.com/casualsnek/cassowary.git
/rajkumardusad/onex.git | Onex is a package manager for hacker's. Onex manage more than 400+ hacking .. \ https://github.com/rajkumardusad/onex.git
/tighten/takeout.git | Docker-based development-only dependency manager. macOS, Linux, and WSL2-on.. \ https://github.com/tighten/takeout.git
/alwsl/alwsl.git | Install archlinux as the WSL (Windows Subsystem for Linux) host. \ https://github.com/alwsl/alwsl.git
/ChrisTitusTech/ArchTitus.git | Automated Arch Linux Install \ https://github.com/ChrisTitusTech/ArchTitus.git
/Hax4us/Nethunter-In-Termux.git | This is a script by which you can install Kali nethunter (Kali Linux) in yo.. \ https://github.com/Hax4us/Nethunter-In-Termux.git
/AnarchyLinux/installer.git | Anarchy Linux - A simple and intuitive Arch Linux installer. https://anarch.. \ https://github.com/AnarchyLinux/installer.git
/yuk7/wsldl.git | Advanced WSL launcher / installer. (Win10 FCU x64/arm64 or later.) \ https://github.com/yuk7/wsldl.git
/coreos/coreos-kubernetes.git | CoreOS Container Linux+Kubernetes documentation & Vagrant installers \ https://github.com/coreos/coreos-kubernetes.git
/andy-5/wslgit.git | Use Git installed in Bash on Windows/Windows Subsystem for Linux (WSL) from.. \ https://github.com/andy-5/wslgit.git
/jayrambhia/Install-OpenCV.git | shell scripts to install different version of OpenCV in different distribut.. \ https://github.com/jayrambhia/Install-OpenCV.git
/home-assistant/supervised-installer.git | Installer for a generic Linux system \ https://github.com/home-assistant/supervised-installer.git
/P3TERX/warp.sh.git | WARP  | Cloudflare WARP Installer | A Bash script that automatically .. \ https://github.com/P3TERX/warp.sh.git
/SDRausty/TermuxArch.git | You can use setupTermuxArch.bash  to install Arch Linux in Amazon, Android.. \ https://github.com/SDRausty/TermuxArch.git
/calamares/calamares.git | Distribution-independent installer framework \ https://github.com/calamares/calamares.git
/AdnanHodzic/displaylink-debian.git | DisplayLink driver installer for Debian and Ubuntu based Linux distribution.. \ https://github.com/AdnanHodzic/displaylink-debian.git
/fossasia/susi_installer.git | SUSI Installer for RPi and Linux Desktops \ https://github.com/fossasia/susi_installer.git
/cstrap/monaco-font.git | Install `Monaco Font` or other fonts on Linux distro (Ubuntu, CentOS...) \ https://github.com/cstrap/monaco-font.git
/webpwnized/mutillidae.git | OWASP Mutillidae II is a free, open-source, deliberately vulnerable web app.. \ https://github.com/webpwnized/mutillidae.git
/AndronixApp/AndronixOrigin.git | This is the official repository for the back end of the Andronix app . Her.. \ https://github.com/AndronixApp/AndronixOrigin.git
/JetBrains/projector-installer.git | Install, configure and run JetBrains IDEs with Projector Server on Linux or.. \ https://github.com/JetBrains/projector-installer.git
/corbindavenport/creative-cloud-linux.git | PlayOnLinux install script for Adobe Creative Cloud \ https://github.com/corbindavenport/creative-cloud-linux.git
/mikeslattery/tunic.git | Install Linux from a running Windows system, without need for a live USB. \ https://github.com/mikeslattery/tunic.git
/corbindavenport/nexus-tools.git | Installer for ADB, Fastboot, and other Android tools on Linux, macOS, Chrom.. \ https://github.com/corbindavenport/nexus-tools.git
/YadominJinta/atilo.git | Linux installer for termux \ https://github.com/YadominJinta/atilo.git
/andreapollastri/cipi.git | Install and manage your server like a pro! With Cipi you dont need to be a.. \ https://github.com/andreapollastri/cipi.git
/picodotdev/alis.git | Arch Linux Install Script (or alis, also known as the Arch Linux executable.. \ https://github.com/picodotdev/alis.git
/noob-hackers/kalimux.git | Install And Use Kali Linux With Gui In Termux \ https://github.com/noob-hackers/kalimux.git
/micahflee/torbrowser-launcher.git | Securely and easily download, verify, install, and launch Tor Browser in Li.. \ https://github.com/micahflee/torbrowser-launcher.git
/SDRausty/termux-archlinux.git | You can use setupTermuxArch.bash  to install Arch Linux in Termux on Amazo.. \ https://github.com/SDRausty/termux-archlinux.git
/Jactor-Sue/Deepin-Apps-Installation.git | UbuntuDeepinThis repo shows how to install apps packa.. \ https://github.com/Jactor-Sue/Deepin-Apps-Installation.git
/Har-Kuun/OneClickDesktop.git | A one-click script that installs a remote desktop environment on a Linux se.. \ https://github.com/Har-Kuun/OneClickDesktop.git
/fvarrui/JavaPackager.git | :package: Gradle/Maven plugin to package Java applications as native Window.. \ https://github.com/fvarrui/JavaPackager.git
/Gictorbit/illustratorCClinux.git | Illustrator CC v17 installer for Gnu/Linux \ https://github.com/Gictorbit/illustratorCClinux.git
/RandomCoderOrg/ubuntu-on-android.git | Run Ubuntu with pre-installed Desktop Environments in android/termux with e.. \ https://github.com/RandomCoderOrg/ubuntu-on-android.git
/MiniCodeMonkey/Vagrant-LAMP-Stack.git | A dead-simple LAMP stack without any bells and whistles for your basic Linu.. \ https://github.com/MiniCodeMonkey/Vagrant-LAMP-Stack.git
/miurahr/aqtinstall.git | aqt: Another (unofficial) Qt  CLI  Installer on multi-platforms \ https://github.com/miurahr/aqtinstall.git
/AUNaseef/protonup.git | Install and Update Proton-GE \ https://github.com/AUNaseef/protonup.git
/MasterDevX/Termux-Kali.git | Install Kali Linux on Android using Termux! \ https://github.com/MasterDevX/Termux-Kali.git
/jeaye/nixos-in-place.git | Install NixOS on top of any existing Linux distribution without rebooting \ https://github.com/jeaye/nixos-in-place.git
/colbycheeze/dotfiles.git | Setup and install scripts for a new machine + dotfiles for various apps. Li.. \ https://github.com/colbycheeze/dotfiles.git
/William-Yeh/docker-ansible.git | Docker images for Ansible software, installed in a selected Linux distribut.. \ https://github.com/William-Yeh/docker-ansible.git
/hubisan/emacs-wsl.git | Install and run Emacs with the Windows Subsystem for Linux (WSL) in Windows.. \ https://github.com/hubisan/emacs-wsl.git
/vmavromatis/gnome-layout-manager.git | A bash script that batch installs and tweaks GNOME extensions as well as GT.. \ https://github.com/vmavromatis/gnome-layout-manager.git
/rolandguelle/razer-blade-stealth-linux.git | Install and run Linux on a Razer Blade Stealth (late 2016) and Razer Core. \ https://github.com/rolandguelle/razer-blade-stealth-linux.git
/MatMoul/archdi.git | Arch Linux Desktop Installer : tutorial installer \ https://github.com/MatMoul/archdi.git
/alexkasko/openjdk-unofficial-builds.git | Unofficial OpenJDK installers for Windows, Linux and Mac OS X \ https://github.com/alexkasko/openjdk-unofficial-builds.git
/DavidoTek/ProtonUp-Qt.git | Install and manage Proton-GE and Luxtorpeda for Steam and Wine-GE for Lutri.. \ https://github.com/DavidoTek/ProtonUp-Qt.git
/panubo/docker-sshd.git | Minimal Alpine Linux Docker image with sshd exposed and rsync installed \ https://github.com/panubo/docker-sshd.git
/FreelancePentester/ddos-script.git | All  things to do after installing Kali Linux and Add more awesome hacking .. \ https://github.com/FreelancePentester/ddos-script.git
/kathamer/DebianKindle.git | Scripts to install Debian on your Kindle \ https://github.com/kathamer/DebianKindle.git
/x08d/lockdown.sh.git | Lockdown your linux install. The simple zero config linux hardening script \ https://github.com/x08d/lockdown.sh.git
/AsahiLinux/asahi-installer.git | Asahi Linux installer \ https://github.com/AsahiLinux/asahi-installer.git
/Hax4us/TermuxAlpine.git | Use TermuxAlpine.sh calling to install Alpine Linux in Termux on Android. T.. \ https://github.com/Hax4us/TermuxAlpine.git
/githubixx/ansible-role-wireguard.git | Ansible role for installing WireGuard VPN. Supports Ubuntu, Debian, Archlin.. \ https://github.com/githubixx/ansible-role-wireguard.git
/danielpaulus/go-ios.git | This is an operating system independent implementation of iOS device featur.. \ https://github.com/danielpaulus/go-ios.git
/kribblo/node-ffmpeg-installer.git | Platform independent binary installer of FFmpeg for node projects \ https://github.com/kribblo/node-ffmpeg-installer.git
/Antergos/Cnchi.git | A modern, flexible online system installer for Antergos Linux \ https://github.com/Antergos/Cnchi.git
/yuk7/AlpineWSL.git | Alpine Linux based WSL distribution. Supports multi-install. Lightest WSL d.. \ https://github.com/yuk7/AlpineWSL.git
/offensive-security/nethunter-LRT.git | The Nethunter Linux Root Toolkit is a collection of bash scripts which inst.. \ https://github.com/offensive-security/nethunter-LRT.git
/whiteinge/dotfiles.git | dotfiles for vim, git, zsh, cwm, xinit, and many others. Install with: lndi.. \ https://github.com/whiteinge/dotfiles.git
/notthebee/macos_usb.git | A script that creates a bootable macOS installer on Linux and macOS \ https://github.com/notthebee/macos_usb.git
/faiproject/fai.git | non-interactive system to install, customize and manage Linux systems \ https://github.com/faiproject/fai.git
/meienberger/runtipi.git |  Tipi is a homeserver for everyone! One command setup, one click installs.. \ https://github.com/meienberger/runtipi.git
/Kr328/clash-premium-installer.git | Simple clash premium core installer for Linux. \ https://github.com/Kr328/clash-premium-installer.git
/cachix/install-nix-action.git | Installs Nix on GitHub Actions for the supported platforms: Linux and macOS.. \ https://github.com/cachix/install-nix-action.git
/rockerbacon/modorganizer2-linux-installer.git | An easy-to-use Mod Organizer 2 installer for Linux \ https://github.com/rockerbacon/modorganizer2-linux-installer.git
/fohtla/Fallout3Terminal.git | A recreation of the Fallout 3 terminal via a linux bash script! Requires co.. \ https://github.com/fohtla/Fallout3Terminal.git
/wetw0rk/malicious-wordpress-plugin.git | Simply generates a wordpress plugin that will grant you a reverse shell onc.. \ https://github.com/wetw0rk/malicious-wordpress-plugin.git
/erikdubois/Archi3.git | Automated script to install i3 and all its programs on Arch Linux  \ https://github.com/erikdubois/Archi3.git
/Taoviqinvicible/Tools-termux.git | 1.[Script Termux] -Cmatrix *apt-get update *apt-get upgrade *apt-get instal.. \ https://github.com/Taoviqinvicible/Tools-termux.git
/Biswa96/WSLInstall.git | Install any GNU/Linux userspace in WSL \ https://github.com/Biswa96/WSLInstall.git
/YangMame/Arch-Linux-Installer.git | Arch-Linux-Install-Script/Arch Linux  \ https://github.com/YangMame/Arch-Linux-Installer.git
/NullArray/IntRec-Pack.git | Intelligence and Reconnaissance Package/Bundle installer. \ https://github.com/NullArray/IntRec-Pack.git
/alpinelinux/alpine-chroot-install.git | Install Alpine Linux in chroot with a breeze. Build ARM on Travis CI or any.. \ https://github.com/alpinelinux/alpine-chroot-install.git
/mvallim/live-custom-ubuntu-from-scratch.git | This procedure shows how to create a bootable and installable Ubuntu Live (.. \ https://github.com/mvallim/live-custom-ubuntu-from-scratch.git
/c9s/Vimana.git | Vimana is an easy to use system for searching , installing, and downloading.. \ https://github.com/c9s/Vimana.git
/Netherdrake/Dotfiles.git | My [NeoVim + Tmux + Fish Shell] Setup /w install scripts \ https://github.com/Netherdrake/Dotfiles.git
/WolverineFan/YNABLinuxInstall.git | Install script for YNAB 4 on Linux \ https://github.com/WolverineFan/YNABLinuxInstall.git
/bluedragonz/server-shield.git | Server Shield is a lightweight method of protecting and hardening your Linu.. \ https://github.com/bluedragonz/server-shield.git
/ejmg/an-idiots-guide-to-installing-arch-on-a-lenovo-carbon-x1-gen-6.git | so you wanted to install arch huh \ https://github.com/ejmg/an-idiots-guide-to-installing-arch-on-a-lenovo-carbon-x1-gen-6.git
/t0xic0der/nvidia-auto-installer-for-fedora-linux.git | A CLI tool which lets you install proprietary NVIDIA drivers and much more .. \ https://github.com/t0xic0der/nvidia-auto-installer-for-fedora-linux.git
/johnnychen94/jill.py.git | A cross-platform installer for the Julia programming language \ https://github.com/johnnychen94/jill.py.git
/mzz2017/gg.git | A command-line tool for one-click proxy in your research and development wi.. \ https://github.com/mzz2017/gg.git
/jlund/ansible-go.git | Ansible role that installs Go (http://golang.org/). The latest stable relea.. \ https://github.com/jlund/ansible-go.git
/bontibon/digitalocean-alpine.git | Script to install Alpine Linux on a Digital Ocean droplet \ https://github.com/bontibon/digitalocean-alpine.git
/tuanpham-dev/termux-ubuntu.git | This helps you install Ubuntu 20 + XFCE4 desktop on Termux with ease. \ https://github.com/tuanpham-dev/termux-ubuntu.git
/flathub/linux-store-frontend.git | A web application to browse and install applications present in Flatpak rep.. \ https://github.com/flathub/linux-store-frontend.git
/shubhampathak/autosetup.git | Auto setup is a bash script compatible with Debian based distributions to i.. \ https://github.com/shubhampathak/autosetup.git
/jessety/pm2-installer.git | Install PM2 offline as a service on Windows or Linux. Mostly designed for W.. \ https://github.com/jessety/pm2-installer.git
/brandleesee/ePSXe64Ubuntu.git | USE DuckStation. ePSXe64Ubuntu is an interactive script that installs ePSXe.. \ https://github.com/brandleesee/ePSXe64Ubuntu.git
/elementary/installer.git | Installer front-end for Linux-based OSes \ https://github.com/elementary/installer.git
/Revolutionary-Games/Thrive-Launcher.git | Thrive Launcher for installing and automatically updating Thrive \ https://github.com/Revolutionary-Games/Thrive-Launcher.git
/fzerorubigd/persian-fonts-linux.git | Persian fonts installer for linux \ https://github.com/fzerorubigd/persian-fonts-linux.git
/bmcgonag/docker_installs.git | Docker and Docker-Compose install scripts for various linux distros and ver.. \ https://github.com/bmcgonag/docker_installs.git
/jakoch/phantomjs-installer.git | A Composer Package which installs the PhantomJS binary (Linux, Windows, Mac.. \ https://github.com/jakoch/phantomjs-installer.git
/64kramsystem/zfs-installer.git | Program that prepares ZFS on a system, and installs Linux \ https://github.com/64kramsystem/zfs-installer.git
/hangxingliu/wslgit.git | :candy: Use Git installed in WSL(Windows Subsystem for Linux) from Windows .. \ https://github.com/hangxingliu/wslgit.git
/mriza/winbox-installer.git | Install winbox in fedora/ubuntu linux, using wine \ https://github.com/mriza/winbox-installer.git
/danboid/ALEZ.git | Arch Linux Easy ZFS installer \ https://github.com/danboid/ALEZ.git
/EmilGus/install_raspi-config.git | Script to install raspi-config on Raspberry Pi devices with an Linux OS tha.. \ https://github.com/EmilGus/install_raspi-config.git
/simmac/minimal_adb_fastboot.git | Installs the adb and fastboot binaries for OS X and Linux. \ https://github.com/simmac/minimal_adb_fastboot.git
/altercation/archblocks.git | Arch Linux Modular Install Script \ https://github.com/altercation/archblocks.git
/archlinux/arch-install-scripts.git | Useful scripts for installing Arch Linux \ https://github.com/archlinux/arch-install-scripts.git
/Zer0CoolX/Fedora-KDE-Minimal-Install-Guide.git | Guide to install KDE Plasma desktop environment on a minimal Fedora install.. \ https://github.com/Zer0CoolX/Fedora-KDE-Minimal-Install-Guide.git
/OSGeo/OSGeoLive.git | OSGeo-Live is a self-contained bootable DVD, USB thumb drive or Virtual Mac.. \ https://github.com/OSGeo/OSGeoLive.git
/easybuilders/easybuild-framework.git | EasyBuild is a software installation framework in Python that allows you to.. \ https://github.com/easybuilders/easybuild-framework.git
/its0x08/wg-install.git | Wireguard road warrior installer for Ubuntu, Debian, CentOS and Fedora \ https://github.com/its0x08/wg-install.git
/leamas/spotify-make.git | Experimental, third-party installer for native linux spotify client \ https://github.com/leamas/spotify-make.git
/dozzie/yumbootstrap.git | Linux chroot installer for Yum-based distributions \ https://github.com/dozzie/yumbootstrap.git
/oddlama/gentoo-install.git | A gentoo installer with a TUI interface that supports systemd and OpenRC, E.. \ https://github.com/oddlama/gentoo-install.git
/mikemaccana/how-to-install-a-linux-development-environment-on-windows.git | How to install a Linux development environment on Windows using Ubuntu and .. \ https://github.com/mikemaccana/how-to-install-a-linux-development-environment-on-windows.git
/Juanhacker051/FOTOSPLOIT-.git | *FotoSploit*  $ git clone https://github.com/Cesar-Hack-Gray/FotoSploit $ c.. \ https://github.com/Juanhacker051/FOTOSPLOIT-.git
/LRA-QC/arch_installer.git | script to install arch linux very quickly \ https://github.com/LRA-QC/arch_installer.git
/kyechou/leagueoflegends.git | League of Legends install and launch wrapper for Linux \ https://github.com/kyechou/leagueoflegends.git
/laurent85v/archuseriso.git | Build Arch Linux iso images, create live usb drives, install on usb drives. \ https://github.com/laurent85v/archuseriso.git
/BashGui/easybashgui.git | EasyBashGUI  is a Bash functions library  for *BSD and GNU/Linux that aims .. \ https://github.com/BashGui/easybashgui.git
/SarKaa/jailm8.git | A tool for windows users to use checkra1n without having to install a full .. \ https://github.com/SarKaa/jailm8.git
/developerkunal/Converto.git | Installing Kali linux on Vps Server \ https://github.com/developerkunal/Converto.git
/mediabots/Linux-to-Windows-with-QEMU.git | One Script for Auto installation of Windows Server into a Linux Server.  Sc.. \ https://github.com/mediabots/Linux-to-Windows-with-QEMU.git
/mrbvrz/segoe-ui-linux.git | :monkey: Install segoe-ui font on linux (ubuntu) \ https://github.com/mrbvrz/segoe-ui-linux.git
/nathtest/Tutorial-Ubuntu-18.04-Install-Nvidia-driver-and-CUDA-and-CUDNN-and-build-Tensorflow-for-gpu.git | Ubuntu 18.04 How to install Nvidia driver + CUDA + CUDNN +  build tensorflo.. \ https://github.com/nathtest/Tutorial-Ubuntu-18.04-Install-Nvidia-driver-and-CUDA-and-CUDNN-and-build-Tensorflow-for-gpu.git
/BlackArch/blackarch-installer.git | The official BlackArch Linux installer \ https://github.com/BlackArch/blackarch-installer.git
/butteff/Ubuntu-Telemetry-Free-Privacy-Secure.git | This Bash script just removes a pre-installed Telemetry, a pre-installed so.. \ https://github.com/butteff/Ubuntu-Telemetry-Free-Privacy-Secure.git
/teddysun/lamp-yum.git | Yum Install LAMP(Linux + Apache + MySQL/MariaDB + PHP ) for CentOS \ https://github.com/teddysun/lamp-yum.git
/fubarhouse/ansible-role-golang.git | Installs the Go programming language and packages on Mac & Linux (Ubuntu, C.. \ https://github.com/fubarhouse/ansible-role-golang.git
/badruzeus/CloverEFI-4MU.git | Manually install Clover EFI Bootloader via Linux System on Legacy BIOS or U.. \ https://github.com/badruzeus/CloverEFI-4MU.git
/tom5760/arch-install.git | Simple bash script to install Arch Linux. \ https://github.com/tom5760/arch-install.git
/berenm/steam-cli.git | Command-line interface to install and execute Steam games \ https://github.com/berenm/steam-cli.git
/SEPIA-Framework/sepia-installation-and-setup.git | Instructions, scripts, tools and files to install, setup and run the SEPIA-.. \ https://github.com/SEPIA-Framework/sepia-installation-and-setup.git
/cawilliamson/ansible-gpdpocket.git | Linux Installer for GPD Pocket \ https://github.com/cawilliamson/ansible-gpdpocket.git
/Nitrux/nx-software-center.git | NX Software Center. A GUI to install and manage AppImages. \ https://github.com/Nitrux/nx-software-center.git
/SystemCrafters/guix-installer.git | A GNU Guix installer image with the full Linux kernel! \ https://github.com/SystemCrafters/guix-installer.git
/hieplpvip/ubuntu_canon_printer.git | Script for installing the Linux CAPT Printer Driver for Canon LBP printers .. \ https://github.com/hieplpvip/ubuntu_canon_printer.git
/risuorg/risu.git | Automation Troubleshooting Framework to validate  and report configuration,.. \ https://github.com/risuorg/risu.git
/Nefelim4ag/League-Of-Legends.git | Linux: League Of Legends www.leagueoflegends.com install/run wrapper \ https://github.com/Nefelim4ag/League-Of-Legends.git
/nicohman/wyvern.git | A simple CLI client for installing and maintaining linux GOG games \ https://github.com/nicohman/wyvern.git
/clearlinux/clr-installer.git | Clear Linux* OS Installer \ https://github.com/clearlinux/clr-installer.git
/phocean/dockerfile-msf.git | This Dockerfile builds a Debian-based Docker container with Metasploit-Fram.. \ https://github.com/phocean/dockerfile-msf.git
/Technomux/hackerpro.git | Hackerpro - All in One Hacking Tool for Linux & Android (Termux) Special fo.. \ https://github.com/Technomux/hackerpro.git
/mrclksr/linux-browser-installer.git | Script to install Linux browsers under a Linux chroot on FreeBSD \ https://github.com/mrclksr/linux-browser-installer.git
/vinyll/certbot-install.git | Install the latest Certbot in a breeze. Great for Ubuntu Focal 20.04, and o.. \ https://github.com/vinyll/certbot-install.git
/aseering/wsl_gui_autoinstall.git | Automatically install X Windows and PulseAudio within a WSL (Bash on Window.. \ https://github.com/aseering/wsl_gui_autoinstall.git
/AdnanHodzic/android-sdk-installer.git | Linux utility which aims to automatically install and configures Android SD.. \ https://github.com/AdnanHodzic/android-sdk-installer.git
/taaem/nodejs-linux-installer.git | This is an universal NodeJS installer for Linux. \ https://github.com/taaem/nodejs-linux-installer.git
/easybuilders/easybuild-easyblocks.git | Collection of easyblocks that implement support for building and installing.. \ https://github.com/easybuilders/easybuild-easyblocks.git
/lukaszlach/kali-desktop.git | :whale: Kali Linux desktop running in Docker on any operating system, in yo.. \ https://github.com/lukaszlach/kali-desktop.git
/si9ma/Archlinux-Installer.git | Arch Linux Installer,Install your Arch Linux more quickly \ https://github.com/si9ma/Archlinux-Installer.git
/burzumishi/linux-baytrail-flexx10.git | Install GNU/Linux on NextBook Flexx 10.1 \ https://github.com/burzumishi/linux-baytrail-flexx10.git
/knoopx/alpine-raspberry-pi.git | Alpine Linux System Install for RPI 2, 3 and 4 \ https://github.com/knoopx/alpine-raspberry-pi.git
/mtesauro/owasp-wte.git | Home of the developement for OWASP WTE - the Web Testing Environment, a col.. \ https://github.com/mtesauro/owasp-wte.git
/kennwhite/install-letsencrypt.git | Suite of installers for the LetsEncrypt official client on every major *nix.. \ https://github.com/kennwhite/install-letsencrypt.git
/m13253/clover-linux-installer.git | Install Clover UEFI emulation environment from Linux \ https://github.com/m13253/clover-linux-installer.git
/fagiani/shellstack.git | ShellStack is a collection of bash scripts to install apps on ubuntu linux \ https://github.com/fagiani/shellstack.git
/grm34/archboot.git |  Arch Linux Installer \ https://github.com/grm34/archboot.git
/proprietary/chromium-widevine.git | How to install Widevine on Chromium on Linux; how to watch Netflix on Chrom.. \ https://github.com/proprietary/chromium-widevine.git
/robertpeteuil/terraform-installer.git | Installer for HashiCorp Terraform - Automatic Download, Extract and Install.. \ https://github.com/robertpeteuil/terraform-installer.git
/angristan/local-dns-resolver.git | Script to install a local Unbound DNS resolver on your Linux machine with D.. \ https://github.com/angristan/local-dns-resolver.git
/yosukes-dev/AmazonWSL.git | Amazon Linux as a WSL Instance. Supports multiple install. \ https://github.com/yosukes-dev/AmazonWSL.git
/Yukinoshita47/Pentest-Tools-Auto-Installer.git | Tool sederhana buat install tool-tool pentest dan forensic bagi pengguna li.. \ https://github.com/Yukinoshita47/Pentest-Tools-Auto-Installer.git
/Kanatoko/MonjaDB.git | MonjaDB is a MongoDB GUI client tool for rapid application development. It .. \ https://github.com/Kanatoko/MonjaDB.git
/Grippy98/Asus-E200HA-Linux-Post-Install-Script.git | A Linux Post install script for The Asus E200HA, X206HA and other Intel Che.. \ https://github.com/Grippy98/Asus-E200HA-Linux-Post-Install-Script.git
/jeanlucaslima/linux-checklist.git | What to install after setting up your fresh new Linux distro. \ https://github.com/jeanlucaslima/linux-checklist.git
/David-Else/developer-workstation-setup-script.git | Post-install script for Fedora and RHEL 8 clones to create your ultimate de.. \ https://github.com/David-Else/developer-workstation-setup-script.git
/patriksvensson/machine.git | Contains my install scripts and configurations for Windows and Linux \ https://github.com/patriksvensson/machine.git
/priyankgada/The-Complete-Practical-Certified-Ethical-Hacking-Course-in-English.git | Welcome this comprehensive course on Ethical Hacking! This course assumes y.. \ https://github.com/priyankgada/The-Complete-Practical-Certified-Ethical-Hacking-Course-in-English.git
/gjpin/arch-linux.git | Simple and opinionated Arch Linux (post-)install scripts \ https://github.com/gjpin/arch-linux.git
/keeganjk/kali-anonymous.git | :bust_in_silhouette: The `anonymous` script from ParrotSec OS and BackBox L.. \ https://github.com/keeganjk/kali-anonymous.git
/termux-desktop/termux-desktop-lxqt.git | Install a simple, fast and beautiful desktop in termux  \ https://github.com/termux-desktop/termux-desktop-lxqt.git
/jantman/puppet-archlinux-macbookretina.git | UNSUPPORTED - Puppet module and accompanying documentation to install/setup.. \ https://github.com/jantman/puppet-archlinux-macbookretina.git
/MarkAYoder/BeagleBoard-exercises.git | This ia collection of files used for my embedded Linux class.  Run ./instal.. \ https://github.com/MarkAYoder/BeagleBoard-exercises.git
/scalabli/sashay.git | Sashay is an automatic installer for useful tools. \ https://github.com/scalabli/sashay.git
/calebccff/pmos-oneplus6.git | DO NOT USE, see link below for updated install guide \ https://github.com/calebccff/pmos-oneplus6.git
/CodigoCristo/arcris.git | Un instalador fcil para Arch Linux  &&  An easy installer for Arch Linux \ https://github.com/CodigoCristo/arcris.git
/megamaced/spotify-easyrpm.git | Download, convert and install the Spotify for Linux package \ https://github.com/megamaced/spotify-easyrpm.git
/cubiclesoft/php-app-server.git | Create lightweight, installable applications written in HTML, CSS, Javascri.. \ https://github.com/cubiclesoft/php-app-server.git
/channel-42/dotfiles.git | My dotfiles for my Arch-Install(s) \ https://github.com/channel-42/dotfiles.git
/Francesco149/protonfit.git | automate installing/running fitgirl repacks on linux with proton. can also .. \ https://github.com/Francesco149/protonfit.git
/MiMillieuh/Photoshop-CC2022-Linux.git | Installer for Photoshop CC 2022 on linux with a GUI \ https://github.com/MiMillieuh/Photoshop-CC2022-Linux.git
/mmckegg/msi-packager.git | Build MSI (Windows Installer) packages on Mac and Linux \ https://github.com/mmckegg/msi-packager.git
/bianjp/archlinux-installer.git | Shell scripts that help install and setup Arch Linux \ https://github.com/bianjp/archlinux-installer.git
/tprasadtp/ubuntu-post-install.git | Effortless, Flexible and Simple Post Install Script for Ubuntu, Linux Mint,.. \ https://github.com/tprasadtp/ubuntu-post-install.git
/Vampire/setup-wsl.git | A GitHub action to install and setup a Linux distribution for the Windows S.. \ https://github.com/Vampire/setup-wsl.git
/szorfein/dots.git | Use chezmoi to install my dotfiles easily on Gentoo, Arch, Void and Debian. \ https://github.com/szorfein/dots.git
/napcs/docbook.git | Short-Attention-Span Docbook is a docbook build chain for OSX, Linux, and W.. \ https://github.com/napcs/docbook.git
/bilguun0203/WSL-ArchLinux.git | Install Arch Linux as a Windows Subsystem for Linux with Launcher App \ https://github.com/bilguun0203/WSL-ArchLinux.git
/rust-embedded/meta-rust-bin.git | Yocto layer for installing Rust toolchain from pre-built binaries \ https://github.com/rust-embedded/meta-rust-bin.git
/SDRausty/TermuxPRoot.git | SetupTermuxPRoot.sh  shall install Linux distributions in Termux on Androi.. \ https://github.com/SDRausty/TermuxPRoot.git
/GM-Script-Writer-62850/PHP-Scanner-Server.git | Allows you to use your Linux install as a web based scanner server thus all.. \ https://github.com/GM-Script-Writer-62850/PHP-Scanner-Server.git
/ramsayleung/dotfiles.git | A shell script to install awesome command for *nix platform and set them up \ https://github.com/ramsayleung/dotfiles.git
/0x00009b/pkget.git | Install packages on any Debian based Linux distro without root or installin.. \ https://github.com/0x00009b/pkget.git
/JohnHammond/archlinux.git | These are my notes and setup scripts while installing and preparing my Arch.. \ https://github.com/JohnHammond/archlinux.git
/goldstrike77/ansible-role-linux-prometheus.git | Ansible role for install and configure standalone or distributed Prometheus.. \ https://github.com/goldstrike77/ansible-role-linux-prometheus.git
/justinesmithies/sxmo-alarm.git | Script to install sxmo onto an Arch Arm barebones image \ https://github.com/justinesmithies/sxmo-alarm.git
/dglt1/optimus-switch-gdm.git | modified version to work with gdm/gnome. includes install script. made for .. \ https://github.com/dglt1/optimus-switch-gdm.git
/zoelabbb/conio.h.git | This is a library conio.h for linux. you can install manual library conio.h.. \ https://github.com/zoelabbb/conio.h.git
/ctf-o-matic/capture-the-flag.git | Helper scripts to remaster Linux Live CD images for the purpose of creating.. \ https://github.com/ctf-o-matic/capture-the-flag.git
/aliuosio/mage2.docker.git | OSX/Linux Docker containers(varnish, nginx, php, elasticsearch, mariadb, re.. \ https://github.com/aliuosio/mage2.docker.git
/anvilsecure/dawgmon.git | dawg the hallway monitor - monitor operating system changes and analyze int.. \ https://github.com/anvilsecure/dawgmon.git
/tiziano88/magic-trackpad-2-linux.git | Instructions for installing the Apple Magic Trackpad 2 on Linux \ https://github.com/tiziano88/magic-trackpad-2-linux.git
/HSBawa/icp-ce-on-linux-containers.git | Multi node IBM Cloud Private Community Edition 3.2.x w/ Kubernetes 1.13.5 i.. \ https://github.com/HSBawa/icp-ce-on-linux-containers.git
/yeokm1/gentoo-on-486.git | Instructions on how to install modern Gentoo Linux on ancient 486-based PCs.. \ https://github.com/yeokm1/gentoo-on-486.git
/asymptotik/crosstool-arm-osx.git | Scripts to install crosstool-ng and generate a cross compiler on osx for ta.. \ https://github.com/asymptotik/crosstool-arm-osx.git
/node-red/linux-installers.git | Node-RED install scripts for various flavours of Linux \ https://github.com/node-red/linux-installers.git
/asottile-archive/pip-custom-platform.git | pip+wheel wrapper which allows you to choose a custom platform name for bui.. \ https://github.com/asottile-archive/pip-custom-platform.git
/Suleman-Elahi/Aurin.git | Aurin is AUR packages installer. Install packages right from AUR website in.. \ https://github.com/Suleman-Elahi/Aurin.git
/sigboe/GPD-ArchISO.git | Tutorial how to install Arch Linux with full disk encryption on GPD Pocket \ https://github.com/sigboe/GPD-ArchISO.git
/Excale/nLaunchy.git | Set of programs and crafted OS updates enabling users to install and launch.. \ https://github.com/Excale/nLaunchy.git
/mriza/XMind-Linux-Installer.git | A simple BASH script to install XMind in Linux \ https://github.com/mriza/XMind-Linux-Installer.git
/TorrenTV/Installers.git | TorrenTV Windows, Mac and Linux Installers \ https://github.com/TorrenTV/Installers.git
/sakaki-/genup.git | Utility to update the Portage tree, all installed packages, and kernel, und.. \ https://github.com/sakaki-/genup.git
/greyltc-org/docker-archlinux-aur.git | The Official Arch Linux Docker image after installing an AUR helper. \ https://github.com/greyltc-org/docker-archlinux-aur.git
/kerolloz/go-installer.git |  A simple shell script to install the Go :blue_heart: programming language.. \ https://github.com/kerolloz/go-installer.git
/CSMarckitus/Photoshop.git | This program written in C will help you to automatically install everything.. \ https://github.com/CSMarckitus/Photoshop.git
/PaloAltoNetworks/minemeld-ansible.git | Ansible playbook for installing MineMeld on Linux \ https://github.com/PaloAltoNetworks/minemeld-ansible.git
/ebirbe/tlwn722n-linux-install.git | An automatic installer for Wireless USB device "TP-LINK TL-WN722N" or any o.. \ https://github.com/ebirbe/tlwn722n-linux-install.git
/Diolinux/amd-opencl-pro-linux-resolve.git | Shell Script to install AMD OpenCL PRO over Mesa Driver \ https://github.com/Diolinux/amd-opencl-pro-linux-resolve.git
/jsf9k/ansible-arch-install.git | Ansible code for installing and configuring Arch Linux \ https://github.com/jsf9k/ansible-arch-install.git
/joshskidmore/gpd-pocket-2-arch-guide.git | Guide to installing Arch Linux on the GPD Pocket 2 \ https://github.com/joshskidmore/gpd-pocket-2-arch-guide.git
/dvilelaf/alfred.git | A script to install all your favourite applications and perform the most co.. \ https://github.com/dvilelaf/alfred.git
/amancevice/docker-pandas.git | Base Docker image for Pandas installed on Debian/Alpine Linux \ https://github.com/amancevice/docker-pandas.git
/greyltc/docker-LAMP.git | defines a docker container running Arch Linux with the LAMP stack installed \ https://github.com/greyltc/docker-LAMP.git
/duckmayr/install-update-r-on-linux.git | Simple instructions for installing or updating R on Ubuntu Linux or Linux M.. \ https://github.com/duckmayr/install-update-r-on-linux.git
/CerebruxCode/Archon.git |    Arch Linux Installer \ https://github.com/CerebruxCode/Archon.git
/brpaz/my-linux-setup.git | My Fedora Linux list of installed applications and Ansible provision script.. \ https://github.com/brpaz/my-linux-setup.git
/qarmin/Rusty-Linux.git | Simple script to install most basic Rust apps as alternative to default one \ https://github.com/qarmin/Rusty-Linux.git
/erikdubois/Themes-Icons-Pack.git | Script to download and install all interesting themes and icons for Linux M.. \ https://github.com/erikdubois/Themes-Icons-Pack.git
/hradec/pipeVFX.git | A Visual Effects pipeline to manage jobs, shots and software assignment, wi.. \ https://github.com/hradec/pipeVFX.git
/MatMoul/archdi-pkg.git | Arch Linux Desktop Installer Packages \ https://github.com/MatMoul/archdi-pkg.git
/FasterMelee/FasterMelee-installer.git | Linux cross-distro compatible installer/builder for Faster Melee \ https://github.com/FasterMelee/FasterMelee-installer.git
/sethgoldin/install-davinci-resolve-centos.git | A guide on how to install DaVinci Resolve on CentOS Linux \ https://github.com/sethgoldin/install-davinci-resolve-centos.git
/Randomblock1/checkra1n-linux.git | checkra1n installer for all linux platforms \ https://github.com/Randomblock1/checkra1n-linux.git
/naparuba/check-linux-by-ssh.git | Shinken checks designed to be run without installing something on the dista.. \ https://github.com/naparuba/check-linux-by-ssh.git
/HereInPlainSight/gshade_installer.git | GShade Installer / Updater Bash Script for Linux \ https://github.com/HereInPlainSight/gshade_installer.git
/noryb009/lick.git | Install Puppy Linux in a few clicks. \ https://github.com/noryb009/lick.git
/redrootmin/bzu-gmb.git | bzu-gmb is auto-installer linux gaming tools,  development, graphic\video e.. \ https://github.com/redrootmin/bzu-gmb.git
/coto/server-easy-install.git | Install a Linux Server fast, easy and secure. A perfect tool to config your.. \ https://github.com/coto/server-easy-install.git
/hdk5/ArtixWSL.git | Install Artix Linux as a WSL Instance. \ https://github.com/hdk5/ArtixWSL.git
/CEMULinux/cemutil.git | Simple script to assist in installing and launching CEMU on Linux \ https://github.com/CEMULinux/cemutil.git
/faheel/desktop-entry-creator.git | A user-friendly GUI for creating desktop entries for installed applications.. \ https://github.com/faheel/desktop-entry-creator.git
/Tooloop/Tooloop-OS.git | Tooloop OS is a minimal installation of Ubuntu Server with some post-instal.. \ https://github.com/Tooloop/Tooloop-OS.git
/fdaciuk/install-linux.git | Softwares to install on Linux \ https://github.com/fdaciuk/install-linux.git
/hkuchampudi/Windscribe.git | Windscribe CLI Installer for Arch Linux \ https://github.com/hkuchampudi/Windscribe.git
/erikdubois/LinuxMint18i3.git | How to install i3 on Linux Mint 18 Cinnamon and copy all my settings in the.. \ https://github.com/erikdubois/LinuxMint18i3.git
/liangcj/AcerC720CrunchBang.git | Installing and configuring CrunchBang Linux on the Acer C720 \ https://github.com/liangcj/AcerC720CrunchBang.git
/SecFathy/Bugzee.git | Simple Script to install recommended Bug Bounty Hunting Tools In Your Linux.. \ https://github.com/SecFathy/Bugzee.git
/mbednarek360/dotfiles.git | Personal dotfiles for my Arch / BSPWM install. \ https://github.com/mbednarek360/dotfiles.git
/hackingmastert56/Venom-Tools-Installer.git | Venom-Tool-Installer is a Kali Linux hacking tools installer for Termux and.. \ https://github.com/hackingmastert56/Venom-Tools-Installer.git
/linuxmint/mint4win.git | Windows installer for Linux Mint based on Wubi \ https://github.com/linuxmint/mint4win.git
/TrevorSundberg/apt-lock.git | Deterministically install Linux packages (think package-lock.json). \ https://github.com/TrevorSundberg/apt-lock.git
/CNTRUN/Termux-command.git | char const* const commands[] = { "aapt", " aapt", " zipalign", "abduco", " .. \ https://github.com/CNTRUN/Termux-command.git
/TCattd/sublime-text-linux-installer.git | Sublime Text Linux Installer \ https://github.com/TCattd/sublime-text-linux-installer.git
/shaynewang/piafedora.git | PIA installer for fedora linux \ https://github.com/shaynewang/piafedora.git
/michaelsbradleyjr/vps-setup.git | A collection of notes and tips for basic setup and security lockdown of a L.. \ https://github.com/michaelsbradleyjr/vps-setup.git
/justxi/rocm.git | Ebuilds to install ROCM on Gentoo Linux \ https://github.com/justxi/rocm.git
/Yepoleb/gogextract.git | Script for unpacking GOG Linux installers \ https://github.com/Yepoleb/gogextract.git
/cdbbnnyCode/modpack-installer.git | CurseForge modpack installer for Linux users \ https://github.com/cdbbnnyCode/modpack-installer.git
/risecid/parrot-in-termux.git | Installing Parrot Os With Termux \ https://github.com/risecid/parrot-in-termux.git
/jackind424/Tool-X.git | Tool-X is a kali linux hacking Tool installer. Tool-X developed for termux .. \ https://github.com/jackind424/Tool-X.git
/blackshark2/world.git | All Commands BlackMafia No 1 apt update apt upgrade pkg install python pkg.. \ https://github.com/blackshark2/world.git
/erikdubois/LinuxMint182i3.git | How to install i3 on Linux Mint 18.2 Cinnamon, XFCE, Mate, Debian and copy .. \ https://github.com/erikdubois/LinuxMint182i3.git
/wrzlbrmft/arch-pi.git | A simple script automatically installing Arch Linux for the Raspberry Pi. \ https://github.com/wrzlbrmft/arch-pi.git
/Lateralus138/blackhosts.git | This is a cross-platform hosts file installer for hosts files found at the .. \ https://github.com/Lateralus138/blackhosts.git
/punkave/OptimumPHP.git | Optimum PHP installs and optimizes PHP for Ubuntu and CentOS Linux servers... \ https://github.com/punkave/OptimumPHP.git
/potts99/Linux-Post-Install.git | Scripts to Automate Linux Post Install's \ https://github.com/potts99/Linux-Post-Install.git
/mikemol/gentoo-install.git | An install script for Gentoo Linux \ https://github.com/mikemol/gentoo-install.git
/Klairm/Linux-Gaming-Setup.git | A python script which allow users to install drivers and programs of utilit.. \ https://github.com/Klairm/Linux-Gaming-Setup.git
/cobalt2727/L4T-Megascript.git | All-in-one installer and updater for popular programs on L4T Ubuntu with no.. \ https://github.com/cobalt2727/L4T-Megascript.git
/eprigorodov/mkosxinstallusb.git | Linux shell script that creates USB flash drive booting OS X installer \ https://github.com/eprigorodov/mkosxinstallusb.git
/gsoft-inc/ansible-role-azure-devops-agent.git | An Ansible role that installs and configures a Linux machine to be used as .. \ https://github.com/gsoft-inc/ansible-role-azure-devops-agent.git
/elrzn/acme-wsl.git | Install acme / plan9port on Windows Subsystem for Linux \ https://github.com/elrzn/acme-wsl.git
/geraldoahnert/kali-my-linux.git | Install Kali Linux Tools & Others on your Linux. \ https://github.com/geraldoahnert/kali-my-linux.git
/nachovizzo/must-have-tools.git | This is a wikisitory meant to provide some core guidelines on what to do af.. \ https://github.com/nachovizzo/must-have-tools.git
/octetz/linux-desktop.git | How I setup my desktop after Linux is installed \ https://github.com/octetz/linux-desktop.git
/rickellis/Arch-Linux-Install-Guide.git | Installing Arch Linux on a LUKS Encrypted Drive using LVM, and booting with.. \ https://github.com/rickellis/Arch-Linux-Install-Guide.git
/siredmar/winepatchfusion360installer.git | Contains a script that makes the Fusion 360 installer install in Linux usin.. \ https://github.com/siredmar/winepatchfusion360installer.git
/satriobintang1bersaudara/satriocyber.git | #!/bin/bash # Auto Install Tools v.2.1 # recoded By Satrio Kusbiyantoro  # .. \ https://github.com/satriobintang1bersaudara/satriocyber.git
/ivan-hc/AM-Application-Manager.git | CLI to install / update / manage AppImage packages, official standalone app.. \ https://github.com/ivan-hc/AM-Application-Manager.git
/openSUSE/yomi.git | Yet one more installer \ https://github.com/openSUSE/yomi.git
/VonC/compileEverything.git | Download sources, configure, build and install usual libs and apps on Linux.. \ https://github.com/VonC/compileEverything.git
/joshskidmore/gpd-micropc-arch-guide.git | Guide to installing Arch Linux on the GPD MicroPC \ https://github.com/joshskidmore/gpd-micropc-arch-guide.git
/onemorepereira/fedora_workstation_builder.git | This project is intended to help teams and individuals currently using a Fe.. \ https://github.com/onemorepereira/fedora_workstation_builder.git
/C-X1/PyFlashAero.git | Python scripts for using the Toshiba FlashAir Wifi SD Cards on Linux, you.. \ https://github.com/C-X1/PyFlashAero.git
/AbirHasan2005/EngineRipper.git | This is a automation of installing some important tools which all Linux & T.. \ https://github.com/AbirHasan2005/EngineRipper.git
/LibrePhotos/librephotos-linux.git | Here you can find the installation script for a local Linux install. \ https://github.com/LibrePhotos/librephotos-linux.git
/minad/pacgem.git | Gem installer for Arch Linux \ https://github.com/minad/pacgem.git
/neurobin/oraji.git | Oracle java installler script for linux \ https://github.com/neurobin/oraji.git
/fgci-org/ansible-role-slurm.git | For installing and configuring SLURM - Simple Linux Utility for Resource Ma.. \ https://github.com/fgci-org/ansible-role-slurm.git
/nazarimilad/iota-node.git | A CLI and TUI to install and manage a full IOTA node \ https://github.com/nazarimilad/iota-node.git
/subnut/nvim-ghost.nvim.git | :ghost: GhostText plugin for Neovim with zero dependencies :tada: Supports .. \ https://github.com/subnut/nvim-ghost.nvim.git
/zszszszsz/.config.git | # # Automatically generated file; DO NOT EDIT. # OpenWrt Configuration # CO.. \ https://github.com/zszszszsz/.config.git
/jbschooley/MCSLI.git | A simple minecraft server installer for Linux \ https://github.com/jbschooley/MCSLI.git
/qiime/qiime-deploy.git | Tool to easily install QIIME's dependencies on Linux systems \ https://github.com/qiime/qiime-deploy.git
/angeltoast/feliz2.git | The discontinued Feliz independent Arch Linux installer project \ https://github.com/angeltoast/feliz2.git
/megastep/loki_setup.git | The Loki Setup installer for Linux / UNIX \ https://github.com/megastep/loki_setup.git
/jnaqsh/ffmpeg_installer.git | A Linux Shell Script for compiling, installing and uninstalling FFmpeg in C.. \ https://github.com/jnaqsh/ffmpeg_installer.git
/dosza/LAMWManager-linux.git | A  installer  to  generate Lazarus IDE [and all equirements!] ready to deve.. \ https://github.com/dosza/LAMWManager-linux.git
/agross/dnf-automatic-restart.git | Restart machine or services after dnf-automatic installed updates \ https://github.com/agross/dnf-automatic-restart.git
/dmrub/portable-node.git | Install node.js locally on Windows and Linux without administrator rights \ https://github.com/dmrub/portable-node.git
/qidiso/mxnet-retrain.git | Create mxnet finetuner (retrain) for mac/linux ,no need install docker and .. \ https://github.com/qidiso/mxnet-retrain.git
/fearedbliss/bliss-initramfs.git | Generates an initramfs image with all files needed to boot your Gentoo Linu.. \ https://github.com/fearedbliss/bliss-initramfs.git
/linuxmobile/dwm-dots.git |  An easy way to install DWM + Dots \ https://github.com/linuxmobile/dwm-dots.git
/jorgeluiscarrillo/arch-setup.git | Graphical menu-driven installer for Arch Linux. \ https://github.com/jorgeluiscarrillo/arch-setup.git
/wrzlbrmft/arch-install.git | A highly configurable script automatically installing Arch Linux. \ https://github.com/wrzlbrmft/arch-install.git
/Andrewpk/Microsoft--SQL-Server--ODBC-Driver-1.0-for-Linux-Fixed-Install-Scripts.git | Microsoft SQL Server ODBC Driver 1.0 for Linux Fixed Install Scripts \ https://github.com/Andrewpk/Microsoft--SQL-Server--ODBC-Driver-1.0-for-Linux-Fixed-Install-Scripts.git
/CrowdStrike/ansible_collection_falcon.git | Install and configure CrowdStrike's Falcon sensor via Ansible. \ https://github.com/CrowdStrike/ansible_collection_falcon.git
/yurisuki/osu-install-old.git |  Auto-install osu! on Linux. \ https://github.com/yurisuki/osu-install-old.git
/kdrapel/x96mini_linux.git | How to install a Linux (Armbian) on a cheap X96 Mini TV box. This can be us.. \ https://github.com/kdrapel/x96mini_linux.git
/illvart/termux-alpine.git | Bash script for installing Alpine Linux in Termux - 100 MB. \ https://github.com/illvart/termux-alpine.git
/hippie68/psxitarch-how-to.git | Shows you how to install and configure psxitarch v2 to enable Wi-Fi and ful.. \ https://github.com/hippie68/psxitarch-how-to.git
/arch-linux-calamares-installer/alci-iso.git | Arch Linux Calamares Installer \ https://github.com/arch-linux-calamares-installer/alci-iso.git
/Matt-London/Install-Armitage-on-Linux.git | This is a program that will install Metasploit-Framework and Armitage on to.. \ https://github.com/Matt-London/Install-Armitage-on-Linux.git
/alinstaller/alinstaller.git | AL Installer - Offline Arch Linux installer inspired by Anarchy / Arch Anyw.. \ https://github.com/alinstaller/alinstaller.git
/neo4j-contrib/neo4j-puppet.git | Puppet module for installing Neo4j on Linux systems \ https://github.com/neo4j-contrib/neo4j-puppet.git
/frederickding/xenserver-kickstart.git | Kickstart scripts for installing paravirtualized Linux guests, with distrib.. \ https://github.com/frederickding/xenserver-kickstart.git
/leycec/fsnrnue.git | Lutris-based Linux installer for Fate/stay night [Ralta Nua] Ultimate Edit.. \ https://github.com/leycec/fsnrnue.git
/altercation/arch-by-hand.git | Arch Linux install script to be used with Archboot install media in EFI mod.. \ https://github.com/altercation/arch-by-hand.git
/Tomato6966/Debian-Cheat-Sheet-Setup.git | How to setup your linux server and install nodejs, python, ffmpeg and java... \ https://github.com/Tomato6966/Debian-Cheat-Sheet-Setup.git
/lpar/goup.git | Command to install or update Go on macOS, BSD or Linux \ https://github.com/lpar/goup.git
/binary-manu/arch-ansible.git | An Ansible playbook to install Arch Linux \ https://github.com/binary-manu/arch-ansible.git
/wrzlbrmft/arch-odroid.git | A simple script automatically installing Arch Linux for the ODROID. \ https://github.com/wrzlbrmft/arch-odroid.git
/devangshekhawat/Fedora-36-Post-Install-Guide.git | Things to do after installing Fedora 36 \ https://github.com/devangshekhawat/Fedora-36-Post-Install-Guide.git
/allanjude/depenguinator.git | Use depenguinator 3.x to overwrite a remote linux server with a FreeBSD ins.. \ https://github.com/allanjude/depenguinator.git
/Hackingzone/winpirate.git | to grab or steal the password of systemAutomated sticky keys hack. Post exp.. \ https://github.com/Hackingzone/winpirate.git
/rramatchandran/big-o-performance-java.git | # big-o-performance A simple html app to demonstrate performance costs of d.. \ https://github.com/rramatchandran/big-o-performance-java.git
/SinusBot/installer-linux.git |  SinusBot Installer for Debian, Ubuntu and CentOS - Installs the SinusBot .. \ https://github.com/SinusBot/installer-linux.git
/zayotic/blacktoolin.git | Automatically install BlackArch Linux tools \ https://github.com/zayotic/blacktoolin.git
/goodthebest/Install-Setup-Yiimp-Mining-Pool-Software-Ubuntu-Linux.git | Start a Mining Pool, Software, Script to Install, Configure & Setup Yiimp C.. \ https://github.com/goodthebest/Install-Setup-Yiimp-Mining-Pool-Software-Ubuntu-Linux.git
/erikdubois/LinuxMint173i3.git | How to install i3 on Linux Mint 17.3 \ https://github.com/erikdubois/LinuxMint173i3.git
/smxi/sgfxi.git | sgfxi is a self-updating nvidia, ati/amd fglrx, and xorg free driver instal.. \ https://github.com/smxi/sgfxi.git
/richgel999/simple_opencl.git | Simple C++ sample showing how to use OpenCL v1.2 on Windows/Linux/OSX with .. \ https://github.com/richgel999/simple_opencl.git
/vbotka/ansible-linux-postinstall.git | Ansible role. Post-install configuration of Linux. \ https://github.com/vbotka/ansible-linux-postinstall.git
/europa502/Installing-Nvidia-drivers-on-Kali-Linux.git | Install Nvidia drivers on Kali Linux safely in 10 easy steps. \ https://github.com/europa502/Installing-Nvidia-drivers-on-Kali-Linux.git
/lesovsky/ansible-postgresql-on-el6.git | Install PostgreSQL on Enterprise Linux 6 distributions (RHEL/Centos/Scienti.. \ https://github.com/lesovsky/ansible-postgresql-on-el6.git
/shivamgly/Google-Chrome-Portable-maker-for-linux.git | GCPM(Google Chrome Portable Maker) makes google chrome portable, So that it.. \ https://github.com/shivamgly/Google-Chrome-Portable-maker-for-linux.git
/ivan-hc/AppMan.git | AppImage installer/updater/manager that works like APT or Pacman. \ https://github.com/ivan-hc/AppMan.git
/seapagan/ubuntu-win-bootstrap.git | DEPRECIATED! Use "linux-comfy-chair" instead. A very simple bootstrap scrip.. \ https://github.com/seapagan/ubuntu-win-bootstrap.git
/hackcrypto/fluxion.git | Fluxion is a security auditing and social-engineering research tool. It is .. \ https://github.com/hackcrypto/fluxion.git
/Cybolic/LinReaper.git | Reaper installer for Linux \ https://github.com/Cybolic/LinReaper.git
/Toxblh/tizen-studio-arch.git | How to install TizenStudio on Arch Linux \ https://github.com/Toxblh/tizen-studio-arch.git
/openspace42/raptor.git | The definitive EasyEngine installer with fully functional backup-restore an.. \ https://github.com/openspace42/raptor.git
/raducotescu/vmware-server-linux-2.6.3x-kernel.git | provides a bash script and a patch for installing VMware Server 2.0.x on th.. \ https://github.com/raducotescu/vmware-server-linux-2.6.3x-kernel.git
/am11/VoidMuslWSL.git | Install Void Linux (with musl-libc) as a WSL Instance (for Windows 10 1803 .. \ https://github.com/am11/VoidMuslWSL.git
/plone/Installers-UnifiedInstaller.git | Linux/BSD/OSX Installer \ https://github.com/plone/Installers-UnifiedInstaller.git
/bryteise/ister.git | Minimal Linux Installer \ https://github.com/bryteise/ister.git
/nodester/nodester-installer.git | MacOSX and Linux Install Scripts \ https://github.com/nodester/nodester-installer.git
/tschifftner/ansible-role-mariadb.git | Installs MariaDB on Debian/Ubuntu linux servers. \ https://github.com/tschifftner/ansible-role-mariadb.git
/borninfreedom/linux-assistant.git | A software named linux-assistant that can direct install apps and config sy.. \ https://github.com/borninfreedom/linux-assistant.git
/edisionnano/Pine-jinx.git | A local Ryujinx installer for linux \ https://github.com/edisionnano/Pine-jinx.git
/teamblueridge/adb-fastboot-install.git | Installs ADB & Fastboot on Linux and Mac OS X \ https://github.com/teamblueridge/adb-fastboot-install.git
/thiagoralves/ScadaBR_Installer.git | Script to install ScadaBR on Linux machines (x86 and x64 only) \ https://github.com/thiagoralves/ScadaBR_Installer.git
/jonlabelle/docker-network-tools.git | A Docker image with various network tools pre-installed. \ https://github.com/jonlabelle/docker-network-tools.git
/FerryAr/lhroot.git | Linux Chroot Installer & Bootscript Magisk Module. \ https://github.com/FerryAr/lhroot.git
/Kerryliu/Native-Linux-on-Dell-Chromebook-13.git | A guide for installing Linux natively on the Dell Chromebook 13 \ https://github.com/Kerryliu/Native-Linux-on-Dell-Chromebook-13.git
/mdavid/DarwinStreamingServer-Linux.git | Patched source files and install scripts for DarwinStreamingServer v6.0.3 w.. \ https://github.com/mdavid/DarwinStreamingServer-Linux.git
/Ferk/apt-linker.git | browser extension that turns "apt-get install" lines into clickable apturl .. \ https://github.com/Ferk/apt-linker.git
/rcguy/ts3server.git | Auto Install the Linux TeamSpeak 3 Server on Ubuntu \ https://github.com/rcguy/ts3server.git
/paulwinex/houdini_install_script.git | Auto install Houdini script for Windows and Linux \ https://github.com/paulwinex/houdini_install_script.git
/icculus/mojosetup.git | A standalone installer for Linux software. \ https://github.com/icculus/mojosetup.git
/tibiamaps/tibia-maps-installer-linux.git | :wrench: A shell script that downloads and installs Tibia maps on Linux hos.. \ https://github.com/tibiamaps/tibia-maps-installer-linux.git
/dinukasal/install.git | Install any package on linux with high level commands eg. "lamp", "mean", ".. \ https://github.com/dinukasal/install.git
/verdaccio/ansible-verdaccio.git | Ansible role that is capable of installing and configuring Verdaccio on var.. \ https://github.com/verdaccio/ansible-verdaccio.git
/whatheway/WRF-4.3.3-install-script-linux-64bit.git | This is a script that installs all the libraries, software, programs, and g.. \ https://github.com/whatheway/WRF-4.3.3-install-script-linux-64bit.git
/erikdubois/ArchXfce4.git | Automated script to install Xfce and all its programs on Arch Linux  \ https://github.com/erikdubois/ArchXfce4.git
/hunger/cleanroom.git | Cleanroom Arch Linux installs \ https://github.com/hunger/cleanroom.git
/k0fin/arsenal.git | An automated Python script which installs an extra arsenal of penetration t.. \ https://github.com/k0fin/arsenal.git
/pepaslabs/pogoplug_mobile_uboot_installer.git | A script which installs uboot onto a Pogoplug Mobile or Pogoplug Series 4 (.. \ https://github.com/pepaslabs/pogoplug_mobile_uboot_installer.git
/elmiba/Teams.git | This is a Chromium-based WebApp for Microsoft Teams designed to run on a Ra.. \ https://github.com/elmiba/Teams.git
/shinokada/awesome.git | The awesome is a simple shell script package manager. Awesome installs a sh.. \ https://github.com/shinokada/awesome.git
/jaxparrow07/Androidx86-Installer-Linux.git | Advanced Android x86 Installer for Linux \ https://github.com/jaxparrow07/Androidx86-Installer-Linux.git
/ibnYusrat/my-linux-setup.git | I run this script on a fresh install of Linux, so that it sets everything u.. \ https://github.com/ibnYusrat/my-linux-setup.git
/0x0I/ansible-role-systemd.git | Install and configure systemd units: system and service managers for Linux .. \ https://github.com/0x0I/ansible-role-systemd.git
/mpclarkson/perfect-swift-linux.git | Vagrantfile to install Swift and Perfect on Linux \ https://github.com/mpclarkson/perfect-swift-linux.git
/kapsakcj/win10-linux-conda-how-to.git | A tutorial on how to set up a Linux environment on a computer running Windo.. \ https://github.com/kapsakcj/win10-linux-conda-how-to.git
/gw0/docker-alpine-kernel-modules.git | Install missing Alpine Linux kernel modules from a privileged Docker contai.. \ https://github.com/gw0/docker-alpine-kernel-modules.git
/harry-cpp/monodevelop-run-installer.git | A simple .run installer for MonoDevelop  \ https://github.com/harry-cpp/monodevelop-run-installer.git
/dirtyhawk/stata-integration.git | A bundled Linux binary script integrating an already installed Stata instan.. \ https://github.com/dirtyhawk/stata-integration.git
/SDRausty/termux-arch.git | You can use setupTermuxArch.sh  to install Arch Linux in Termux on Android.. \ https://github.com/SDRausty/termux-arch.git
/DEVLOPRR/bread.git | :bread: Install, update and remove AppImage from your CLI. \ https://github.com/DEVLOPRR/bread.git
/marcoDallas/acpi_call_GUI_systemd.git | This is a java program that allows the user to simply install and use acpi_.. \ https://github.com/marcoDallas/acpi_call_GUI_systemd.git
/hradec/poors-man-ip-kvm.git | It's just ridiculous the price for an IP KVM solution. I simply can't get a.. \ https://github.com/hradec/poors-man-ip-kvm.git
/asin929/awesome-linux-software.git | All  classical softwares in linux, including  classification, installing, c.. \ https://github.com/asin929/awesome-linux-software.git
/paolorotolo/spotify-linux-installer.git | Install latest Spotify on Linux \ https://github.com/paolorotolo/spotify-linux-installer.git
/linuxdeploy/linuxdeploy-plugin-conda.git | Python plugin for linuxdeploy. Sets up miniconda in an AppDir and installs .. \ https://github.com/linuxdeploy/linuxdeploy-plugin-conda.git
/RocketChat/install.sh.git | command line tool to help you install and configure a RocketChat server in .. \ https://github.com/RocketChat/install.sh.git
/verbosemode/public-notes.git | My public (install) notes. /me doing linux/networking/... networking things \ https://github.com/verbosemode/public-notes.git
/adityadrs/Kali-Scripts.git | A collection of scripts to run on a fresh install of kali linux \ https://github.com/adityadrs/Kali-Scripts.git
/kl3jvi/termium.git |  Installation guide application for installing open-source hacking tools i.. \ https://github.com/kl3jvi/termium.git
/pettarin/setup-festival-mbrola.git | A Bash script for Linux and Mac OS X to download/compile/install Festival, .. \ https://github.com/pettarin/setup-festival-mbrola.git
/alistanis/silentinstall.git | Ever wanted to automate installing loud linux/unix packages or scripts? Now.. \ https://github.com/alistanis/silentinstall.git
/mypiaware/virtual-radar-server-installation.git | A Linux installation script to easily install and enhance Virtual Radar Ser.. \ https://github.com/mypiaware/virtual-radar-server-installation.git
/Cr3atable/LinuxED.git | LinuxED is an installer for EnhancedDiscord specifically made for Linux and.. \ https://github.com/Cr3atable/LinuxED.git
/Lichtlos/MSF-Installer.git | Script to help with installing and configuring Metasploit Framework, Armita.. \ https://github.com/Lichtlos/MSF-Installer.git
/erikdubois/LinuxMint181i3.git | How to install i3 on Linux Mint 18.1 Cinnamon, XFCE, Mate, Debian and copy .. \ https://github.com/erikdubois/LinuxMint181i3.git
/erikdubois/ArchOpenbox.git | Automated script to install Openbox and all its programs on Arch Linux  \ https://github.com/erikdubois/ArchOpenbox.git
/shelmangroup/coreos-gpu-installer.git | Scripts to build and use a container to install GPU drivers on CoreOS Conta.. \ https://github.com/shelmangroup/coreos-gpu-installer.git
/tortuvshin/installer.git | Installer is a collection of bash scripts to install apps on ubuntu \ https://github.com/tortuvshin/installer.git
/anubisthejackle/kali-openvas-install.git | OpenVAS / Greenbone Vulnerability Manager (GVM) 11 Install Script for Kali .. \ https://github.com/anubisthejackle/kali-openvas-install.git
/Dejvino/pinephone-arch-install.git | Install scripts to deploy Arch Linux ARM to PinePhone \ https://github.com/Dejvino/pinephone-arch-install.git
/Torxed/archinstall_gui.git | Guided Arch Linux graphical installer \ https://github.com/Torxed/archinstall_gui.git
/KamalDGRT/SetupStuff.git | This repository contains the instructions to install various tools that are.. \ https://github.com/KamalDGRT/SetupStuff.git
/ziyaddin/jean.git | Bored from installing tiny shell scripts and .dotfiles manually? Huh! Missi.. \ https://github.com/ziyaddin/jean.git
/cainmagi/FFmpeg-Encoder-Decoder-for-Python.git | This is a C++ based FFmpeg Encoder/Decoder for Python 3.6+ & numpy 1.19+. B.. \ https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python.git
/btd1337/elementary-script.git | A tiny script that helps you perform necessary tasks after you install Ubun.. \ https://github.com/btd1337/elementary-script.git
/kanoi/linux-usb-cgminer.git | Linux USB cgminer install script \ https://github.com/kanoi/linux-usb-cgminer.git
/verysync/verysync-linux-installer.git | verysync linux installer \ https://github.com/verysync/verysync-linux-installer.git
/NullArray/MS-PS-Installer.git | Automated PowerShell installer for *Nix with multi Distro support. \ https://github.com/NullArray/MS-PS-Installer.git
/krmanik/Manjaro-Linux-on-Android.git | Install Manjaro on Android \ https://github.com/krmanik/Manjaro-Linux-on-Android.git
/YourDroid/YourDroid.git | An open-source program installing Android on Windows and Linux \ https://github.com/YourDroid/YourDroid.git
/dbehnke/oracle12c-vagrant.git | Install Oracle 12cR1 using Packer, Vagrant, VirtualBox, Oracle Linux 6 \ https://github.com/dbehnke/oracle12c-vagrant.git
/TMG-nl/openstack-overlay.git | An overlay with the required ebuilds to install and run Openstack on Gentoo.. \ https://github.com/TMG-nl/openstack-overlay.git
/gort818/openjk-launcher.git | Launcher and installer for OpenJk \ https://github.com/gort818/openjk-launcher.git
/rstacruz/arch-installer.git | Install UI for Arch Linux \ https://github.com/rstacruz/arch-installer.git
/Linux-Is-Best/Firefox-automatic-install-for-Linux.git | Automated installation for Mozilla Firefox for The Linux Operating System. .. \ https://github.com/Linux-Is-Best/Firefox-automatic-install-for-Linux.git
/QuailTeam/iQuail.git | Easy to use cross-platform installer & updater for desktop applications \ https://github.com/QuailTeam/iQuail.git
/Francesco149/templeos-on-bare-metal.git | installing TempleOS on bare-metal, dual booting with linux and moving it to.. \ https://github.com/Francesco149/templeos-on-bare-metal.git
/terroo/aptporn.git | Linux Mint, Ubuntu and Debian install bspwm, Polybar, Rofi \ https://github.com/terroo/aptporn.git
/cablelabs/snaps-kubernetes.git | Installation tool to install Kubernetes on a Linux servers \ https://github.com/cablelabs/snaps-kubernetes.git
/binhex/arch-plexpass.git | Docker build script for Arch Linux base with Plex Pass Media Server install.. \ https://github.com/binhex/arch-plexpass.git
/GoGoGadgetRepo/ArchInstallMBP.git | Automated scripts to install arch linux on macbook pro 11,4.  \ https://github.com/GoGoGadgetRepo/ArchInstallMBP.git
/kappaio-gateway/kappaio.git | A free and open-sourced Linux ZigBee gateway based on Texas Instrument cc25.. \ https://github.com/kappaio-gateway/kappaio.git
/pxe-cloud/pxe-cloud.git | PXE Cloud is a project that tries to create an easy to setup and easy to ma.. \ https://github.com/pxe-cloud/pxe-cloud.git
/Booyaabes/kali-linux-full-container.git | Kali image with kali-linux-full metapackage installed, build every night. \ https://github.com/Booyaabes/kali-linux-full-container.git
/source-foundry/hack-linux-installer.git | Install and upgrade the Hack typeface on the Linux platform \ https://github.com/source-foundry/hack-linux-installer.git
/robertpeteuil/packer-installer.git | Installer for HashiCorp Packer - Automatic Download, Extract and Install of.. \ https://github.com/robertpeteuil/packer-installer.git
/unfor19/install-aws-cli-action.git | Install AWS CLI on a GitHub Actions Linux host \ https://github.com/unfor19/install-aws-cli-action.git
/liberavia/Install3CXClient.git | Script for easy installing of Windows 3CX-Client on your Linux machine \ https://github.com/liberavia/Install3CXClient.git
/Project-Junk/spotify-adblock-linux.git | script for installing spotify-adblock for ubuntu and popOS based machines \ https://github.com/Project-Junk/spotify-adblock-linux.git
/owl4ce/gentoo-scripts.git | :jack_o_lantern: Benchmark your CPU by installing Gentoo/Linux \ https://github.com/owl4ce/gentoo-scripts.git
/relf108/OSX-KVM-installer.git | An automation of the cli based installation steps for the kholia/OSX-KVM pr.. \ https://github.com/relf108/OSX-KVM-installer.git
/pslobo/dockerized-certbot.git | A Docker container based on Alpine Linux with Certbot installed. \ https://github.com/pslobo/dockerized-certbot.git
/dm0-/installer.git | Secure immutable GNU/Linux distro installer \ https://github.com/dm0-/installer.git
/osiris2600/fedora-setup.git | Post install setup script for Fedora Linux \ https://github.com/osiris2600/fedora-setup.git
/stefanpartheym/mbp15-wifi-driver.git | Scripts to collect or download and install MacBookPro15,2 wifi driver files.. \ https://github.com/stefanpartheym/mbp15-wifi-driver.git
/whatheway/WRFCHEM-4.3.3-install-script-linux-64bit.git | This is a script that installs all the libraries, software, programs, and g.. \ https://github.com/whatheway/WRFCHEM-4.3.3-install-script-linux-64bit.git
/BeanGreen247/Debian_10_Proprietary_NVIDIA_Driver_Install_Guide.git | Steps on installing proprietary NVIDIA drivers on Debian 10. \ https://github.com/BeanGreen247/Debian_10_Proprietary_NVIDIA_Driver_Install_Guide.git
/furesuka/HADRIAN.git | Pantheon Desktop Environment installer script for Arch Linux \ https://github.com/furesuka/HADRIAN.git
/shellkr/pachist.git | A small bash program to show the installed package history in Arch Linux. \ https://github.com/shellkr/pachist.git
/battlesnake/bootserver.git | JAVA: My first Java program, from back in ~2011.  Partial DHCP/BOOTP/TFTP s.. \ https://github.com/battlesnake/bootserver.git
/erikdubois/ArchGnome.git | Automated script to install Gnome and all its programs on Arch Linux \ https://github.com/erikdubois/ArchGnome.git
/MeatReed/3dsend.git | Interface graphique sous Windows et Linux permettant d'installer des cias f.. \ https://github.com/MeatReed/3dsend.git
/Akash1362000/News-Web-App.git | News Web App  built using Python Django  and NewsAPI  Fetches latest new.. \ https://github.com/Akash1362000/News-Web-App.git
/sormy/gentoo-quick-installer.git | Gentoo Linux Quick Installer \ https://github.com/sormy/gentoo-quick-installer.git
/jmutai/tomcat-ansible.git | Ansible Role to install tomcat o Debian, Ubuntu, Fedora and CentOS Linux \ https://github.com/jmutai/tomcat-ansible.git
/RackunSec/Demon-Linux-Installer.git |  The Demon Linux Installer \ https://github.com/RackunSec/Demon-Linux-Installer.git
/AnTAVR/aai.git | Arch Linux installer for beginners \ https://github.com/AnTAVR/aai.git
/ssut/npmws.git | [defunct] NGINX + PHP 5 + MariaDB installer for debian-based Linux. \ https://github.com/ssut/npmws.git
/Zaechus/artix-installer.git | A simple installer for Artix Linux \ https://github.com/Zaechus/artix-installer.git
/D4RkNiK0l4s/Kali-Linux-Generator.git | Kali Linux Generator its a script that automates the building process of ka.. \ https://github.com/D4RkNiK0l4s/Kali-Linux-Generator.git
/tonietto/Elementary-OS-First-Steps.git | :baby_bottle: First steps for configuring a fresh installed eOS \ https://github.com/tonietto/Elementary-OS-First-Steps.git
/dbothwell/remote-linux-monitor.git | The Remote Linux Monitor's graphical user interface is similar to and inspi.. \ https://github.com/dbothwell/remote-linux-monitor.git
/EmperorPenguin18/linux-installer.git | Universal GNU+Linux installer script \ https://github.com/EmperorPenguin18/linux-installer.git
/tabrindle/min-alpine-android-sdk.git | A Dockerfile for a minimal Android SDK install using Alpine Linux \ https://github.com/tabrindle/min-alpine-android-sdk.git
/klaros-testmanagement/klaros-docker.git | Install and configure Klaros Test Management under Docker for Windows and L.. \ https://github.com/klaros-testmanagement/klaros-docker.git
/lucaslamar/setup-linux-debian.git | Installs essential JavaScript development programs. \ https://github.com/lucaslamar/setup-linux-debian.git
/rolandguelle/chromebook-pixel-linux.git | Install and run Linux on a Google Chromebook Pixel (Link) \ https://github.com/rolandguelle/chromebook-pixel-linux.git
/Raizo62/Loki_on_Kali.git | Packages to install Loki on Kali Linux/ParrotOS (Loki is a python based inf.. \ https://github.com/Raizo62/Loki_on_Kali.git
/mrhaydendp/Fire-Tools.git | Tool for debloating and installing Google Play Services on Fire Tablets + M.. \ https://github.com/mrhaydendp/Fire-Tools.git
/inovando/ubuntu-inovando.git | :dvd: Custom Ubuntu Desktop bash script with pre-installed/configured apps .. \ https://github.com/inovando/ubuntu-inovando.git
/saloniamatteo/Arch.git | These are easy, in-depth instructions on how to install Arch Linux. \ https://github.com/saloniamatteo/Arch.git
/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020.git | NOTICE This repository contains the public FTC SDK for the SKYSTONE (2019-2.. \ https://github.com/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020.git
/antoineco/aco-oracle_java.git | Puppet module to install Oracle Java on Linux systems \ https://github.com/antoineco/aco-oracle_java.git
/BugRoger/coreos-nvidia-driver.git | Compile, Install and Update NVIDIA Drivers for CoreOS Container Linux \ https://github.com/BugRoger/coreos-nvidia-driver.git
/zezhyrule/dotfiles.git | All my dots for Linux installs \ https://github.com/zezhyrule/dotfiles.git
/blairg/docker-node-sass-alpine.git | Dockerfile which installs Node-SASS in an Alpine Linux image. Node 8.9.4 \ https://github.com/blairg/docker-node-sass-alpine.git
/ffries/Debian-installer-with-serial-console.git | Unofficial Debian GNU/Linux installer with serial console on /dev/ttyS0 wit.. \ https://github.com/ffries/Debian-installer-with-serial-console.git
/cdsteinkuehler/QuartusBuildVMs.git | Details for installing Quartus on Linux (via VMs and Docker containers) to .. \ https://github.com/cdsteinkuehler/QuartusBuildVMs.git
/erikdubois/ArchBudgie.git | Automated script to install Budgie and all its programs on Arch Linux  \ https://github.com/erikdubois/ArchBudgie.git
/BiteDasher/vkid.git | Interactive Arch Linux installer (on Russian) \ https://github.com/BiteDasher/vkid.git
/Yleisradio/chtf.git | Terraform version switcher with automatic install \ https://github.com/Yleisradio/chtf.git
/magnunleno/Anarchy.git | A tool with the intend to help installing the amazing Arch Linux distributi.. \ https://github.com/magnunleno/Anarchy.git
/antonio-petricca/buddy-linux.git | Do you remember "Wubi Ubuntu Installer"? This project is both a replacement.. \ https://github.com/antonio-petricca/buddy-linux.git
/andyburris/pebble-setup.git | Instructions for installing the Pebble SDK on Windows, Linux, and macOS \ https://github.com/andyburris/pebble-setup.git
/ssut/npmanager.git | npmanager is the super easy way to install and manage NGINX, PHP and MariaD.. \ https://github.com/ssut/npmanager.git
/nim-lang/niminst.git | EDIT: now archived, see https://github.com/nim-lang/Nim/issues/15946. nimin.. \ https://github.com/nim-lang/niminst.git
/HiDe-Techno-Tips/install-kali-Linux-GUI-Desktop-in-Android-using-Termux.git | This Guide will help you install Kali Linux in Android, that too with a GUI.. \ https://github.com/HiDe-Techno-Tips/install-kali-Linux-GUI-Desktop-in-Android-using-Termux.git
/StnetixDevTeam/ariADDna.git | Web services and desktop application management strategy to use available s.. \ https://github.com/StnetixDevTeam/ariADDna.git
/mnorin/kyocera-ppd-installer.git | Kyocera printer/MFU Linux drivers installer \ https://github.com/mnorin/kyocera-ppd-installer.git
/smx-smx/osx86_linux.git | osx86 install maker and utilities for Linux \ https://github.com/smx-smx/osx86_linux.git
/agaffney/quickstart.git | An installer for Gentoo Linux written in POSIX sh \ https://github.com/agaffney/quickstart.git
/erikdubois/Ultimate-Linux-Mint-17.3.git | Scripts to let the computer install all the software \ https://github.com/erikdubois/Ultimate-Linux-Mint-17.3.git
/mantvmass/os-installer.git | install linux os in termux \ https://github.com/mantvmass/os-installer.git
/frazras/Mautic-Installer.git | Bash script installer for Mautic Marketing Automation Software for Ubuntu L.. \ https://github.com/frazras/Mautic-Installer.git
/edwardoid/cubieboard-arch-installer.git | Install Arch Linux on Cubieboard \ https://github.com/edwardoid/cubieboard-arch-installer.git
/jamalshahverdiev/carp-ucarp-unix-linux.git | The python script automatically installs and configures CARP for UNIX (Free.. \ https://github.com/jamalshahverdiev/carp-ucarp-unix-linux.git
/noobient/killinuxfloor.git | noobient's Killing Floor 2 Linux Server Installer and Manager \ https://github.com/noobient/killinuxfloor.git
/bcarpio/puppet-java.git | A puppet module for installing java's JDK to a Linux server \ https://github.com/bcarpio/puppet-java.git
/nodiscc/distrib-dl.git | Download and verify Linux distribution installers/ISO images [mirror] \ https://github.com/nodiscc/distrib-dl.git
/grandchild/linux_installer.git | Graphical Linux application installer for audiences that are used to Window.. \ https://github.com/grandchild/linux_installer.git
/demartis/matlab_runtime_docker.git | Docker image to run compiled MATLAB applications or components without inst.. \ https://github.com/demartis/matlab_runtime_docker.git
/NicoD-SBC/armbian-gaming.git | Tool to install gaming apps on Armbian Linux/Ubuntu/Debian arm64 \ https://github.com/NicoD-SBC/armbian-gaming.git
/BiteDasher/archbashstrap.git | Install/Bootstrap Arch Linux system without using pacman \ https://github.com/BiteDasher/archbashstrap.git
/Cryptolens/license-server.git | License server that can be installed by your clients on-premise, especially.. \ https://github.com/Cryptolens/license-server.git
/choueric/kbdashboard.git | Tool to configure, build and install multiple linux kernels. \ https://github.com/choueric/kbdashboard.git
/goldboot/goldboot.git | Automated OS installs with CI \ https://github.com/goldboot/goldboot.git
/Z3R0-1337/onex.git | " Onex is a kali linux hacking tools installer for termux and other linux d.. \ https://github.com/Z3R0-1337/onex.git
/dunkelstern/symbolicate_crash.git | Ruby script to symbolicate Apple crash reports on a linux or osx server, ne.. \ https://github.com/dunkelstern/symbolicate_crash.git
/GBHacker-com/Wi-Fi-Hack-In-Parrat-Os-and-Kali-Linux.git | Hey, Today Im going to tell you about How you can Install Parrot OS on And.. \ https://github.com/GBHacker-com/Wi-Fi-Hack-In-Parrat-Os-and-Kali-Linux.git
/VoidSec/shopping-cart.git | Shopping Cart is a free, open source web application provided to allow secu.. \ https://github.com/VoidSec/shopping-cart.git
/jhuapl-bio/Basestack.git | Basestack is a platform for rapid and real time analysis of Nanopore genera.. \ https://github.com/jhuapl-bio/Basestack.git
/codin-stuffs/cihna-dictatorshrip.git | Anti Chinese government propaganda. https://github.com/cirosantill.. \ https://github.com/codin-stuffs/cihna-dictatorshrip.git
/YangMame/Gentoo-Installer.git | Gentoo-Linux-Install-Script \ https://github.com/YangMame/Gentoo-Installer.git
/martinholovsky/Securix-Linux.git | Securix Main repository including installer and controll scripts \ https://github.com/martinholovsky/Securix-Linux.git
/carlosCharz/installtomcataws.git | Install tomcat 8.x in AWS (Amazon Linux AMI) \ https://github.com/carlosCharz/installtomcataws.git
/Lightcord/lc-installer-linux.git | The installer of Lightcord for Linux ! \ https://github.com/Lightcord/lc-installer-linux.git
/bgilmer77/SoftEther-VPN-Client-Setup-on-Linux.git | How to install and configure SoftEther VPN client on Linux \ https://github.com/bgilmer77/SoftEther-VPN-Client-Setup-on-Linux.git
/suve/vrms-rpm.git | Reports non-free software installed on an RPM-based GNU/Linux system. \ https://github.com/suve/vrms-rpm.git
/nikyo/LeagueofLegends-Linux.git | An easy way to install League of Legends on Linux (Ubuntu...) \ https://github.com/nikyo/LeagueofLegends-Linux.git
/drrlvn/arch-installation-guide.git | A quick guide for installing Arch Linux \ https://github.com/drrlvn/arch-installation-guide.git
/v2fly/alpinelinux-install-v2ray.git | Ash script for installing V2Ray in Alpine Linux operating system \ https://github.com/v2fly/alpinelinux-install-v2ray.git
/k0nze/qemu_zynq_linux_setup.git | Tutorial on installing QEMU to simulate Zynq Devices with Petalinux \ https://github.com/k0nze/qemu_zynq_linux_setup.git
/smbambling/ansible-role-scl.git | This role installs and manages the SCL Software Collections repository, pac.. \ https://github.com/smbambling/ansible-role-scl.git
/neurobin/lampi.git | LAMP installer for Ubuntu \ https://github.com/neurobin/lampi.git
/hyprsoftcorp/IoTCoreAppUpdates.git | Service to remotely update .NET Core 2.2 apps installed on IoT devices runn.. \ https://github.com/hyprsoftcorp/IoTCoreAppUpdates.git
/plesk/wpchk.git | Scan script for a quick security check of all installed WordPress instances.. \ https://github.com/plesk/wpchk.git
/macton/arch-linux-install-notes.git | Notes on installing Arch Linux \ https://github.com/macton/arch-linux-install-notes.git
/throwawaygh/arch-openrc-guide.git | A guide for installing OpenRC on Arch Linux \ https://github.com/throwawaygh/arch-openrc-guide.git
/AOSC-Dev/WSAOSC.git | AOSC OS on Windows Subsystem for Linux | Installer \ https://github.com/AOSC-Dev/WSAOSC.git
/lexicalunit/dotfiles.git | Install applications and development environment on a macOS or Linux machin.. \ https://github.com/lexicalunit/dotfiles.git
/hpssjellis/google-magenta-midi-music-on-linux-hello-world.git | Bash install scripts to get Google Magenta working easily on a linux ubuntu.. \ https://github.com/hpssjellis/google-magenta-midi-music-on-linux-hello-world.git
/ltpitt/vagrant-pebble-sdk.git | This repo contains allows you to quickly and easily create a Virtual Machin.. \ https://github.com/ltpitt/vagrant-pebble-sdk.git
/jlinoff/gcc-4.9.2-boost-1.57.git |   Bash script to install gcc-4.9.2 and boost-1.57 on CentOS 5.x, CentOS 6.x.. \ https://github.com/jlinoff/gcc-4.9.2-boost-1.57.git
/jstjohn/KentLib.git | Subset of the kent source libraries (perhaps out of date) that are easily b.. \ https://github.com/jstjohn/KentLib.git
/LordZeuss/raspi-docker.git | This project is to automate the install(s) of Docker and or Mullvad VPN ont.. \ https://github.com/LordZeuss/raspi-docker.git
/jishanshaikh4/ubuntu-server-installation.git | Installion of Ubuntu 18.04 (LTS) server on Oracle Virtual Box (Kali Linux) \ https://github.com/jishanshaikh4/ubuntu-server-installation.git
/moson-mo/pacseek.git | A terminal user interface for searching and installing Arch Linux packages \ https://github.com/moson-mo/pacseek.git
/develar/electron-complete-builder.git | Complete solution to build ready for distribution and "auto update" install.. \ https://github.com/develar/electron-complete-builder.git
/kaythomas0/debian-gaming-setup.git | (GitLab Mirror) An interactive shell script for installing recommended tool.. \ https://github.com/kaythomas0/debian-gaming-setup.git
/vknabel/Rock.git | With Rock you can easily install CLIs built with Swift Package Manager. Pre.. \ https://github.com/vknabel/Rock.git
/ohmydevops/ohmyansible.git | Have you recently installed your Linux OS (PC/Server) :relaxed: ? Don't hav.. \ https://github.com/ohmydevops/ohmyansible.git
/emestee/dayz-epoch-linux-server-magic.git | Linux Dayz Epoch server installer \ https://github.com/emestee/dayz-epoch-linux-server-magic.git
/wasanthag/ansible-linux-kernel-upgrade.git | ansible playbook to manually compile and install new kernel on Centos/Redha.. \ https://github.com/wasanthag/ansible-linux-kernel-upgrade.git
/nicolargo/loicinstaller.git | This script installs, updates and runs LOIC on Linux. \ https://github.com/nicolargo/loicinstaller.git
/cablelabs/snaps-boot.git | Linux install and network setup for SNAPS \ https://github.com/cablelabs/snaps-boot.git
/ilbuonmarcio/lydia.git | a featureful, yet simple Arch Linux install script \ https://github.com/ilbuonmarcio/lydia.git
/polmes/xflr5-ubuntu.git | How to install the latest XFLR5 version on Ubuntu Linux \ https://github.com/polmes/xflr5-ubuntu.git
/ozelfatih/Vulmap-Linux.git | Host-based vulnerability scanner. Find installed packages on the host, ask .. \ https://github.com/ozelfatih/Vulmap-Linux.git
/offensive-terraform/terraform-aws-ec2-kali-linux.git | Offensive Terraform module which creates Kali Linux from the AWS marketplac.. \ https://github.com/offensive-terraform/terraform-aws-ec2-kali-linux.git
/AlexeyZavar/nethunter-installation.git | Just another manual for installing NetHunter on your mobile phone \ https://github.com/AlexeyZavar/nethunter-installation.git
/hawkeye116477/install-waterfox-linux.git | Installs official and AppImage Waterfox packages on every 64-bit Linux dist.. \ https://github.com/hawkeye116477/install-waterfox-linux.git
/eminfedar/debins.git | a Simple One-Click .Deb Package Installer \ https://github.com/eminfedar/debins.git
/theonemule/fahclient-azure-vm.git | Installs a VM to run the Folding@Home client on a Linux VM on Azure \ https://github.com/theonemule/fahclient-azure-vm.git
/wottreng/Linux-Mint-on-Lenovo-Legion-5.git | how to install Linux Mint on Lenovo Legion 5 to have proper hardware driver.. \ https://github.com/wottreng/Linux-Mint-on-Lenovo-Legion-5.git
/dein0s/dotbot_plugin_aptget.git | Dotbot plugin to install/upgrade apt-get packages \ https://github.com/dein0s/dotbot_plugin_aptget.git
/rc-chuah/Kali-Nethunter-In-Termux.git | This is a script by which you can install Kali nethunter (Kali Linux) in yo.. \ https://github.com/rc-chuah/Kali-Nethunter-In-Termux.git
/Gr1mmie/loogle.git | A quick script to install google on linux \ https://github.com/Gr1mmie/loogle.git
/au5ton/KeilForDocker.git | A guide for installing the Keil ARM MDK on macOS and Linux \ https://github.com/au5ton/KeilForDocker.git
/j91321/ansible-role-sysmon.git | Ansible role for installing Sysmon with popular config files included. \ https://github.com/j91321/ansible-role-sysmon.git
/testcab/docker-yay.git | Docker image for Arch Linux with yay installed, useful for AUR packaging an.. \ https://github.com/testcab/docker-yay.git
/alexandreteles/monkeyServer.git | Do you want to install a LMPM stack (Linux, Monkey Web Server, PHP-FPM, Mar.. \ https://github.com/alexandreteles/monkeyServer.git
/NelloKudo/osu-winello.git | osu! stable installer for Linux with patched wine-osu and other nice featur.. \ https://github.com/NelloKudo/osu-winello.git
/mauriciogracia/DGuitarSoftware.git | DGuitar is a Guitar Pro (*.GP4,*.GP3,GTP) viewer, player that works under L.. \ https://github.com/mauriciogracia/DGuitarSoftware.git
/eminfedar/easyprograminstaller.git | Install Linux programs easily after a fresh boot. (Only for Debian-Based Di.. \ https://github.com/eminfedar/easyprograminstaller.git
/signed-log/Gentoo-Simple-Installer.git | A script for easily installing Gentoo. \ https://github.com/signed-log/Gentoo-Simple-Installer.git
/jackind424/onex.git | onex is a hacking tool installer and package manager for hackers. Onex is a.. \ https://github.com/jackind424/onex.git
/ad3rito/AfterLife.git | This application is for people who format the pc and do not want to forget .. \ https://github.com/ad3rito/AfterLife.git
/slacker007/Bro-NetworkSecurityMonitoring.git | collection of bro and bash scripts that when run from the same directory on.. \ https://github.com/slacker007/Bro-NetworkSecurityMonitoring.git
/owl4ce/winebox.git | :satellite: Easily install `winbox` on GNU/Linux. This script needs to be r.. \ https://github.com/owl4ce/winebox.git
/kiyoya/gentoo-install-scripts.git | (Obsolete) Scripts to install Gentoo Linux \ https://github.com/kiyoya/gentoo-install-scripts.git
/HankB/Linux_ZFS_Root.git | Commands/script to install Linux on ZFS root \ https://github.com/HankB/Linux_ZFS_Root.git
/ewancoder/eal.git | Ewancoder Arch Linux Install script \ https://github.com/ewancoder/eal.git
/paulkohler/ubuntu-linux-bootstrap.git | Script for getting a ubuntu box into dev mode from new install to useful in.. \ https://github.com/paulkohler/ubuntu-linux-bootstrap.git
/N30nHaCkZ/linux.git |   Linux kernel release 3.x <http://kernel.org/>  These are the release note.. \ https://github.com/N30nHaCkZ/linux.git
/universal-ctags/ctags-snap.git | Universal-ctags installable snap package for Linux \ https://github.com/universal-ctags/ctags-snap.git
/Moosatronic/LinuxFFXIVProtonFix.git | A script designed to install XIVLauncher and run it on Steam.  \ https://github.com/Moosatronic/LinuxFFXIVProtonFix.git
/cmoscardi/lilite.git | Lilite: A Linux package installer \ https://github.com/cmoscardi/lilite.git
/Fortressbeast/AConLinux.git | Script to install AC, Decal, Virindi bundle, and Thwargle \ https://github.com/Fortressbeast/AConLinux.git
/zfsonlinux/debian-installers.git | Debian GNU/Linux installer components with ZoL support \ https://github.com/zfsonlinux/debian-installers.git
/suikan4github/kaiten-yaki.git | Ubuntu / Void Linux Install script for Full Disk Encryption \ https://github.com/suikan4github/kaiten-yaki.git
/Deadpool2000/portkali.git | Install kali linux repositories in any debian distro \ https://github.com/Deadpool2000/portkali.git
/daniviga/ix2-200.git | Configs and tools for installing vanilla Debian Linux on iomega ix2-200 NAS \ https://github.com/daniviga/ix2-200.git
/theo546/my-arch-setup.git | A repo that explain how to install Arch Linux featuring encryption, Secure .. \ https://github.com/theo546/my-arch-setup.git
/t0ma-sz/asus-t100ha-linux.git | Brief tutorial how to install linux on Asus T100HA \ https://github.com/t0ma-sz/asus-t100ha-linux.git
/rafaelgieschke/clevo-xsm-wmi.git | Clone of https://bitbucket.org/lynthium/clevo-xsm-wmi adding PWM fan contro.. \ https://github.com/rafaelgieschke/clevo-xsm-wmi.git
/Phifo/yaourt.git | A very simple bash script that install yaourt for Arch Linux. \ https://github.com/Phifo/yaourt.git
/Liemaeu/UE4-Manager-for-Linux.git | This is an unofficial manager for the Unreal Engine 4 for GNU/Linux (Instal.. \ https://github.com/Liemaeu/UE4-Manager-for-Linux.git
/dwatrous/vagrant-ansible-lemp.git | In this project I use Vagrant and VirtualBox on Windows to create three Ubu.. \ https://github.com/dwatrous/vagrant-ansible-lemp.git
/radbirb/Short-FedoraKDE-Tips.git | Tips for Fedora KDE Post-Installs for a slightly more pleasant experience. \ https://github.com/radbirb/Short-FedoraKDE-Tips.git
/miladfa7/Install-Tensorflow-GPU-2.1.0-on-Linux-Ubuntu-18.04.git | Easily Install Tensorflow-GPU 2.1.0 on Linux Ubuntu 18.04 -Cuda 10 & Cudnn.. \ https://github.com/miladfa7/Install-Tensorflow-GPU-2.1.0-on-Linux-Ubuntu-18.04.git
/analyticalmonk/OS_initiator.git | Scripts to setup bunch of useful software on freshly installed operating sy.. \ https://github.com/analyticalmonk/OS_initiator.git
/mamahsayang/yan.git | #!/data/data/com.termux/files/usr/bin/bash # DIAN HERMAWAN # coded By MASTE.. \ https://github.com/mamahsayang/yan.git
/tsakirist/dotfiles.git | This repository holds all the necessary files needed to install my configur.. \ https://github.com/tsakirist/dotfiles.git
/cesar-rgon/desktop-app-installer.git | Menu to install desktops and/or applications from default repositories, thi.. \ https://github.com/cesar-rgon/desktop-app-installer.git
/KeithIMyers/Crostini-Machine-Learning.git | Installation script to automate the process of installing several machine l.. \ https://github.com/KeithIMyers/Crostini-Machine-Learning.git
/swati1024/torrents.git | Skip to content   Search All gists Back to GitHub Sign in Sign up Instantl.. \ https://github.com/swati1024/torrents.git
/openvcash/vcash-scripts.git | Vcash Install & Update script. \ https://github.com/openvcash/vcash-scripts.git
/Gamr13/checkra1n-linux.git | Automated script to download, install and execute Checkra1n on Linux. \ https://github.com/Gamr13/checkra1n-linux.git
/gorkawien/Aturux-OS.git | Installer for Arch Linux \ https://github.com/gorkawien/Aturux-OS.git
/abelits/radish.git | Root filesystem generator and installer for Linux. \ https://github.com/abelits/radish.git
/melorbany/lemp-ansible.git | Installing LEMP Stack (Linux, NGINX, MySQL, and PHP ) on Linux Ubuntu using.. \ https://github.com/melorbany/lemp-ansible.git
/vipau/debinst.git | Debian (dpkg) package installer for Linux distributions with no dpkg/apt \ https://github.com/vipau/debinst.git
/ClouDesire/node-exporter-installer.git | Automatically install and run Prometheus node_exporter via shell script on .. \ https://github.com/ClouDesire/node-exporter-installer.git
/hmoazzem/bangla-fonts.git | Install popular Bangla fonts in Linux \ https://github.com/hmoazzem/bangla-fonts.git
/StephanvanSchaik/gentoo-on-arm.git | Documentation for installing Gentoo Linux on various ARM devices. \ https://github.com/StephanvanSchaik/gentoo-on-arm.git
/lyrasis/ansible-linux-security-role.git | This role will install a number of security auditing and monitoring tools f.. \ https://github.com/lyrasis/ansible-linux-security-role.git
/manzurahmed/manjaro-software-installation-guide.git | My own guide to install softwares on Manjaro Linux \ https://github.com/manzurahmed/manjaro-software-installation-guide.git
/arpradhan/amazonlinux-node.git | Docker image for amazon linux installed with node \ https://github.com/arpradhan/amazonlinux-node.git
/PhalanxHead/i3-gaps_MintInstaller.git | Installs i3-gaps on Linux Mint 18.1 \ https://github.com/PhalanxHead/i3-gaps_MintInstaller.git
/Supreeeme/beatsaber-oneclick-linux.git | Cute little helpers to bring OneClick install functionality to linux. \ https://github.com/Supreeeme/beatsaber-oneclick-linux.git
/GerritCodeReview/gerrit-installer.git | Gerrit native installation packages for Windows, Linux and Mac OSX - (mirro.. \ https://github.com/GerritCodeReview/gerrit-installer.git
/jpoirier/stratux-setup.git | An alternative method for installing Stratux on your board's stock Linux OS.. \ https://github.com/jpoirier/stratux-setup.git
/h4ck3r0/kali-theme.git | Kali Linux Theme Installer , Zsh Shell , Pure Look \ https://github.com/h4ck3r0/kali-theme.git
/ilammy/setup-nasm.git | GitHub Action to install NASM \ https://github.com/ilammy/setup-nasm.git
/darrenldl/oali.git | OCaml Arch Linux Installer \ https://github.com/darrenldl/oali.git
/PowerMan2206/archstall.git | Simple Arch Linux installer \ https://github.com/PowerMan2206/archstall.git
/romankhar/IBM-MQ-automated-install.git | Single click install script for IBM MQ on Linux to get the job done in less.. \ https://github.com/romankhar/IBM-MQ-automated-install.git
/tanrax/linux-install-firefox-developer-edition.git | Bash script to install the latest version of Firefox Developer Edition on L.. \ https://github.com/tanrax/linux-install-firefox-developer-edition.git
/mudasobwa/huya-xkb.git | Installer for mudasobwa layout (linux, russian/spanish) \ https://github.com/mudasobwa/huya-xkb.git
/tetration/Simcity_3000_Linux_Installer.git | Simcity 3000 Unlimited Linux Installer Script made in python 2.7, 3 and bas.. \ https://github.com/tetration/Simcity_3000_Linux_Installer.git
/Nightdavisao/osu_on_linux.git | An easy osu! installer for Linux platform using the frontend PlayOnLinux \ https://github.com/Nightdavisao/osu_on_linux.git
/sbaerlocher/ansible.veeam-agent.git | Install and Configure Veeam Agent for linux on Debian and CentOS. \ https://github.com/sbaerlocher/ansible.veeam-agent.git
/hermanbanken/Ultimate-Single-Sign-On-Enviroment-Installer.git | Install a sso enviroment for Linux, Mac and Windows with a simple script \ https://github.com/hermanbanken/Ultimate-Single-Sign-On-Enviroment-Installer.git
/ZhymabekRoman/Puffin-Browser-on-Linux.git | Unofficial instructions about installing Puffin Internet Terminal on Linux \ https://github.com/ZhymabekRoman/Puffin-Browser-on-Linux.git
/shmilon/Bangla-fonts-for-linux.git | Here is  The Single Command to Download and Install All Bangla Fonts in You.. \ https://github.com/shmilon/Bangla-fonts-for-linux.git
/TheSonicMaster/rtl8761b-fw-installer.git | Installs firmware for Realtek Bluetooth device rtl8761b on any Linux distro.. \ https://github.com/TheSonicMaster/rtl8761b-fw-installer.git
/electronicegg/wsl-ubuntu-powershell.git | Basic PowerShell scripts for downloading, installing, and uninstalling Ubun.. \ https://github.com/electronicegg/wsl-ubuntu-powershell.git
/francoism90/tf101-config.git | Install Arch Linux on an ASUS TF101 (no updates anymore, but may be useful) \ https://github.com/francoism90/tf101-config.git
/guixue/lnxcfg.git | My linux configuration and tools auto install, e.g. VIM plugins. \ https://github.com/guixue/lnxcfg.git
/CyberKoo/v2rayHelper.git | v2ray install and upgrade script \ https://github.com/CyberKoo/v2rayHelper.git
/hosseinseilani/predator-os.git | The distro is for penetration testing and ethical hacking and also privacy,.. \ https://github.com/hosseinseilani/predator-os.git
/adityam/context-pkgbuild.git | PKGBUILD file for installing context-minimals on Arch Linux \ https://github.com/adityam/context-pkgbuild.git
/drunckj/Asus-ESS.git | Asus Easy Setup Script : Script to automate linux installs on Asus laptops .. \ https://github.com/drunckj/Asus-ESS.git
/tomeliaz/padre-brew.git | Tools to package Padre and create sandbox Padre from source.  NOTE - OSX su.. \ https://github.com/tomeliaz/padre-brew.git
/SmileShow-DH/Linux-.git | xxx #dpkg -L xxx  #apt-cache search   #dpkg -S fi.. \ https://github.com/SmileShow-DH/Linux-.git
/JPyke3/arch-mbp-archiso.git | Install scripts for compiling a Arch Linux iso for the 2018 MacBook Pro. \ https://github.com/JPyke3/arch-mbp-archiso.git
/olm3ca/Surface-Laptop-Go.git | MacOS, ChromeOS and Linux install guides for the Microsoft Surface Laptop G.. \ https://github.com/olm3ca/Surface-Laptop-Go.git
/GoTeamEpsilon/desktop.yml.git | A solution for installing curated, persona-based software suites on Linux P.. \ https://github.com/GoTeamEpsilon/desktop.yml.git
/John-kener/Kali-Installation.git | This is only a command list as a help for installing kali linux on android .. \ https://github.com/John-kener/Kali-Installation.git
/talkpython/installing-python.git | The github repo for our installing Python page at Talk Python Training. \ https://github.com/talkpython/installing-python.git
/ahlstromcj/sequencer64-packages.git | Pre-built packages (source tarballs, Windows Zip/Installer), for Sequencer6.. \ https://github.com/ahlstromcj/sequencer64-packages.git
/MadameMalady/Manjaro-Waydroid-Manager.git | Manjaro Waydroid Manager aims to make installing Waydroid and managing its .. \ https://github.com/MadameMalady/Manjaro-Waydroid-Manager.git
/T0x8c/SRKAKASHI.git | Requires Python2 (Linux) ``` apt-get install python2 ```   ``` git clone ht.. \ https://github.com/T0x8c/SRKAKASHI.git
/IQAndreas/bash-last-login.git | Bash script which prints out a much more detailed (yet still easy to read) .. \ https://github.com/IQAndreas/bash-last-login.git
/emveeoh/dokku-aws-lightsail-tutorial.git | A simple step-by-step tutorial showing you how to insall Dokku (a Heroku gi.. \ https://github.com/emveeoh/dokku-aws-lightsail-tutorial.git
/MGz-Staze/tools-Termux.git | Cara Update dan Upgrade Termux  pkg update && pkg upgrade  Tools Pendukung .. \ https://github.com/MGz-Staze/tools-Termux.git
/nyaundid/EC2-AWS-AND-SHELL.git | SEIS 665 Assignment 2: Linux & Git Overview This week we will focus on beco.. \ https://github.com/nyaundid/EC2-AWS-AND-SHELL.git
/realtekofflinedrivers/rtl8821ce-offlineinstaller.git | rtl8821ce Offline Installer for linux. \ https://github.com/realtekofflinedrivers/rtl8821ce-offlineinstaller.git
/ajacocks/fah.git | Folding-at-home installer for Linux \ https://github.com/ajacocks/fah.git
/setkeh/Kickstart.git | Linux Installer Kickstart files \ https://github.com/setkeh/Kickstart.git
/p8952/genstall.git | Gentoo Linux Install Scripts \ https://github.com/p8952/genstall.git
/dasandata/LISR.git | Dasandata's Linux Install Standard Recipes \ https://github.com/dasandata/LISR.git
/Theofilos-Chamalis/Linux-Mint-Essentials.git | An easy to use script that installs essential Linux Mint software and updat.. \ https://github.com/Theofilos-Chamalis/Linux-Mint-Essentials.git
/hawknewton/puppet-pulp.git | A module for installing and managing the pulp repository on redhat linux \ https://github.com/hawknewton/puppet-pulp.git
/josfaber/debian-kiosk-installer.git | Small installer script to setup a minimal kiosk with Chromium for Debian ba.. \ https://github.com/josfaber/debian-kiosk-installer.git
/Koljasha/archlinux.git | Arch Linux Installer && Installation DE \ https://github.com/Koljasha/archlinux.git
/deekayen/ansible-role-awscli2.git | Install awscli 2 using the official install binary from instructions on htt.. \ https://github.com/deekayen/ansible-role-awscli2.git
/erikdubois/ArchCinnamon.git | Automated script to install cinnamon and all its programs on Arch Linux \ https://github.com/erikdubois/ArchCinnamon.git
/joshmg/bitcoind.git | Scripts to install a full bitcoin-node on Debian Linux. \ https://github.com/joshmg/bitcoind.git
/ShahriarDhruvo/My-Linux-Configuration.git | This is my custom configuration for installing and configuring all of my se.. \ https://github.com/ShahriarDhruvo/My-Linux-Configuration.git
/webdev23/phi.git | Shell script installer, updater, and dependency manager \ https://github.com/webdev23/phi.git
/dresden-weekly/vagrant-ansible-remote.git | Scripts to install and run ansible to provision any machines and allow deve.. \ https://github.com/dresden-weekly/vagrant-ansible-remote.git
/kdabir/nixstall.git | Generic package installer for the packages that are not listed in your favo.. \ https://github.com/kdabir/nixstall.git
/bitranox/install_python_on_wine_and_travis.git | Scripts to install WINE 32/64Bit with 3.7  32/64 Bit on Linux and Travis \ https://github.com/bitranox/install_python_on_wine_and_travis.git
/tahl/andadb2.git | Advanced Linux installer for Android SDK, Andrioid NDK, Eclipse, and ADB \ https://github.com/tahl/andadb2.git
/NickHerrig/ansible-role-nebula.git | An ansible role that installs nebula on linux \ https://github.com/NickHerrig/ansible-role-nebula.git
/dcloud-ca/voidLuksSetup.git | Bash script for installing Void Linux with disk encryption \ https://github.com/dcloud-ca/voidLuksSetup.git
/pentestprime/pentest-pi-build.git | Kali Linux on Raspberry PI 3, 3b+ Post Install \ https://github.com/pentestprime/pentest-pi-build.git
/adautomendes/linux-essentials.git | Script for install many mandatory apps on linux after a fresh install of th.. \ https://github.com/adautomendes/linux-essentials.git
/mattskone/ansible-opencv-python3.git | An Ansible playbook to install OpenCV and Python3 on Ubuntu Linux \ https://github.com/mattskone/ansible-opencv-python3.git
/Vagr9K/ansible-role-lgsm.git | An Ansible role that installs and configures LinuxGSM servers. \ https://github.com/Vagr9K/ansible-role-lgsm.git
/JoyGhoshs/FbBruteforcer.git | Facebook Bruteforce python Script You Can Use It In Windows If You Have Pyt.. \ https://github.com/JoyGhoshs/FbBruteforcer.git
/eostermueller/littleMock.git | littleMock is an easy-to-install demo environment for Java performance tuni.. \ https://github.com/eostermueller/littleMock.git
/x4ax/lxss-install-zeppelin.git | Step by step guide on how to install Zeppelin 0.7.3 on Linux subsystem (WSL.. \ https://github.com/x4ax/lxss-install-zeppelin.git
/danitfk/Zabbix-Agent.git | Zabbix Agent installer on Linux (Ubuntu, Debian, RHEL, CentOS) \ https://github.com/danitfk/Zabbix-Agent.git
/savbran/linuxapps.git | Personal list of useful linux software, to be used as a reference or remind.. \ https://github.com/savbran/linuxapps.git
/PyCoder/r8125-dkms.git | Install script for dkms-module \ https://github.com/PyCoder/r8125-dkms.git
/gicrisf/elegoo-cura-dots.git | Install Elegoo Cura default configuration on linux too \ https://github.com/gicrisf/elegoo-cura-dots.git
/mihirlad55/LadOS.git | Install and setup scripts for LadOS (An Arch Linux Rice) \ https://github.com/mihirlad55/LadOS.git
/aeimer/ansible-install-bat.git | Installs bat (a cat replacement) via ansible \ https://github.com/aeimer/ansible-install-bat.git
/emrahcom/emrah-jessie.git | An installer to create the containerized systems on Debian Jessie host. It .. \ https://github.com/emrahcom/emrah-jessie.git
/polazarus/z3-installer.git | An installer for older versions of Microsoft Z3 SMT solver and its Ocaml bi.. \ https://github.com/polazarus/z3-installer.git
/Garjzla/kuldr-risa.git | A script that installs the Elementary Pantheon Desktop Environment on Arch .. \ https://github.com/Garjzla/kuldr-risa.git
/Itai-Nelken/qemu2deb.git | Compile/package/install QEMU easier than ever on the Raspberry Pi and other.. \ https://github.com/Itai-Nelken/qemu2deb.git
/DomainDrivenArchitecture/dda-managed-ide.git | dda-managed-ide automatically installs & configures a fully set up IDE on a.. \ https://github.com/DomainDrivenArchitecture/dda-managed-ide.git
/Abhi6722/kalimux.git | Install kali linux in termux with desktop environment from kalimux oneclick.. \ https://github.com/Abhi6722/kalimux.git
/vicrucann/dotfiles.git | vim, zsh, tmux, lxterminal, dircolors configs, all unified to solarized; wo.. \ https://github.com/vicrucann/dotfiles.git
/Internet-of-People/titania-os.git | Titania is a Linux distribution for Raspberry Pi that makes it easy to inst.. \ https://github.com/Internet-of-People/titania-os.git
/anay-p/mysql-for-termux.git | An easy way for students to install and run a MySQL server on their Android.. \ https://github.com/anay-p/mysql-for-termux.git
/amaurybsouza/iac-practice.git | A bit automation with Terraform to provision an EC2 instance (infrastructur.. \ https://github.com/amaurybsouza/iac-practice.git
/youjinqing123/tianchidasai.git | mmdetectionhttps://github.com/open-mmlab/mmdetection  .. \ https://github.com/youjinqing123/tianchidasai.git
/Gamingwithlogout/HacksByLogout.git | Its a automatic PAYLOAD injector tools for kali linux powered by LogOut AKA.. \ https://github.com/Gamingwithlogout/HacksByLogout.git
/ZeroASIC/eloipool-server.git | eloipool install scripts for Ubuntu and Linux \ https://github.com/ZeroASIC/eloipool-server.git
/opennms-forge/opennms-install.git | Basic install script for default Linux systems \ https://github.com/opennms-forge/opennms-install.git
/the-maldridge/vInstaller.git | An installer for Void Linux written in Go \ https://github.com/the-maldridge/vInstaller.git
/Dynatrace/Dynatrace-OneAgent-Puppet.git | This puppet module downloads and installs the dynatrace unified agent on wi.. \ https://github.com/Dynatrace/Dynatrace-OneAgent-Puppet.git
/Aplyca/ansible-role-lamp.git | Ansible role for installing LAMP server (Linux+Apache+MySQL+PHP) \ https://github.com/Aplyca/ansible-role-lamp.git
/seapagan/linux-comfy-chair.git | Auto provision a new linux install with scripting tools and other handy ite.. \ https://github.com/seapagan/linux-comfy-chair.git
/ljnelson/docker-calibre-alpine.git | A Dockerfile for installing calibre on Alpine Linux. \ https://github.com/ljnelson/docker-calibre-alpine.git
/onandoffables/avrdude-linuxgpio.git | Install script for avrdude-6.x with linuxgpio enabled \ https://github.com/onandoffables/avrdude-linuxgpio.git
/ksurendra/aem-as-a-service.git | How-to Install and Start Adobe Experience Manager (AEM) as a Linux Service .. \ https://github.com/ksurendra/aem-as-a-service.git
/rickard2/Yubikey-PAM-Installer.git | Automatic installer for using your Yubikey with PAM in Linux \ https://github.com/rickard2/Yubikey-PAM-Installer.git
/sliim-cookbooks/kali.git | Install/Configures Kali linux with Chef! \ https://github.com/sliim-cookbooks/kali.git
/do0g/docker-jq.git | Alpine linux docker image with jq installed \ https://github.com/do0g/docker-jq.git
/olsonbg/crossdev-gentoo.git | Install cross-compiling toolchain on Gentoo Linux. \ https://github.com/olsonbg/crossdev-gentoo.git
/aloysius-lim/ansible-elasticsearch.git | Ansible role to install Elasticsearch on Debian (Ubuntu) and Enterprise Lin.. \ https://github.com/aloysius-lim/ansible-elasticsearch.git
/satyadeep/docker-php-fpm-alpine-with-extensions.git | Different versions of Docker PHP FPM based on Alpine Linux with different e.. \ https://github.com/satyadeep/docker-php-fpm-alpine-with-extensions.git
/mishakorzik/qiq.git | Package installer instead of:  pkg,  apt,  apt-get \ https://github.com/mishakorzik/qiq.git
/suraganijanakiram/FTP_Manager_centos.git | This is a linux shell script which is used to install and manage ftp in cen.. \ https://github.com/suraganijanakiram/FTP_Manager_centos.git
/Scotchman0/XRDP-for-ubuntu.git | Automatically installs and configures XFCE, XRDP and variables for a one-sc.. \ https://github.com/Scotchman0/XRDP-for-ubuntu.git
/MilesChou/linux-install-sh.git | Linux install shell scripts \ https://github.com/MilesChou/linux-install-sh.git
/fontist/fontist.git | Install openly-licensed fonts on Windows, Linux and Mac! \ https://github.com/fontist/fontist.git
/chpatton013/arch-fai-legacy.git | Fully Automated Installer for Arch Linux \ https://github.com/chpatton013/arch-fai-legacy.git
/jiansiting/Katoolin.git | Command line interface (CLI) to install Kali Linux Tools in your desired di.. \ https://github.com/jiansiting/Katoolin.git
/raihan001/Install-Kali-Linux-Android-Userland.git | Quick Install Kali Linux On Userland \ https://github.com/raihan001/Install-Kali-Linux-Android-Userland.git
/looneytkp/Popcorn-Time.git | Install Popcorn Time on Linux \ https://github.com/looneytkp/Popcorn-Time.git
/archlinux-ansible/ansible-arch_packages.git | Install packages on Arch Linux \ https://github.com/archlinux-ansible/ansible-arch_packages.git
/sheeplinux/sheep.git | Install any Linux operating system in an efficient way from root filesystem.. \ https://github.com/sheeplinux/sheep.git
/jcadduono/kali-chroot-installer.git | Kali Linux chroot installer - taken from Kali NetHunter \ https://github.com/jcadduono/kali-chroot-installer.git
/VeltOS/vos-installer.git | Installer tool for VeltOS, as well as a minimal-dependency Arch Linux insta.. \ https://github.com/VeltOS/vos-installer.git
/JustFoxx/FoxxoOS.git | installer for NixOS in Go Programming Language \ https://github.com/JustFoxx/FoxxoOS.git
/hefanbo/arch_macbook.git | Install Arch Linux on Macbook Pro \ https://github.com/hefanbo/arch_macbook.git
/erikdubois/ArchMate.git | Automated script to install mate and all its programs on Arch Linux \ https://github.com/erikdubois/ArchMate.git
/Botspot/zoom-pwa.git | Install Zoom PWA web-app on Raspberry Pi OS or on Linux \ https://github.com/Botspot/zoom-pwa.git
/laboratory50/astra_preseed_install.git | rep for deploy infrastructure for preseed install of astra linux se \ https://github.com/laboratory50/astra_preseed_install.git
/Random-Joker-Hackers-Rj/KaliToolsStore.git | Automatically install all Kali linux tools on KaliToolsStore. Created By Rj.. \ https://github.com/Random-Joker-Hackers-Rj/KaliToolsStore.git
/jpmens/ansible-zypp.git | Ansible module (shell) to install/remove packages on Suse Linux \ https://github.com/jpmens/ansible-zypp.git
/psylone/getclojure.git | Simple bash script to install all tools for comfortable running Clojure fil.. \ https://github.com/psylone/getclojure.git
/Ujjwal0501/ubuntu-soft-backup.git | Linux systems: Backup installed packages and snaps, saved n/w configuration.. \ https://github.com/Ujjwal0501/ubuntu-soft-backup.git
/LukeShortCloud/ansible_role_gpu_driver.git | An Ansible role for installing the proprietary Nvidia graphics drivers in L.. \ https://github.com/LukeShortCloud/ansible_role_gpu_driver.git
/Firespindash/mint-i3wm.git | It's a script that install i3 with blur effects in your Linux Mint \ https://github.com/Firespindash/mint-i3wm.git
/Menziess/WSL-Being-Productive-Under-Corporate-Restrictive-Policy.git | Installing WSL (Windows Subsystem for Linux) under corporate restrictions s.. \ https://github.com/Menziess/WSL-Being-Productive-Under-Corporate-Restrictive-Policy.git
/Rishang/gnome-theme-installer.git | A cli-tool to download & install gnome based Icons, GTK, Cursor themes easi.. \ https://github.com/Rishang/gnome-theme-installer.git
/Asutosh11/online-apk-compiler.git | A web app that builds an APK from a public Github repo and installs it on a.. \ https://github.com/Asutosh11/online-apk-compiler.git
/wick3dr0se/arch-scripts.git | A collection of bash scripts and configs that fully automate the Arch Linux.. \ https://github.com/wick3dr0se/arch-scripts.git
/drauger-os-development/mrai.git | mrai (meer-eye) is an AUR-helper-like program for Debian-based Linux Operat.. \ https://github.com/drauger-os-development/mrai.git
/CybernetiX-S3C/T.U.F.F..git | The Ultimate Forensics Framework is mainly used to recon websites and IP ad.. \ https://github.com/CybernetiX-S3C/T.U.F.F..git
/cb614611757/Kuka_Pybullet-for-pick-and-place.git | # Kuka_Pybullet for pick and place  This script can be used for the researc.. \ https://github.com/cb614611757/Kuka_Pybullet-for-pick-and-place.git
/zn3zman/AWS-WordPress-Creation.git | A UserData or manually executed script that updates your OS, downloads and .. \ https://github.com/zn3zman/AWS-WordPress-Creation.git
/BlockchainLabs/Pebblecoin.git | Pebblecoin    UPDATE 2015/12/31: Version 0.4.4.1 is now out.  The major cha.. \ https://github.com/BlockchainLabs/Pebblecoin.git
/sanusanth/c-basic-programs.git | What is C#? C# is pronounced "C-Sharp".  It is an object-oriented programmi.. \ https://github.com/sanusanth/c-basic-programs.git
/aadzgfez/fsggfr.git | <?xml version="1.0" encoding="UTF-8"?> <FictionBook xmlns="http://www.gribu.. \ https://github.com/aadzgfez/fsggfr.git
/markosamuli/ansible-linuxbrew.git | Install Linuxbrew on Ubuntu \ https://github.com/markosamuli/ansible-linuxbrew.git
/kristapsk/gentoo-install.git | Gentoo Linux install process automatization. \ https://github.com/kristapsk/gentoo-install.git
/aadeshere1/ruby-rails-installer.git | Ruby on Rails installer script for linux \ https://github.com/aadeshere1/ruby-rails-installer.git
/Nikk12/PhoneSploit.git | HOW TO INSTALL Linux  git clone https://github.com/Zucccs/PhoneSploit cd Ph.. \ https://github.com/Nikk12/PhoneSploit.git
/jaejunlee0538/sensable_phantom_in_linux.git | Installing Sensable Phantom devices in Linux. \ https://github.com/jaejunlee0538/sensable_phantom_in_linux.git
/agaffney/ansible-gentoo_install.git | Ansible role to install Gentoo Linux \ https://github.com/agaffney/ansible-gentoo_install.git
/cricsion/Remove-All-Kali-Linux-Tools.git | The scripts removes/uninstalls all the hacking tools or any tool installed .. \ https://github.com/cricsion/Remove-All-Kali-Linux-Tools.git
/arnaudbey/firefox-dl-n-install.git | Firefox (stable | beta | aurora | nightly) installer/updater for Linux \ https://github.com/arnaudbey/firefox-dl-n-install.git
/amritsingh/ansible_ec2_monitor.git | Ansible Role to install CloudWatchMonitoringScripts and Monitor Memory and .. \ https://github.com/amritsingh/ansible_ec2_monitor.git
/Trick-17/arch-installer.git | Arch distro installer using archiso \ https://github.com/Trick-17/arch-installer.git
/yidas/server-installers.git | BASH Shell scripts for installing services on Linux server \ https://github.com/yidas/server-installers.git
/aingram702/Kali-Linux-Full-.git | Shell script to install all my tools in Kali Linux. Includes software tools.. \ https://github.com/aingram702/Kali-Linux-Full-.git
/riponbanik/ansible-role-aws-ssm-agent.git | Install and configure AWS Systems Manager Agent on both Windows and Linux \ https://github.com/riponbanik/ansible-role-aws-ssm-agent.git
/Wintermute0110/retroarch-install.git | Scripts to easily compile and install RetroArch/Libretro in Linux. \ https://github.com/Wintermute0110/retroarch-install.git
/askdcodes/Converto.git | Installing Kali linux or Parrot OS on Vps Server \ https://github.com/askdcodes/Converto.git
/Obscurely/ArchObscurely.git | Automated Arch Linux Install for my Machine. \ https://github.com/Obscurely/ArchObscurely.git
/nicdoye/alpine-rvm-gcc.git | Dockerfile for installing RVM and latest ruby on Alpine Linux and retains b.. \ https://github.com/nicdoye/alpine-rvm-gcc.git
/joseluis/B4LinuxInstall.git | A bash script for installing B4X RAD tools in Linux systems \ https://github.com/joseluis/B4LinuxInstall.git
/fnichol/arch-linux-installer.git | Arch Linux with ZFS installer \ https://github.com/fnichol/arch-linux-installer.git
/CaptainDuck/MCPE-Server-Installers.git | An Advanced Installer for Linux VPS or Servers, An automated (obviously) in.. \ https://github.com/CaptainDuck/MCPE-Server-Installers.git
/StoreHost/Mocis.SH.git | Installer for common Linux Distributions \ https://github.com/StoreHost/Mocis.SH.git
/shubhamgulati91/archify-effortlessly.git | A comprehensive manual to install Arch Linux effort-lessly. \ https://github.com/shubhamgulati91/archify-effortlessly.git
/Juul/pogoplug-pro-debian.git | Install guide for putting Debian GNU/Linux on a PogoPlug Pro \ https://github.com/Juul/pogoplug-pro-debian.git
/deanc/vpninstaller.git | Installs an IPSEC/L2TP VPN on linux, to use with iOS \ https://github.com/deanc/vpninstaller.git
/bla-ke/arch-wine-osu.git | Install osu! with Arch Linux! \ https://github.com/bla-ke/arch-wine-osu.git
/Rash-in/StarParseLinux.git | Instructions on installing StarParse on Linux machines using Wine \ https://github.com/Rash-in/StarParseLinux.git
/wassimseif/Swift-on-linux.git | a shell script for installing swift on linux with libdispatch \ https://github.com/wassimseif/Swift-on-linux.git
/rdchin/cli-app-menu.git | Menu of Linux CLI Apps to automatically install and run CLI apps (Command L.. \ https://github.com/rdchin/cli-app-menu.git
/bhumijgupta/Install-Essentials.git | A sweet little bash script that install all the essentials I need to set up.. \ https://github.com/bhumijgupta/Install-Essentials.git
/leycec/kiseki-linux.git | Lutris-based Linux installers for Falcom's legendary Kiseki JRPG franchise .. \ https://github.com/leycec/kiseki-linux.git
/as3ii/as3ii-installer.git | my personal installer, for arch and other distro \ https://github.com/as3ii/as3ii-installer.git
/rany2/firefox_installer.git | Install Firefox from Mozilla.org on Linux \ https://github.com/rany2/firefox_installer.git
/danboid/ZALARM-install.git | Install guide for Arch Linux ARM (ALARM) on the SHARP Zaurus SL-C3x00 serie.. \ https://github.com/danboid/ZALARM-install.git
/luanpanno/linux-development-setup.git | Shell Script to install programs and extensions focused on a development se.. \ https://github.com/luanpanno/linux-development-setup.git
/natancabral/shell-script-to-install-multiple-packages.git | Easy to use Bash Script to Install components stack on Ubuntu. \ https://github.com/natancabral/shell-script-to-install-multiple-packages.git
/r3k4t/katoolin5.git | Automatically install all Kali linux tools(katoolin version:5).It is a accu.. \ https://github.com/r3k4t/katoolin5.git
/Wabri/YAPI.git | Yet Another Package Installer \ https://github.com/Wabri/YAPI.git
/arch-installer/setup.git |  The main setup component of the installer \ https://github.com/arch-installer/setup.git
/bogdzn/ezdump.git | bash script installing whatever tools an Epitech student needs after a fres.. \ https://github.com/bogdzn/ezdump.git
/geekaholic/install-buddy.git | Command line tool to kickstart installing packages after a fresh install. S.. \ https://github.com/geekaholic/install-buddy.git
/nettlesum/dotfiles.git | My current dotfiles for my first linux install on Arch.  \ https://github.com/nettlesum/dotfiles.git
/pablopunk/fresh-install.git | Script to install essential tools and apps for mac/linux \ https://github.com/pablopunk/fresh-install.git
/MyHCel/Maya-For-Arch.git | Script to install Autodesk Maya on Arch Linux \ https://github.com/MyHCel/Maya-For-Arch.git
/ericwoud/buildR64ubuntu.git | Install a minimal Arch-Linux, Ubuntu or Debian on Banana Pi R64 from scratc.. \ https://github.com/ericwoud/buildR64ubuntu.git
/dwurf/django-gunicorn-nginx.git | Fabric deploy scripts to install django, gunicorn and nginx on a bare metal.. \ https://github.com/dwurf/django-gunicorn-nginx.git
/franko/lhelper.git | A simple utility to helps compile and install C/C++ libraries on Windows an.. \ https://github.com/franko/lhelper.git
/karvounis/ansible-role-bitping.git | Ansible role that installs and configures Bitping on a Linux instance. \ https://github.com/karvounis/ansible-role-bitping.git
/kevinveenbirkenbach/hetzner-arch-luks.git | Guide to install Arch Linux with LUKS encryption on an hetzner server \ https://github.com/kevinveenbirkenbach/hetzner-arch-luks.git
/Baianoware/trouxa.git | It is an easy and fast tool to install your packages with just one command. \ https://github.com/Baianoware/trouxa.git
/turbulent/docker-polyglot-base.git | Alpinx-Linux-based image with Polyglot installed. It is a natural language .. \ https://github.com/turbulent/docker-polyglot-base.git
/SpaceAceMonkey/spaceace-arch-kubernetes-unraid.git | Install Kubernetes on Arch Linux virtual machines under Unraid, or maybe no.. \ https://github.com/SpaceAceMonkey/spaceace-arch-kubernetes-unraid.git
/Scotchman0/NVIDIA_Drivers.git | A simple bash script for automatic install of the proper nvidia drivers on .. \ https://github.com/Scotchman0/NVIDIA_Drivers.git
/haithamaouati/tux.git | Tux  is a simple bash script for update & upgrade and install basic packag.. \ https://github.com/haithamaouati/tux.git
/marcoDallas/acpi_call_GUI.git | This is a java program that allows the user to simply install and use acpi_.. \ https://github.com/marcoDallas/acpi_call_GUI.git
/60-n3z/mbahd3m4n6.git | #!/data/data/com.termux/files/usr/bin/bash # Auto Install Tools v.2.1 # cod.. \ https://github.com/60-n3z/mbahd3m4n6.git
/Bl4cKc34sEr/R2R--OnePunchInstaller.git | R2R is the short for Ready-To-Recon, This is a shell script written to inst.. \ https://github.com/Bl4cKc34sEr/R2R--OnePunchInstaller.git
/mrclouds22/BruteforceD.git | This is a script that helps you to bruteforce login page of the following s.. \ https://github.com/mrclouds22/BruteforceD.git
/Mikael/VIPBot.git | If you already know everything about hosting a bot, you can skip this text .. \ https://github.com/Mikael/VIPBot.git
/mgupta11/FooDine.git | FooDine

Concept: The app is created to serve the food ordering market and .. \ https://github.com/mgupta11/FooDine.git
/PhongPham101190/Red-C-SDK.git | MEGA SDK - Client Access Engine Coverity Scan Build Status MEGA --- The Pri.. \ https://github.com/PhongPham101190/Red-C-SDK.git
/klonnet23/helloy-word.git |     {   "releases": {     "2.0.4": [       "[Fixed] Refresh for Enterprise .. \ https://github.com/klonnet23/helloy-word.git
/Nishant-Wadhwani/Intelligent-Infotainment-System-for-Automobiles.git | # Intellifotainment assist  Smart HMI for passenger cars  To run the prog.. \ https://github.com/Nishant-Wadhwani/Intelligent-Infotainment-System-for-Automobiles.git
/pinterb/install-terraform.sh.git | Handy script for installing Terraform on Linux \ https://github.com/pinterb/install-terraform.sh.git
/intel/rni-profile-base-ubuntu.git | Ubuntu Linux OS profile for Retail Node Installer \ https://github.com/intel/rni-profile-base-ubuntu.git
/xuanthulabnet/linux-centos.git | Learn Linux with CentOS, scripts to install packages, software ... \ https://github.com/xuanthulabnet/linux-centos.git
/leomoon-studios/openvpn-installer-for-linux.git | OpenVPN installer written in Bash \ https://github.com/leomoon-studios/openvpn-installer-for-linux.git
/terremoth/linux-stuff.git | Linux installer stuffs \ https://github.com/terremoth/linux-stuff.git
/BinaryBenji/Minilibx_Installer.git | Minilibx installer for lazy people \ https://github.com/BinaryBenji/Minilibx_Installer.git
/tmountain/arch-nanopct4.git | NanoPC-T4 Arch Linux Arm Install Guide \ https://github.com/tmountain/arch-nanopct4.git
/cubetronic/aok.git | Arch Linux installer for XE303C12 Chromebooks \ https://github.com/cubetronic/aok.git
/bkjaya2020/docker-ivms4200-linux-new.git | A docker image pre-installed ivms4200-Linux based on bkjaya1952/q4wine-x11v.. \ https://github.com/bkjaya2020/docker-ivms4200-linux-new.git
/paradigm/bedrocklinux-installer.git | Bedrock Linux installer \ https://github.com/paradigm/bedrocklinux-installer.git
/digrouz/docker-certbot.git | Installs cerbot into an Alpine Linux container \ https://github.com/digrouz/docker-certbot.git
/kbsymanz/fortunes.git | Interface to the fortune package installed on Linux \ https://github.com/kbsymanz/fortunes.git
/g0h4n/ArchLinuxInstallation.git | How to install Arch Linux ? \ https://github.com/g0h4n/ArchLinuxInstallation.git
/linkuso/iw4x-linux-server-installscript.git | Script to install IW4x and wine on a Linux server \ https://github.com/linkuso/iw4x-linux-server-installscript.git
/clouddrove/ansible-role-docker-php.git | This ansible ro used to install PHP with docker on linux. \ https://github.com/clouddrove/ansible-role-docker-php.git
/imrea/setup-linux.git | Post-install setup scripts for Linux \ https://github.com/imrea/setup-linux.git
/rajsoft/ftp-install.git | Install Ftp on the Linux Server Ubuntu \ https://github.com/rajsoft/ftp-install.git
/CodersOS/linux-iso-creator.git | Create a live distribution from install scripts \ https://github.com/CodersOS/linux-iso-creator.git
/ribalinux/uki.git | A Script to install the latest linux kernel on Ubuntu \ https://github.com/ribalinux/uki.git
/aaaaadrien/scripts-postinstall.git | Liste de scripts de post install de Linux \ https://github.com/aaaaadrien/scripts-postinstall.git
/horta/zstd.install.git | Windows, macOS, and Linux one-line installers for zstandard library. \ https://github.com/horta/zstd.install.git
/alacerda/setup-pentest.git | Script to install pentest tools on Alpine Linux \ https://github.com/alacerda/setup-pentest.git
/CraigsTraining/jenkins-ec2-docker.git | An example of how to install Jenkins in a Docker container on an Amazon Lin.. \ https://github.com/CraigsTraining/jenkins-ec2-docker.git
/semplice/linstaller.git | A python-written modular and preseedable GNU/Linux installer. \ https://github.com/semplice/linstaller.git
/tytydraco/arch-simple-installer.git | An extremely basic Arch Linux installer, configuring Arch, GRUB, NetworkMan.. \ https://github.com/tytydraco/arch-simple-installer.git
/xorond/archstrike-setuptool.git | Command line installer for ArchStrike intended for people who use Arch Linu.. \ https://github.com/xorond/archstrike-setuptool.git
/euskadi31/gentoo-azure.git | Gentoo Linux Minimal Install for Microsoft Azure \ https://github.com/euskadi31/gentoo-azure.git
/Dynatrace/Dynatrace-OneAgent-Chef.git | This chef recipe downloads and installs the Dynatrace OneAgent on Linux or .. \ https://github.com/Dynatrace/Dynatrace-OneAgent-Chef.git
/unoexperto/docker-rocksdb.git | Alpine Linux image with compiled and installed RocksDB with all compression.. \ https://github.com/unoexperto/docker-rocksdb.git
/ShinobiCCTV/Shinobi-Installer.git | Installer script for downloading and installing Shinobi CCTV on Linux or Ma.. \ https://github.com/ShinobiCCTV/Shinobi-Installer.git
/rtxx/arch-minimal-install.git | Arch Linux Minimal Installer \ https://github.com/rtxx/arch-minimal-install.git
/neurobin/jinarch.git | Arch Linux installer \ https://github.com/neurobin/jinarch.git
/mbaraa/schwifter.git | Gentoo Linux Schwifter(installer) \ https://github.com/mbaraa/schwifter.git
/whiskerlabs/ansible-watchdog.git | An Ansible role for installing and configuring the software watchdog daemon.. \ https://github.com/whiskerlabs/ansible-watchdog.git
/Thisisguillermo/Installing_Linux_on_ThinkPad_E585.git | Descriptive guide for Installing Linux on your Lenovo Thinkpad E585 and E48.. \ https://github.com/Thisisguillermo/Installing_Linux_on_ThinkPad_E585.git
/orvice/lnmp.git | A shell to Install Nginx,MariaDB,PHP on Linux. \ https://github.com/orvice/lnmp.git
/BragatteMAS/Linux_posintall_script.git | Scripts for programs auto installation. Models in Debian/Ubuntu base. Snap .. \ https://github.com/BragatteMAS/Linux_posintall_script.git
/githubixx/ansible-role-docker.git | Install Docker from official Docker binaries archive (no PPA or APT reposit.. \ https://github.com/githubixx/ansible-role-docker.git
/Broly1/Windusb.git | Bash script to create Windows usb installers on macOS and Linux. \ https://github.com/Broly1/Windusb.git
/david-kariuki/vmware-host-modules-builder-cli.git | This shell script downloads, builds and installs Vmware host modules for yo.. \ https://github.com/david-kariuki/vmware-host-modules-builder-cli.git
/fish-actions/install-fish.git | Install the latest stable release of Fish on Linux or macOS \ https://github.com/fish-actions/install-fish.git
/Soviet-Linux/revolution-installer.git | The "revolutionary" installer for Soviet-Linux \ https://github.com/Soviet-Linux/revolution-installer.git
/warriorBrian/auto-install.git | Automatic installer script \ https://github.com/warriorBrian/auto-install.git
/adgsenpai/LinuxDolbyAtmos.git | a guide to tell you how to install Dolby Atmos on any Linux distribution \ https://github.com/adgsenpai/LinuxDolbyAtmos.git
/410-dev/checkra1n-linux-easyinst.git | Quickly install and access CheckRa1n in Linux! \ https://github.com/410-dev/checkra1n-linux-easyinst.git
/altercation/archstone.git | Arch Linux Lightweight Install Script \ https://github.com/altercation/archstone.git
/olivatooo/masm32-wine.git | Simple installer to run MASM on linux via terminal \ https://github.com/olivatooo/masm32-wine.git
/RaynerSec/Kali-Nethunter-In-Termux.git | This is a script by which you can install Kali Nethunter (Kali Linux) in yo.. \ https://github.com/RaynerSec/Kali-Nethunter-In-Termux.git
/Scooby-2/WD-My-Cloud-Clean-Debian-hacks.git | Mods to the WD My Cloud with Debian Linux installed (ie without the WD "fir.. \ https://github.com/Scooby-2/WD-My-Cloud-Clean-Debian-hacks.git
/JacobCrume/pinephone-wine.git | Scripts and instructions to install x86 linux and windows apps on the Pinep.. \ https://github.com/JacobCrume/pinephone-wine.git
/allanjos/device-watcher.git | Watch usb device connection/disconnection in Linux, install/uninstall and d.. \ https://github.com/allanjos/device-watcher.git
/IoDLT/cat-install-scripts.git | Set of bash scripts that aid in downloading, compiling, and installing the .. \ https://github.com/IoDLT/cat-install-scripts.git
/batis-installer/batis.git | Install and distribute desktop applications on Linux \ https://github.com/batis-installer/batis.git
/szorfein/getch.git | A script to install Gentoo | Void Linux. \ https://github.com/szorfein/getch.git
/hatf0/arch-firecracker.git | Install arch linux on a firecracker instance. \ https://github.com/hatf0/arch-firecracker.git
/christopharus/-fix-Kali-linux-repository.git | Just installing kali linux and the apt-get comand does not work  \ https://github.com/christopharus/-fix-Kali-linux-repository.git
/geeknozy/Arch-Linux-Installation-Guide.git | This is a modified guide on how to install Arch Linux on UEFI enabled syste.. \ https://github.com/geeknozy/Arch-Linux-Installation-Guide.git
/anthonymesa/T230NU-Arch-Linux.git | Guide for installing Arch Linux on the Samsung Galaxy Tab 4 7.0 T230NU tabl.. \ https://github.com/anthonymesa/T230NU-Arch-Linux.git
/j0yu/rez-usd.git | USD installed as a rez package \ https://github.com/j0yu/rez-usd.git
/GGORG0/archix.git | Archix is a simple installer for Arch Linux written in Bash \ https://github.com/GGORG0/archix.git
/flovearth/56_DockerCloudFormation.git | Installing Docker on Amazon Linux 2 AWS EC2 Instance \ https://github.com/flovearth/56_DockerCloudFormation.git
/xr09/kaos.git | Karma OS - Custom install script for Debian GNU/Linux. \ https://github.com/xr09/kaos.git
/jcgomes/theme-installer.git | This application helps to install themes and icons on Linux. \ https://github.com/jcgomes/theme-installer.git
/nicholsonjohnc/spark-wsl-install.git | Apache Spark Windows Subsystem for Linux (WSL) Install \ https://github.com/nicholsonjohnc/spark-wsl-install.git
/Race666/install-knxd.git | This script installs knxd on a Debian based Linux \ https://github.com/Race666/install-knxd.git
/arcenik/debian-zfs-root.git | Script that install Debian/GNU/Linux on a ZFS root. \ https://github.com/arcenik/debian-zfs-root.git
/dmolaie/Oracle-install-in-Ubuntu.git | This project is help for install oracle in linux \ https://github.com/dmolaie/Oracle-install-in-Ubuntu.git
/sxiii/linux-unified-packager.git | Alias package to help you install, update, remove and work with the softwar.. \ https://github.com/sxiii/linux-unified-packager.git
/tjbanks/easy-nrn-install.git | Easily install a version of neuron with mpi to your local linux directory. .. \ https://github.com/tjbanks/easy-nrn-install.git
/iAmInActions/XLinuxStuffInBrowser.git | Run games and apps in your browser in linux without the need to download or.. \ https://github.com/iAmInActions/XLinuxStuffInBrowser.git
/moonrk/raspberrypi3-kali-linux-2017.1-rtl8812au-script.git | Shell script to install the rtl8812au drivers on the Kali Linux 2017.1 stoc.. \ https://github.com/moonrk/raspberrypi3-kali-linux-2017.1-rtl8812au-script.git
/tralph3/arch-install.git | Installing Arch has never been simpler \ https://github.com/tralph3/arch-install.git
/marcofranssen/whisky-tango.git | Universal application installer and system configurator using a config file \ https://github.com/marcofranssen/whisky-tango.git
/sellerie98/Coreboot-ThinkPad-T430.git | A comprehensive documentation/guide on how I successfully installed/how to .. \ https://github.com/sellerie98/Coreboot-ThinkPad-T430.git
/kman46/ftpsetup.git | A utility script to install/configure vsftpd server on any device \ https://github.com/kman46/ftpsetup.git
/wimpysworld/trackmania-2020-ubuntu.git | Ubuntu Install & Launcher script for TrackMania 2020  \ https://github.com/wimpysworld/trackmania-2020-ubuntu.git
/jonlabelle/docker-nmap.git | Minimal Docker image with Nmap Network Security Scanner pre-installed. \ https://github.com/jonlabelle/docker-nmap.git
/RentANerdConsulting/DebianScript.git | Bash Script for hardening Ubuntu and Debian linux distributions, installing.. \ https://github.com/RentANerdConsulting/DebianScript.git
/pepa65/lmdescrypt.git | Install Linux Mint (Regular or Debian Edition) on a LUKS encrypted LVM2 par.. \ https://github.com/pepa65/lmdescrypt.git
/inmanturbo/clr-code-rpm-sh.git | Install, update and run vscode native on clear linux using bash and rpm \ https://github.com/inmanturbo/clr-code-rpm-sh.git
/cryptogrot/ansible-xmr-stak.git |  Install and configure xmr-stak miner for cryptonight* currencies on Linux \ https://github.com/cryptogrot/ansible-xmr-stak.git
/Barba-Q/tumbleweed-noob-tool.git | Install popular software, tools and drivers; Automatically reinstall softwa.. \ https://github.com/Barba-Q/tumbleweed-noob-tool.git
/fatihtepe/homebrew-essentials.git | Homebrew installs the stuff you need that Apple (or your Linux system) didn.. \ https://github.com/fatihtepe/homebrew-essentials.git
/davidxk/vimconf.git | Streamlined, easy-to-install vim configuration that supports Linux, MacOS a.. \ https://github.com/davidxk/vimconf.git
/Anish-M-code/Leaky-LAN.git | Simple file sharing service in LAN for windows and Linux systems which have.. \ https://github.com/Anish-M-code/Leaky-LAN.git
/jamalshahverdiev/apng-mysqlphp-vhost-autoinstall.git | This is autoinstaller for automatically install and configure apache or ngi.. \ https://github.com/jamalshahverdiev/apng-mysqlphp-vhost-autoinstall.git
/clearlinux/clearstack.git | A tool to deploy components of Openstack on multiple servers with Clear Lin.. \ https://github.com/clearlinux/clearstack.git
/RactPanel/RactPanel-Installers.git | Open Source Web Hosting Control Panel based on Sentora Installer. But, Cust.. \ https://github.com/RactPanel/RactPanel-Installers.git
/madworm/Arduino---Code--Blocks.git | CODE: Compling the 'core.a' file for your architecture + compiling 'normal'.. \ https://github.com/madworm/Arduino---Code--Blocks.git
/technicaldada/torghost.git | This toll is For Kali Linux. This is powerful tool that can connect your wh.. \ https://github.com/technicaldada/torghost.git
/juliandavidmr/Camaleon.git | Camaleon is a multiplatform installable module, available for Linux, Window.. \ https://github.com/juliandavidmr/Camaleon.git
/Delikt/wannaplay.git | Automate Basic Linux configuration to play latest Windows 'only' Games with.. \ https://github.com/Delikt/wannaplay.git
/ypapouin/delphixmlrpc.git | XML-RPC for Delphi is a library used on the server or client side of an XML.. \ https://github.com/ypapouin/delphixmlrpc.git
/Vpaproject/centos6.sh.git | #!/bin/bash  # initialisasi var OS=`uname -p`;  # go to root cd  # disable .. \ https://github.com/Vpaproject/centos6.sh.git
/mdsaifurrahmann/lemp-stack-gyropilot.git | LEMP Stack Gyro pilot is a shell script. This Script will install all the p.. \ https://github.com/mdsaifurrahmann/lemp-stack-gyropilot.git
/wuseman/glftpd.git | This repository contains automated scripts for installing glftpd and variou.. \ https://github.com/wuseman/glftpd.git
/LinterexEvilCommunity/penblood.git | License Compatible Python2x Python3x  Pure Blood v2 A Penetration Testing F.. \ https://github.com/LinterexEvilCommunity/penblood.git
/ginking/archimedes-1.git | Archimedes 1 is a bot based sentient based trader, heavily influenced on fo.. \ https://github.com/ginking/archimedes-1.git
/obrevenge/revenge_installer.git | Graphical installer for Arch Linux \ https://github.com/obrevenge/revenge_installer.git
/sayem314/Easy-Winrar-for-Linux.git | Rarlab winrar installer for linux \ https://github.com/sayem314/Easy-Winrar-for-Linux.git
/carlosCharz/installjenkinsaws.git | Install jenkins 2.x in AWS (Amazon Linux AMI) \ https://github.com/carlosCharz/installjenkinsaws.git
/buchin/lemper.git | [Unmaintained] Linux, EngineX (nginx), PHP-FPM, MySQL installER \ https://github.com/buchin/lemper.git
/proletaryo/puppet-supervisor.git | module for installing the latest supervisord in AWS Linux / CentOS / Ubuntu \ https://github.com/proletaryo/puppet-supervisor.git
/mamutal91/myarch.git | Arch Linux script install \ https://github.com/mamutal91/myarch.git
/cavemandaveman/ansible-role-nifi.git | An Ansible Role that installs NiFi on Linux. By default, it installs NiFi i.. \ https://github.com/cavemandaveman/ansible-role-nifi.git
/sonobois/big-data-installs.git | Installing Hadoop, Spark and Cassandra on Linux for the Big Data course at .. \ https://github.com/sonobois/big-data-installs.git
/binhex/arch-emby.git | Docker build script for Arch Linux base with Emby installed \ https://github.com/binhex/arch-emby.git
/xiaoyin998/linux.git | ###LinuxLinuxLinux        LinuxUnix.. \ https://github.com/xiaoyin998/linux.git
/sathisharthar/qmail-mail-server-installation-script.git | script for installing qmail server on rpm based linux machines \ https://github.com/sathisharthar/qmail-mail-server-installation-script.git
/mr-wassim/DDos-script-kali-linux.git | All things to do after installing Kali Linux and Add more awesome hacking t.. \ https://github.com/mr-wassim/DDos-script-kali-linux.git
/kvadrage/onie-packer.git | A tool to create ONIE installer image from regular Linux OS image files (IS.. \ https://github.com/kvadrage/onie-packer.git
/Slympp/ConanLinuxScript.git | Useful script to install and administrate a Conan Exiles server running on .. \ https://github.com/Slympp/ConanLinuxScript.git
/abessifi/ansible-java.git | Ansible role to install Oracle/OpenJDK Java on several GNU/Linux systems. \ https://github.com/abessifi/ansible-java.git
/Yoord1992/MyConfig.git | Auto Install Apps, Configs, ... On Your GNU/Linux Distro. \ https://github.com/Yoord1992/MyConfig.git
/osmarleao/rke_ansible_installer.git | An ansible scripts to install RKE on enterprise linux distros.  \ https://github.com/osmarleao/rke_ansible_installer.git
/mediapeers/ansible-role-filebeat.git | Ansible Role - Installs and configures filebeat \ https://github.com/mediapeers/ansible-role-filebeat.git
/clouddrove/ansible-role-nginx.git | This ansible role is used to install Nginx Server on linux. \ https://github.com/clouddrove/ansible-role-nginx.git
/rackspace-orchestration-templates/vestacp.git | Heat template to install Vesta Control Panel on a Linux server \ https://github.com/rackspace-orchestration-templates/vestacp.git
/kifbv/arch-linux-dell.git | Instructions to install Arch Linux on a Dell laptop. \ https://github.com/kifbv/arch-linux-dell.git
/Alee24/KaliLinuxMiniStarter.git | This is a Simple "Start Program" written in Bash to automate some of the co.. \ https://github.com/Alee24/KaliLinuxMiniStarter.git
/jelly/pkg-audit.git | audit installed packages on Arch Linux against known vulnerabilities \ https://github.com/jelly/pkg-audit.git
/strf0x1/kali-up.git | Supplemental config and install script for kali linux \ https://github.com/strf0x1/kali-up.git
/rafaelmartins/g-octave.git | A tool that generates and installs ebuilds for Octave-Forge packages "on-th.. \ https://github.com/rafaelmartins/g-octave.git
/SmartCash/SmartInstall.git | Install Scripts for Nodes and Linux \ https://github.com/SmartCash/SmartInstall.git
/y-yu/install-tex-travis.git | Install Script for TeXLive2019 to OSX and Linux on Travis CI \ https://github.com/y-yu/install-tex-travis.git
/Sporknife/Linux-Gaming-Setup.git | Easily install GaMiNg programs on most distros... and yes, even Ubuntu \ https://github.com/Sporknife/Linux-Gaming-Setup.git
/lucheholdings/sample_php72_amzn2_docker.git | An Amazon Linux 2 docker image with PHP 7.2 installed. \ https://github.com/lucheholdings/sample_php72_amzn2_docker.git
/thedemz/linux-arch-install.git | Comments on how to install Arch Linux from scratch and other usefull topics.. \ https://github.com/thedemz/linux-arch-install.git
/jpic/install-arch-linux-server.git | Provide a command to format and install arch linux on a server through a ru.. \ https://github.com/jpic/install-arch-linux-server.git
/jackghg/Art-In.git | Artix Linux installer \ https://github.com/jackghg/Art-In.git
/PecuniaK/Arch-Linux-Installation-Guide-for-Dummies-master.git | Guide to installing Arch Linux onto your system, target at newbies and expe.. \ https://github.com/PecuniaK/Arch-Linux-Installation-Guide-for-Dummies-master.git
/JoaoEmanoelConinch/Linux_Full_Set_BackEnd.git | This is a tutorial to you install your  Linux Full Set BackEnd. I'm using a.. \ https://github.com/JoaoEmanoelConinch/Linux_Full_Set_BackEnd.git
/binhex/arch-makemkv.git | Docker build script for Arch Linux base with MakeMKV installed \ https://github.com/binhex/arch-makemkv.git
/Rafatlne/SoftEther-VPN-Client-Setup-on-Manjaro.git | How to Setup/Install/Configure SoftEther VPN Client on Linux.  \ https://github.com/Rafatlne/SoftEther-VPN-Client-Setup-on-Manjaro.git
/lucianobritodev/GitHub-Desktop-For-Linux-Installer.git | A installer maked in Shellscript bash \ https://github.com/lucianobritodev/GitHub-Desktop-For-Linux-Installer.git
/CustomCheat/LinuxCurse.git | [OLD] Install any modpack from CurseForge on linux easily \ https://github.com/CustomCheat/LinuxCurse.git
/iamm3chanic/ArchLinux-install.git | Install Arch simplier! \ https://github.com/iamm3chanic/ArchLinux-install.git
/cycool29/whatsapp-for-linux.git | Install WhatsApp on Linux  \ https://github.com/cycool29/whatsapp-for-linux.git
/gen1us2k/arch_wayland_sway.git | An example of installing arch linux with wayland and sway to Lenovo Thinkpa.. \ https://github.com/gen1us2k/arch_wayland_sway.git
/rikyiso01/tlauncher-linux.git | Debian package to install TLauncher on Ubuntu \ https://github.com/rikyiso01/tlauncher-linux.git
/ice1k/xjb.git | My Emacs/Bashrc configs and linux installer \ https://github.com/ice1k/xjb.git
/CloudSen/archlinux_installer_vm.git | Installer For Arch Linux On Virtual Machine \ https://github.com/CloudSen/archlinux_installer_vm.git
/h3xb0y/arch-installer.git | Installer script of Arch linux :penguin: \ https://github.com/h3xb0y/arch-installer.git
/burzumishi/vmwgfx.git | VMWare GFX Module installer for GNU/Linux \ https://github.com/burzumishi/vmwgfx.git
/dylanoy/linux_nginx_install_script.git | nginx(1.10.0) install shell script \ https://github.com/dylanoy/linux_nginx_install_script.git
/leiteg/arch-linux-install.git | A guide to install Arch Linux. \ https://github.com/leiteg/arch-linux-install.git
/eapolinariov/alpine-linux-on-termux.git | Install Alpine Linux on Termux using QEMU \ https://github.com/eapolinariov/alpine-linux-on-termux.git
/hillaryd/How-to-install-a-Win-10-Guest-OS-on-Linux-KVM-using-CLI-virt-install-in-Ubuntu-18.04.git | A guide on how to install a Windows 10 Guest OS on Linux KVM Hypervisor usi.. \ https://github.com/hillaryd/How-to-install-a-Win-10-Guest-OS-on-Linux-KVM-using-CLI-virt-install-in-Ubuntu-18.04.git
/Derek52/configure-linux-scripts.git | Scripts for configuring and customizing a fresh linux install. Installs pac.. \ https://github.com/Derek52/configure-linux-scripts.git
