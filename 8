/Sycnex/Windows10Debloater | Script to remove Windows 10 bloatware. \ https://github.com/Sycnex/Windows10Debloater.git
/PySimpleGUI/PySimpleGUI | Launched in 2018. It's 2022 and PySimpleGUI is actively developed & support \ https://github.com/PySimpleGUI/PySimpleGUI.git
/rcmaehl/WhyNotWin11 | Detection Script to help identify why your PC is not Windows 11 Release Rea \ https://github.com/rcmaehl/WhyNotWin11.git
/Lexikos/AutoHotkey_L | AutoHotkey - macro-creation and automation-oriented scripting utility for W \ https://github.com/Lexikos/AutoHotkey_L.git
/W4RH4WK/Debloat-Windows-10 | A Collection of Scripts Which Disable / Remove Windows 10 Features and Apps \ https://github.com/W4RH4WK/Debloat-Windows-10.git
/Disassembler0/Win10-Initial-Setup-Script | PowerShell script for automation of routine tasks done after fresh installa \ https://github.com/Disassembler0/Win10-Initial-Setup-Script.git
/kasper/phoenix | A lightweight macOS window and app manager scriptable with JavaScript \ https://github.com/kasper/phoenix.git
/AveYo/MediaCreationTool | Universal MCT wrapper script for all Windows 10/11 versions from 1507 to 21 \ https://github.com/AveYo/MediaCreationTool.bat.git
/ChrisTitusTech/win10script | This is the Ultimate Windows 10 Script from a creation from multiple debloa \ https://github.com/ChrisTitusTech/win10script.git
/coreybutler/node-windows | Windows support for Node.JS scripts (daemons, eventlog, UAC, etc). \ https://github.com/coreybutler/node-windows.git
/rjpcomputing/luaforwindows | Lua for Windows is a 'batteries included environment' for the Lua scripting \ https://github.com/rjpcomputing/luaforwindows.git
/RoliSoft/WSL-Distribution-Switcher | Scripts to replace the distribution behind Windows Subsystem for Linux with \ https://github.com/RoliSoft/WSL-Distribution-Switcher.git
/itm4n/PrivescCheck | Privilege Escalation Enumeration Script for Windows \ https://github.com/itm4n/PrivescCheck.git
/AutomatedLab/AutomatedLab | AutomatedLab is a provisioning solution and framework that lets you deploy  \ https://github.com/AutomatedLab/AutomatedLab.git
/microsoft/windows-dev-box-setup-scripts | Scripts to simplify setting up a Windows developer box \ https://github.com/microsoft/windows-dev-box-setup-scripts.git
/lextm/windowsterminal-shell | Install/uninstall scripts for Windows Terminal context menu items \ https://github.com/lextm/windowsterminal-shell.git
/pbatard/Fido | A PowerShell script to download Windows ISOs or the UEFI Shell \ https://github.com/pbatard/Fido.git
/AutoHotkey/AutoHotkey | AutoHotkey is a powerful and easy to use scripting language for desktop aut \ https://github.com/AutoHotkey/AutoHotkey.git
/411Hall/JAWS | JAWS - Just Another Windows (Enum) Script \ https://github.com/411Hall/JAWS.git
/luzeadev/winactivate | Easy-to-use Windows HWID/KMS38 Activation Script. \ https://github.com/luzeadev/winactivate.git
/microsoft/ClearScript | A library for adding scripting to .NET applications. Supports V8 (Windows,  \ https://github.com/microsoft/ClearScript.git
/countercept/doublepulsar-detection-script | A python2 script for sweeping a network to find windows systems compromised \ https://github.com/countercept/doublepulsar-detection-script.git
/microsoft/MSLab | Azure Stack HCI, Windows 10 and Windows Server rapid lab deployment scripts \ https://github.com/microsoft/MSLab.git
/rdp/ffmpeg-windows-build-helpers | Helper script for cross compiling some media tools for windows, like custom \ https://github.com/rdp/ffmpeg-windows-build-helpers.git
/lingtjien/Grid-Tiling-Kwin | A kwin script that automatically tiles windows \ https://github.com/lingtjien/Grid-Tiling-Kwin.git
/1N3/PrivEsc | A collection of Windows, Linux and MySQL privilege escalation scripts and e \ https://github.com/1N3/PrivEsc.git
/microsoft/MixedRealityToolkit | The MixedRealityToolkit is a collection of scripts and components intended  \ https://github.com/microsoft/MixedRealityToolkit.git
/LeDragoX/Win-10-Smart-Debloat-Tools | These scripts will Customize, Debloat and Improve Privacy/Performance and S \ https://github.com/LeDragoX/Win-10-Smart-Debloat-Tools.git
/pmb6tz/windows-desktop-switcher | An AutoHotKey script for Windows that lets a user change virtual desktops b \ https://github.com/pmb6tz/windows-desktop-switcher.git
/boxcutter/windows | Virtual machine templates for Windows written in legacy JSON and Batch Scri \ https://github.com/boxcutter/windows.git
/avivace/dotfiles | i3 + Plasma: using the i3 window manager on the top of KDE Plasma and other \ https://github.com/avivace/dotfiles.git
/swagkarna/Defeat-Defender-V1 | Powerful batch script to dismantle complete windows defender protection and \ https://github.com/swagkarna/Defeat-Defender-V1.2.git
/pageauc/speed-camera | A Unix, Windows, Raspberry Pi Object Speed Camera using python, opencv, vid \ https://github.com/pageauc/speed-camera.git
/peewpw/Invoke-WCMDump | PowerShell Script to Dump Windows Credentials from the Credential Manager \ https://github.com/peewpw/Invoke-WCMDump.git
/maaaaz/impacket-examples-windows | The great impacket example scripts compiled for Windows \ https://github.com/maaaaz/impacket-examples-windows.git
/frizb/Windows-Privilege-Escalation | Windows Privilege Escalation Techniques and Scripts \ https://github.com/frizb/Windows-Privilege-Escalation.git
/Sophia-Community/SophiApp | :zap: The most powerful open source tweaker for fine-tuning Windows 10 & Wi \ https://github.com/Sophia-Community/SophiApp.git
/jdhitsolutions/PSScriptTools | :wrench: :hammer: A set of PowerShell functions you might use to enhance yo \ https://github.com/jdhitsolutions/PSScriptTools.git
/ropnop/windapsearch | Python script to enumerate users, groups and computers from a Windows domai \ https://github.com/ropnop/windapsearch.git
/git-for-windows/build-extra | Additional files and scripts to help build Git for Windows on MSYS2. \ https://github.com/git-for-windows/build-extra.git
/graniet/chromebackdoor | Chromebackdoor is a PoC of pentest tool, this tool use a MITB technique for \ https://github.com/graniet/chromebackdoor.git
/gladiatx0r/Powerless | Windows privilege escalation (enumeration) script designed with OSCP labs ( \ https://github.com/gladiatx0r/Powerless.git
/davidmarble/virtualenvwrapper-win | Port of Doug Hellmann's virtualenvwrapper to Windows batch scripts \ https://github.com/davidmarble/virtualenvwrapper-win.git
/abbodi1406/BatUtil | Collection of batch scripts utilities for Windows \ https://github.com/abbodi1406/BatUtil.git
/nwg-piotr/autotiling | Script for sway and i3 to automatically switch the horizontal / vertical wi \ https://github.com/nwg-piotr/autotiling.git
/JElchison/format-udf | Bash script to format a block device (hard drive or Flash drive) in UDF. Th \ https://github.com/JElchison/format-udf.git
/peterjc123/pytorch-scripts | A few Windows specific scripts for PyTorch \ https://github.com/peterjc123/pytorch-scripts.git
/microsoft/SDN | This repo includes PowerShell scripts and VMM service templates for setting \ https://github.com/microsoft/SDN.git
/kerol2r20/Windows-terminal-context-menu |  This is a simple script to add right click context menu for your best Win \ https://github.com/kerol2r20/Windows-terminal-context-menu.git
/vmavromatis/gnome-layout-manager | A bash script that batch installs and tweaks GNOME extensions as well as GT \ https://github.com/vmavromatis/gnome-layout-manager.git
/zoltan-dulac/css3FontConverter | A shell script that can use other command line tools to produce @font-face  \ https://github.com/zoltan-dulac/css3FontConverter.git
/diogo-fernan/ir-rescue | A Windows Batch script and a Unix Bash script to comprehensively collect ho \ https://github.com/diogo-fernan/ir-rescue.git
/jlblancoc/suitesparse-metis-for-windows | CMake scripts for painless usage of SuiteSparse+METIS from Visual Studio an \ https://github.com/jlblancoc/suitesparse-metis-for-windows.git
/t4ngo/dragonfly | ARCHIVED! - Speech recognition framework allowing powerful Python-based scr \ https://github.com/t4ngo/dragonfly.git
/atsepkov/awesome-awesome-wm | A curated list of awesome tools/scripts/configs for Awesome Window Manager. \ https://github.com/atsepkov/awesome-awesome-wm.git
/enjoiz/Privesc | Windows batch script that finds misconfiguration issues which can lead to p \ https://github.com/enjoiz/Privesc.git
/kichik/nsis | ***This is just a mirror of https://sf.net/projects/nsis -- please report i \ https://github.com/kichik/nsis.git
/simeononsecurity/Windows-Optimize-Harden-Debloat | Fully Optimize, Harden, and Debloat Windows 10 and Windows 11 Deployments t \ https://github.com/simeononsecurity/Windows-Optimize-Harden-Debloat.git
/polkaulfield/vlmcsd-autokms | Script to automate the installation of vlmcsd as a service and therefore ac \ https://github.com/polkaulfield/vlmcsd-autokms.git
/nccgroup/DriverBuddy | DriverBuddy is an IDA Python script to assist with the reverse engineering  \ https://github.com/nccgroup/DriverBuddy.git
/dictation-toolbox/dragonfly | Speech recognition framework allowing powerful Python-based scripting and e \ https://github.com/dictation-toolbox/dragonfly.git
/bnosac/taskscheduleR | Schedule R scripts/processes with the Windows task scheduler. \ https://github.com/bnosac/taskscheduleR.git
/olemartinorg/i3-alternating-layout | Scripts to open new windows in i3wm using alternating layouts (splith/split \ https://github.com/olemartinorg/i3-alternating-layout.git
/ZephrFish/CVE-2020-1350_HoneyPoC | HoneyPoC: Proof-of-Concept (PoC) script to exploit SIGRed (CVE-2020-1350).  \ https://github.com/ZephrFish/CVE-2020-1350_HoneyPoC.git
/whatever127/offlineinsiderenroll | OfflineInsiderEnroll - A script to enable access to the Windows Insider Pro \ https://github.com/whatever127/offlineinsiderenroll.git
/vektort13/AntiOS | Pyhton scripts that can change your Windows fingerprints and ID \ https://github.com/vektort13/AntiOS.git
/byt3bl33d3r/chrome-decrypter | Python script to decrypt saved Chrome usernames and passwords on windows \ https://github.com/byt3bl33d3r/chrome-decrypter.git
/scriptdev2/scriptdev2 | Replacement for the Script Library that comes with MaNGOS, written in C++ a \ https://github.com/scriptdev2/scriptdev2.git
/ankh2054/windows-pentest | Windows Pentest Scripts \ https://github.com/ankh2054/windows-pentest.git
/warengonzaga/wifi-passview | An open source batch script based WiFi Passview for Windows! \ https://github.com/warengonzaga/wifi-passview.git
/madbomb122/Win10Script | Win 10 Powershell Script to tweak and change windows settings \ https://github.com/madbomb122/Win10Script.git
/ironSource/node-regedit | Read, Write, List and do all sorts of funky stuff to the windows registry u \ https://github.com/ironSource/node-regedit.git
/mcneel/rhinoscriptsyntax | rhinoscriptsyntax library for Python scripting engine that runs on both the \ https://github.com/mcneel/rhinoscriptsyntax.git
/mxre/winres | Create and set windows icons and metadata for executables with a rust build \ https://github.com/mxre/winres.git
/Senscape/Dagon | Dagon is a game engine especially tailored for adventure games and based on \ https://github.com/Senscape/Dagon.git
/MasonStooksbury/Free-Games | Literally just a script that is automatically ran via Windows Task Schedule \ https://github.com/MasonStooksbury/Free-Games.git
/christian-korneck/get_win8key | script to read the Windows 8.x OEM license key from PC firmware \ https://github.com/christian-korneck/get_win8key.git
/awarre/Optimize-WsusServer | Comprehensive Windows Server Update Services (WSUS) cleanup, optimization,  \ https://github.com/awarre/Optimize-WsusServer.git
/niXman/mingw-builds | Scripts for building the dual-target(32 & 64 bit) MinGW-W64 compilers for 3 \ https://github.com/niXman/mingw-builds.git
/aaronparker/evergreen | Create evergreen Windows image build scripts with the latest version number \ https://github.com/aaronparker/evergreen.git
/angusshire/mac-spoofer | :black_joker: Script for spoofing network adapter's MAC address on Windows. \ https://github.com/angusshire/mac-spoofer.git
/CrowdStrike/SuperMem | A python script developed to process Windows memory images based on triage  \ https://github.com/CrowdStrike/SuperMem.git
/TheVDIGuys/Windows_10_VDI_Optimize | Windows 10 optimization script for VDI configurations \ https://github.com/TheVDIGuys/Windows_10_VDI_Optimize.git
/AustralianCyberSecurityCentre/windows_event_logging | Windows Event Forwarding subscriptions, configuration files and scripts tha \ https://github.com/AustralianCyberSecurityCentre/windows_event_logging.git
/calandoa/movescreen | Linux script to move windows across screens \ https://github.com/calandoa/movescreen.git
/jpalbert/webcam-settings-dialog-windows | This is a small script to launch the webcam settings dialog from Windows di \ https://github.com/jpalbert/webcam-settings-dialog-windows.git
/TemporalAgent7/awesome-windows-privacy | A list of awesome tools, documentation and scripts for better privacy on Mi \ https://github.com/TemporalAgent7/awesome-windows-privacy.git
/beanaroo/display-visor | Bash script for applying a pre-defined Xorg monitor layout. Useful for tili \ https://github.com/beanaroo/display-visor.git
/jborean93/ansible-windows | Scripts that are useful for using Ansible with Windows - not affiliated wit \ https://github.com/jborean93/ansible-windows.git
/n1snt/Windows-Decrapifier | A script to debloat Windows. \ https://github.com/n1snt/Windows-Decrapifier.git
/fresh2dev/AnyBox | Designed to facilitate script input/output with an easily customizable WPF  \ https://github.com/fresh2dev/AnyBox.git
/OMENScan/AChoir | Windows Live Artifacts Acquisition Script \ https://github.com/OMENScan/AChoir.git
/brianwrf/WinSystemHelper | A tool that checks and downloads scripts that will aid with privilege escal \ https://github.com/brianwrf/WinSystemHelper.git
/peterpt/fuzzbunch | Shadow Brokers NSA fuzzbunch tool leak . With windows auto instalation scri \ https://github.com/peterpt/fuzzbunch.git
/mikemaccana/compact-wsl2-disk | A small script for Windows 10 Home users to compact their WSL2 disks \ https://github.com/mikemaccana/compact-wsl2-disk.git
/dlemmermann/JPackageScriptFX | A tutorial project featuring a build script (Mac, Windows) for JavaFX appli \ https://github.com/dlemmermann/JPackageScriptFX.git
/cottinghamd/HardeningAuditor | Scripts for comparing Microsoft Windows compliance with the ASD 1709 & Offi \ https://github.com/cottinghamd/HardeningAuditor.git
/jc00ke/move-to-next-monitor | Script to move windows from one monitor to the next in Xubuntu \ https://github.com/jc00ke/move-to-next-monitor.git
/usi3/emacs | An autohotkey script that allows you to use emacs-like key bindings on Wind \ https://github.com/usi3/emacs.ahk.git
/kmwoley/restic-windows-backup | Powershell scripts to run Restic backups on Windows \ https://github.com/kmwoley/restic-windows-backup.git
/teeotsa/windows-11-debloat | Script to optimize your installation of Windows 11. \ https://github.com/teeotsa/windows-11-debloat.git
/NavyTitanium/Fake-Sandbox-Artifacts | This script allows you to create various artifacts on a bare-metal Windows  \ https://github.com/NavyTitanium/Fake-Sandbox-Artifacts.git
/gordonbay/Windows-On-Reins | Wor is a Powershell script to harden, debloat, optimize, enhance privacy, a \ https://github.com/gordonbay/Windows-On-Reins.git
/a118n/poweradmin | Powershell scripts useful for Windows enterprise administration \ https://github.com/a118n/poweradmin.git
/freemansoft/win10-storage-spaces | Scripts for creating an destroying Fault Tolerant multi-tier storage spaces \ https://github.com/freemansoft/win10-storage-spaces.git
/adolfintel/wined3d4win | WineD3D For Windows Build Scripts \ https://github.com/adolfintel/wined3d4win.git
/xhsdf/rtile | Ruby script for manual tiling and window placement \ https://github.com/xhsdf/rtile.git
/palantir/exploitguard | Documentation and supporting script sample for Windows Exploit Guard \ https://github.com/palantir/exploitguard.git
/andrewchambers/godothecorrectthing | A script to do actions based on the current window and selected text. \ https://github.com/andrewchambers/godothecorrectthing.git
/daniel-sc/bash-shell-to-bat-converter | Converter for bash shell scripts to windows batch files. \ https://github.com/daniel-sc/bash-shell-to-bat-converter.git
/ebourg/jsign | Java implementation of Microsoft Authenticode for signing Windows executabl \ https://github.com/ebourg/jsign.git
/lucmos/UltrawideWindows | KWin script to move windows quickly  \ https://github.com/lucmos/UltrawideWindows.git
/pebakery/pebakery | PEBakery is a script engine that specializes in customizing the Windows Pre \ https://github.com/pebakery/pebakery.git
/diegofn/TuneIn-Radio-VLC | TuneIn Radio LUA Script for VLC 2.x. and 3.x. Its compatible with VLC for W \ https://github.com/diegofn/TuneIn-Radio-VLC.git
/greatis/Anti-WebMiner | Anti-WebMiner protects your PC against web cryptocurrency miners (JS script \ https://github.com/greatis/Anti-WebMiner.git
/woanware/usbdeviceforensics | Python script for extracting USB information from Windows registry hives \ https://github.com/woanware/usbdeviceforensics.git
/imabdk/Toast-Notification-Script | My Windows 10 Toast Notification Script explained in details here: https:// \ https://github.com/imabdk/Toast-Notification-Script.git
/aaronparker/intune | Various scripts for use with Microsoft Intune and Windows 10 Modern Managem \ https://github.com/aaronparker/intune.git
/khr0x40sh/WhiteListEvasion | Collection of scripts, binaries and the like to aid in WhiteList Evasion on \ https://github.com/khr0x40sh/WhiteListEvasion.git
/m2nlight/AHKShortcutLikeMac | An AHK Script for using keyboard shortcuts like MacOS on your Windows \ https://github.com/m2nlight/AHKShortcutLikeMac.git
/fpoussin/Qt5-MSVC-Static | Batch script that downloads ans builds static Qt5 libs on Windows. \ https://github.com/fpoussin/Qt5-MSVC-Static.git
/deepzec/Win-PortFwd | Powershell script to setup windows port forwarding using native netsh clien \ https://github.com/deepzec/Win-PortFwd.git
/elmerfdz/OrganizrInstaller | Automated install script for Organizr (https://github.com/causefx/Organizr) \ https://github.com/elmerfdz/OrganizrInstaller.git
/nabijaczleweli/rust-embed-resource | A Cargo build script library to handle compilation and inclusion of Windows \ https://github.com/nabijaczleweli/rust-embed-resource.git
/ManuelGil/Script-Reset-Windows-Update-Tool | This script reset the Windows Update Components. \ https://github.com/ManuelGil/Script-Reset-Windows-Update-Tool.git
/DBHeise/VM_Setup | A collection of scripts to initialize a windows VM to run all the malwares! \ https://github.com/DBHeise/VM_Setup.git
/KernelEquinox/Teensyterpreter | A Teensy script to open up a reverse TCP shell on Windows machines in as li \ https://github.com/KernelEquinox/Teensyterpreter.git
/James231/Start-Menu-Manager | App to add websites/software/files/folders/scripts to the Windows 10 Start  \ https://github.com/James231/Start-Menu-Manager.git
/barbalion/usbip-win-client | USBIP 2.0 windows client files with service scripts \ https://github.com/barbalion/usbip-win-client.git
/guikarist/tensorflow-windows-build-script | A script to automate building Tensorflow on Windows and solve some problems \ https://github.com/guikarist/tensorflow-windows-build-script.git
/iamrootsh3ll/AnchorWatch | A Rogue Device Detection Script with Email Alerts Functionality for Windows \ https://github.com/iamrootsh3ll/AnchorWatch.git
/tinkersec/cve-2020-1350 | Bash Proof-of-Concept (PoC) script to exploit SIGRed (CVE-2020-1350). Achie \ https://github.com/tinkersec/cve-2020-1350.git
/digitalbirdo/BT-LinkkeySync | Scripts to synchronize bluetooth link keys from mac OSX to windows \ https://github.com/digitalbirdo/BT-LinkkeySync.git
/Soorma07/OS-X-Bluetooth-Pairing-Value-To-Windows-Value | A useful script to simultaneously pair a bluetooth device to your Mac in OS \ https://github.com/Soorma07/OS-X-Bluetooth-Pairing-Value-To-Windows-Value.git
/wuseman/wloader | Windows 10 PRO Activator - No more backdoors via loaders from China and nei \ https://github.com/wuseman/wloader.git
/YasserDRIF/Toggle-Tweaker | A script for windows 10 with purpose of tweaking your windows install by re \ https://github.com/YasserDRIF/Toggle-Tweaker.git
/Raphire/Win10Debloat | A simple powershell script to remove bloatware apps from windows 10/11, dis \ https://github.com/Raphire/Win10Debloat.git
/Vozzie/uacscript | Windows 7 UAC Bypass Vulnerability in the Windows Script Host \ https://github.com/Vozzie/uacscript.git
/fdcastel/Hyper-V-Automation | Collection of Powershell scripts to create Windows and Ubuntu VMs in Hyper- \ https://github.com/fdcastel/Hyper-V-Automation.git
/micahcc/i3-wm-scripts | i3 Window Manager Scripts \ https://github.com/micahcc/i3-wm-scripts.git
/mediabots/Linux-to-Windows-with-QEMU | One Script for Auto installation of Windows Server into a Linux Server.  Sc \ https://github.com/mediabots/Linux-to-Windows-with-QEMU.git
/richardhicks/aovpn | PowerShell scripts and sample ProfileXML files for configuring Windows 10 A \ https://github.com/richardhicks/aovpn.git
/metablaster/WindowsFirewallRuleset | Windows firewall PowerShell scripts \ https://github.com/metablaster/WindowsFirewallRuleset.git
/mattreecebentley/win10_simplifier | Windows 10 Simplifier - A script for automating simplifications and mainten \ https://github.com/mattreecebentley/win10_simplifier.git
/petersasi/deluge2-win-build | A set of scripts to prepare and build Deluge2 and it's prerequisites for Wi \ https://github.com/petersasi/deluge2-win-build.git
/alekdavis/PlexBackup | PowerShell script to back up and restore Plex application data on a Windows \ https://github.com/alekdavis/PlexBackup.git
/m2nlight/WindowsServerToWindowsDesktop | A bat script to auto config Windows Server 2016 to "Windows Desktop" \ https://github.com/m2nlight/WindowsServerToWindowsDesktop.git
/aakkam22/windowsUpdateLoopFix | An automated script to fix the "Checking for Updates" loop on Windows 7 \ https://github.com/aakkam22/windowsUpdateLoopFix.git
/JuanmaMenendez/AutoHotkey-script-Open-Show-Apps | AutoHotkey script to open, restore or minimize, Window's and Chrome's Apps  \ https://github.com/JuanmaMenendez/AutoHotkey-script-Open-Show-Apps.git
/nathan-alden-sr/windows-10-tracking | PowerShell script that enables or disables various tracking components in W \ https://github.com/nathan-alden-sr/windows-10-tracking.git
/wimleers/sudoku | Fancy, feature-complete, cross-platform Sudoku app written in C++/Qt. Inclu \ https://github.com/wimleers/sudoku.git
/TERRAOperative/OneDrive-Uninstaller | Batch script to completely uninstall OneDrive in Windows 10 \ https://github.com/TERRAOperative/OneDrive-Uninstaller.git
/septag/darkhammer | darkHAMMER is a lightweight, open-source, multiplatform game engine. writte \ https://github.com/septag/darkhammer.git
/m8r0wn/ldap_search | Python3 script to perform LDAP queries and enumerate users, groups, and com \ https://github.com/m8r0wn/ldap_search.git
/royalapplications/toolbox | This repository contains various automation scripts for Royal TS (for Windo \ https://github.com/royalapplications/toolbox.git
/SEPIA-Framework/sepia-installation-and-setup | Instructions, scripts, tools and files to install, setup and run the SEPIA- \ https://github.com/SEPIA-Framework/sepia-installation-and-setup.git
/C0nw0nk/SteamCMD-AutoUpdate-Any-Gameserver | Windows SteamCMD to autoupdate and install any game server steam cmd settin \ https://github.com/C0nw0nk/SteamCMD-AutoUpdate-Any-Gameserver.git
/GoogleCloudPlatform/compute-image-windows | Windows agents and scripts for Google Compute Engine images. \ https://github.com/GoogleCloudPlatform/compute-image-windows.git
/hahndorf/Set-Privacy | PowerShell script to batch-change privacy settings in Windows 10 \ https://github.com/hahndorf/Set-Privacy.git
/Pwdrkeg/honeyport | A powershell script for creating a Windows honeyport. \ https://github.com/Pwdrkeg/honeyport.git
/geerlingguy/JJG-Ansible-Windows | [DEPRECATED] Windows shell provisioning script to bootstrap Ansible from wi \ https://github.com/geerlingguy/JJG-Ansible-Windows.git
/p0dalirius/DumpSMBShare | A script to dump files and folders remotely from a Windows SMB share. \ https://github.com/p0dalirius/DumpSMBShare.git
/WhAtEvErYoUmEaN/CheckInstalledWindowsUpdates | Script intended for use in an already established monitoring system that mo \ https://github.com/WhAtEvErYoUmEaN/CheckInstalledWindowsUpdates.git
/JayabharathP/The-Python-Mega-Course-Build-10-Real-World-Applications- | The Python Mega Course is one of the top online Python courses with over 10 \ https://github.com/JayabharathP/The-Python-Mega-Course-Build-10-Real-World-Applications-.git
/miguelgfierro/scripts | A collection of useful shell scripts for Linux, Windows & Mac \ https://github.com/miguelgfierro/scripts.git
/ManzDev/video-converter-scripts | Video converter scripts for Windows to multiple formats (with ffmpeg) \ https://github.com/ManzDev/video-converter-scripts.git
/darkquasar/WMI_Persistence | A repo to hold some scripts pertaining WMI (Windows implementation of WBEM) \ https://github.com/darkquasar/WMI_Persistence.git
/Esri/arcgis-powershell-dsc | This repository contains scripts, code and samples for automating the insta \ https://github.com/Esri/arcgis-powershell-dsc.git
/nickrod518/Create-EXEFromPS1 | Takes one PowerShell script and any number of supplementary files or even a \ https://github.com/nickrod518/Create-EXEFromPS1.git
/matthewdunwoody/block-parser | Parser for Windows PowerShell script block logs \ https://github.com/matthewdunwoody/block-parser.git
/Flupp/sticky-window-snapping | A KWin script which lets snapped window edges stick together when one windo \ https://github.com/Flupp/sticky-window-snapping.git
/0intro/wmii | A small, scriptable window manager, with a 9P filesystem interface and an a \ https://github.com/0intro/wmii.git
/pleiszenburg/zugbruecke | Calling routines in Windows DLLs from Python scripts running under Linux, M \ https://github.com/pleiszenburg/zugbruecke.git
/KnightDanila/BAT_FFMPEG | Batch script files for FFMPEG (Microsoft Windows and DOS, OS/2 :unicorn:) \ https://github.com/KnightDanila/BAT_FFMPEG.git
/google/winops | Small scripts and libraries for managing Windows in a corporate environment \ https://github.com/google/winops.git
/alanrenouf/Windows-Workstation-and-Server-Audit | A PowerShell Script which audits your Windows Workstation or Server either  \ https://github.com/alanrenouf/Windows-Workstation-and-Server-Audit.git
/tasox/LogRM | LogRM is a post exploitation powershell script which it uses windows event  \ https://github.com/tasox/LogRM.git
/beardypig/streamlink-portable | A script to build a portable version of Streamlink for Windows \ https://github.com/beardypig/streamlink-portable.git
/DarkCoderSc/PowerRunAsAttached | This script allows to spawn a new interactive console as another user accou \ https://github.com/DarkCoderSc/PowerRunAsAttached.git
/oneoffdallas/check_ioc | Check_ioc is a script to check for various, selectable indicators of compro \ https://github.com/oneoffdallas/check_ioc.git
/aikoncwd/win10script | Windows 10 Script \ https://github.com/aikoncwd/win10script.git
/vah13/Win_ZIP_password | Python script to hook ZIP files passwords in Windows 10 \ https://github.com/vah13/Win_ZIP_password.git
/patriksvensson/machine | Contains my install scripts and configurations for Windows and Linux \ https://github.com/patriksvensson/machine.git
/ctuning/ck-env | CK repository with components and automation actions to enable portable wor \ https://github.com/ctuning/ck-env.git
/kubernetes-sigs/sig-windows-tools | Repository for tools and artifacts related to the sig-windows charter in Ku \ https://github.com/kubernetes-sigs/sig-windows-tools.git
/ImminentFate/SiriShortcuts | Scripts to control Windows PC over SSH \ https://github.com/ImminentFate/SiriShortcuts.git
/hashhar/Windows-Hacks | This repository contains registry scripts, batch files and some knowledge t \ https://github.com/hashhar/Windows-Hacks.git
/CleverComponents/Task-Runner | This program serves for Software build automation, executing sequential tas \ https://github.com/CleverComponents/Task-Runner.git
/Serede/mkvtoolnix-batch | Windows Batch script to automate batch processing using mkvtoolnix. \ https://github.com/Serede/mkvtoolnix-batch.git
/newville/pyshortcuts | create desktop shortcuts to python scripts on Windows, Mac, or Linux \ https://github.com/newville/pyshortcuts.git
/DataDink/WindowScrape | Used in personal scripting for manipulating external applications and their \ https://github.com/DataDink/WindowScrape.git
/Sirithang/UnityObjectTable | Unity Editor window that display all prefab or scriptable object of a given \ https://github.com/Sirithang/UnityObjectTable.git
/ztrhgf/Powershell_CICD_repository | This tool greatly simplifies Windows administrator life by automating the w \ https://github.com/ztrhgf/Powershell_CICD_repository.git
/ArtanisInc/Post-Tweaks | A post-installation batch script for Windows \ https://github.com/ArtanisInc/Post-Tweaks.git
/kendalvandyke/sqlpowerdoc | SQL Power Doc is a collection of Windows PowerShell scripts and modules tha \ https://github.com/kendalvandyke/sqlpowerdoc.git
/Cr4sh/IDA-VMware-GDB | Helper script for Windows kernel debugging with IDA Pro on VMware + GDB stu \ https://github.com/Cr4sh/IDA-VMware-GDB.git
/debasishm89/iofuzz | A mutation based user mode (ring3) dumb in-memory Windows Kernel (IOCTL) Fu \ https://github.com/debasishm89/iofuzz.git
/cunninghamp/Collect-ServerInfo | PowerShell script to collect information about Windows servers \ https://github.com/cunninghamp/Collect-ServerInfo.git
/jeremyben/thebatchman | Converts Windows batch scripts (or HTA) into executable files \ https://github.com/jeremyben/thebatchman.git
/starkat99/appveyor-rust | Scripts for windows versions of Rust on AppVeyor \ https://github.com/starkat99/appveyor-rust.git
/gammacapricorni/happy-meraki-client-vpn | PowerShell scripts for Windows 10, to create saved VPN connections for Mera \ https://github.com/gammacapricorni/happy-meraki-client-vpn.git
/riverar/Remove-HypervisorChecks | A PowerShell script to remove hypervisor checks in both AMD and NVIDIA cons \ https://github.com/riverar/Remove-HypervisorChecks.git
/aashutoshrathi/py-scripts | These are daily life scripts for windows users to make their day easy. \ https://github.com/aashutoshrathi/py-scripts.git
/xpn/Powershell-PostExploitation | Scripts created to help with post exploitation of a Windows host \ https://github.com/xpn/Powershell-PostExploitation.git
/mjmeans/Appx-Backup | PowerShell script to backup an installed Windows Store App to an installabl \ https://github.com/mjmeans/Appx-Backup.git
/uber/client-platform-engineering | A collection of cookbooks, scripts and binaries used to manage our macOS, U \ https://github.com/uber/client-platform-engineering.git
/hulr/BetterPrivacy | PowerShell script to improve your privacy on Windows 10 computers \ https://github.com/hulr/BetterPrivacy.git
/r33int/Windows10-Postinstall | ️ Scripts & programs I use to optimize and debloat my new Windows 10 and W \ https://github.com/r33int/Windows10-Postinstall.git
/JustAMan/pyWinClobber | A set of Python scripts to clobber some free space out of Windows installat \ https://github.com/JustAMan/pyWinClobber.git
/d4rksystem/VMwareCloak | A PowerShell script that attempts to help malware analysts hide their VMwar \ https://github.com/d4rksystem/VMwareCloak.git
/joshua-d-miller/macOSLAPS-Legacy | A python script that will change a local administrator password to a random \ https://github.com/joshua-d-miller/macOSLAPS-Legacy.git
/nicolonsky/IntuneDriveMapping | Generate PowerShell scripts to map network drives on Intune managed Windows \ https://github.com/nicolonsky/IntuneDriveMapping.git
/salyh/elasticsearch-msi-installer | A set of scripts to build (on top of WIX Toolset) MSI installer for install \ https://github.com/salyh/elasticsearch-msi-installer.git
/oze4/New-PSService | Turn any looping .ps1 script into a Windows Service. \ https://github.com/oze4/New-PSService.git
/Sikkandar-Sha/SEC-AUDIT | PowerShell Script for Windows Server Compliance / Security Configuration Au \ https://github.com/Sikkandar-Sha/SEC-AUDIT.git
/Daksh777/windows10-debloat | Collection of various scripts and apps to debloat Windows 10 for better pri \ https://github.com/Daksh777/windows10-debloat.git
/nccgroup/Winstrument | Winstrument is a framework of modular scripts to aid in instrumenting Windo \ https://github.com/nccgroup/Winstrument.git
/WurstCommander/Win10AppRemove | A Powershell-Script for removing / debloating Windows 10 apps. Mandatory ap \ https://github.com/WurstCommander/Win10AppRemove.git
/yaboy58/BatchGuy | Windows desktop application that allows the user to create batch eac3to, mk \ https://github.com/yaboy58/BatchGuy.git
/Octanium91/NFS_Heat_CPU_Load_FIX | Need for Speed Heat, CPU 90-100% load fix (script, windows) \ https://github.com/Octanium91/NFS_Heat_CPU_Load_FIX.git
/p0dalirius/ldap2json | The ldap2json script allows you to extract the whole LDAP content of a Wind \ https://github.com/p0dalirius/ldap2json.git
/d4rksystem/VBoxCloak | A PowerShell script that attempts to help malware analysts hide their Windo \ https://github.com/d4rksystem/VBoxCloak.git
/ericmurphyxyz/rofi-wifi-menu | A bash script using nmcli and rofi to make a wifi menu for your favorite wi \ https://github.com/ericmurphyxyz/rofi-wifi-menu.git
/lubokkanev/vim-everywhere | A script for the Windows application AutoHotKey that implements many of the \ https://github.com/lubokkanev/vim-everywhere.git
/seagull/disable-scheduledWaking | PowerShell script for Windows 10+ devices that aims to stop Windows waking  \ https://github.com/seagull/disable-scheduledWaking.git
/swisscom/PowerGRR | PowerGRR is an API client library in PowerShell working on Windows, Linux a \ https://github.com/swisscom/PowerGRR.git
/rwese/DockWin | Autohotkey Script to save and restore positions of windows. \ https://github.com/rwese/DockWin.git
/D4Vinci/Chrome-Extractor | Python script that will extract all saved passwords from your google chrome \ https://github.com/D4Vinci/Chrome-Extractor.git
/Stefan-Z-Camilleri-zz/Windows-Cursor-Hider | A small script written in AutoHotKey that hides the windows mouse cursor wh \ https://github.com/Stefan-Z-Camilleri-zz/Windows-Cursor-Hider.git
/KSmanis/kwin-move-window-to-center | A simple KWin script that introduces a KDE Global Shortcut for centering th \ https://github.com/KSmanis/kwin-move-window-to-center.git
/Fincer/openra-tibsunra2 | Provides automatic installation scripts for OpenRA with Tiberian Sun & Red  \ https://github.com/Fincer/openra-tibsunra2.git
/saweol/vwaad | IDA script  for vmprotect Windows Api address decoder \ https://github.com/saweol/vwaad.git
/AdamGrossTX/Windows10FeatureUpdates | Scripts for managing Windows 10 Feature Updates \ https://github.com/AdamGrossTX/Windows10FeatureUpdates.git
/davidhowell-tx/PS-DigitalForensics | PowerShell scripts for Hard Drive forensics and parsing Windows Artifacts \ https://github.com/davidhowell-tx/PS-DigitalForensics.git
/dfkt/win-cmd-tools | Collection of some Windows commandline tools/batch scripts I use on a daily \ https://github.com/dfkt/win-cmd-tools.git
/native-toolkit/hxp |  Write scripts in Haxe, and execute them on Windows, macOS or Linux \ https://github.com/native-toolkit/hxp.git
/duncansmart/coffeescript-windows | A shim that allows CoffeeScript to be compiled using Windows Script Host \ https://github.com/duncansmart/coffeescript-windows.git
/Gnucash/gnucash-on-windows | Support scripts to build gnucash for Windows using mingw32. \ https://github.com/Gnucash/gnucash-on-windows.git
/MichiMunich/Windows10-Privacy | PowerShell script for Windows 10 privacy settings \ https://github.com/MichiMunich/Windows10-Privacy.git
/theAIGuysCode/Download-Google-Images | Code to mass download images from Google Images using JavaScript Console Wi \ https://github.com/theAIGuysCode/Download-Google-Images.git
/simeononsecurity/Standalone-Windows-STIG-Script | Create your own Gold Master image. Completely STIG Standalone Windows Syste \ https://github.com/simeononsecurity/Standalone-Windows-STIG-Script.git
/Tieske/luawinmulti | Lua build and installation script for Windows, building multiple Lua versio \ https://github.com/Tieske/luawinmulti.git
/deajan/smartmontools-win | smartmontools for windows package providing automated / mass installation a \ https://github.com/deajan/smartmontools-win.git
/SteveUnderScoreN/WindowsFirewall | PowerShell scripts/GUI tools for the enterprise to harden Windows Defender  \ https://github.com/SteveUnderScoreN/WindowsFirewall.git
/maxwell-bland/i3-natural-scrolling-and-tap | The above is a script that uses an alternate method to enable natural scrol \ https://github.com/maxwell-bland/i3-natural-scrolling-and-tap.git
/inetquestion/Java-JRE-JDK-Downloader | KSH script to automatically download lastest version of the java JRE & JDK  \ https://github.com/inetquestion/Java-JRE-JDK-Downloader.git
/NabiKAZ/video2gif |  A batch script for convert video to GIF files by FFmpeg.exe on Windows \ https://github.com/NabiKAZ/video2gif.git
/microsoft/SurfaceDeploymentAccelerator | Surface Deployment Accelerator (SDA) is a script-driven tool to create Wind \ https://github.com/microsoft/SurfaceDeploymentAccelerator.git
/kitor/wsl | Windows Subsystem for Linux scripts \ https://github.com/kitor/wsl.git
/jahwi/bget | A package manager for Windows scripts. \ https://github.com/jahwi/bget.git
/yasser-alghamdi/winterfell-collection | Winterfell is a group of windows batch scripts to collect Windows forensics \ https://github.com/yasser-alghamdi/winterfell-collection.git
/cervoise/Abuse-bash-for-windows | Pentest scripts for abuse Bash on Windows (Cygwin/WSL) - HackLu 2018 \ https://github.com/cervoise/Abuse-bash-for-windows.git
/rwinlib/base | Scripts used to build R 3.3 - 3.6 on Windows (retired) \ https://github.com/rwinlib/base.git
/mezga0153/offscreen-window-restore | A simple shell script that moves off screen windows back \ https://github.com/mezga0153/offscreen-window-restore.git
/TurboLabIt/StartTileBackup | A simple batch script to backup and restore the Start menu tiles. Requires  \ https://github.com/TurboLabIt/StartTileBackup.git
/boxcutter/windows-ps | Experimental Windows templates written in legacy JSON based on PowerShell s \ https://github.com/boxcutter/windows-ps.git
/FoxP/rclone-backup | Just my rclone Windows batch scripts to backup / sync the second hard drive \ https://github.com/FoxP/rclone-backup.git
/EllaTheCat/dopamine-2020 | i3 window manager config and scripts, tuned to help me manage my Parkinson' \ https://github.com/EllaTheCat/dopamine-2020.git
/VectorBCO/windows-path-enumerate | Script for fix Windows path enumerate vulnerability \ https://github.com/VectorBCO/windows-path-enumerate.git
/titu1994/Neural-Style-Transfer-Windows | Windows Form application written in C# to ease usage of neural style transf \ https://github.com/titu1994/Neural-Style-Transfer-Windows.git
/mangosArchives/Mangos-One-scripts-old | * Current Repo: mangosone/scripts *    Replacement for the Script Library t \ https://github.com/mangosArchives/Mangos-One-scripts-old.git
/offensive-security/Kali-WSL-chroot | Kali Linux Windows App chroot builder script \ https://github.com/offensive-security/Kali-WSL-chroot.git
/nathanpeck/autohotkey-windows-10-apple-magic-keyboard | AutoHotKey script that allows you to use an Apple Magic Keyboard in Windows \ https://github.com/nathanpeck/autohotkey-windows-10-apple-magic-keyboard.git
/ericblade/ssh-agent-cmd | Script for Windows Command Processor (cmd.exe) to run ssh-agent \ https://github.com/ericblade/ssh-agent-cmd.git
/susam/timebox | A timer script for Windows/Linux/Unix/macOS to practice timeboxing (the tim \ https://github.com/susam/timebox.git
/FINRAOS/HiveQLUnit | Test your Hive scripts inside your favorite IDE with HiveQLUnit! Increase y \ https://github.com/FINRAOS/HiveQLUnit.git
/sirupsen/initcwnd | Script to analyze the initial congestion window of any https server \ https://github.com/sirupsen/initcwnd.git
/christian-korneck/firefox_add-certs | script to add new CA certificates to the Firefox trusted certificate store  \ https://github.com/christian-korneck/firefox_add-certs.git
/Warblefly/MultimediaTools-mingw-w64 | Scripts and patches to compile many multimedia utilities, including FFmpeg, \ https://github.com/Warblefly/MultimediaTools-mingw-w64.git
/atlantsecurity/windows-hardening-scripts | Windows 10/11 hardening scripts \ https://github.com/atlantsecurity/windows-hardening-scripts.git
/photron/msys_setup | A set of scripts that setup an MSYS/MinGW environment on Windows and allow  \ https://github.com/photron/msys_setup.git
/officialnochill/WSA-QUICKINSTALL | A simple script for installing apks onto the Windows Subsystem for Android \ https://github.com/officialnochill/WSA-QUICKINSTALL.git
/SMSAgentSoftware/CustomW10UpgradeSplashScreen | PowerShell scripts to create a custom Windows 10 Upgrade Splash Screen for  \ https://github.com/SMSAgentSoftware/CustomW10UpgradeSplashScreen.git
/atthacks/Privescker | Privescker - make life easier by dumping all your common Windows enum, priv \ https://github.com/atthacks/Privescker.git
/Aetf/kwin-maxmize-to-new-desktop | KWin script that moves fullscreened window to a new virtual desktop \ https://github.com/Aetf/kwin-maxmize-to-new-desktop.git
/roligheten/AndroidMediaControlsWindows | Python script that hacks in support for Android headset media control suppo \ https://github.com/roligheten/AndroidMediaControlsWindows.git
/bkfarnsworth/Always-On-Top-PS-Script | A PowerShell script that lets you select an open window to give the "always \ https://github.com/bkfarnsworth/Always-On-Top-PS-Script.git
/Rdimo/Defender-disabler | a simple but destructive batch script that will disable windows defender, t \ https://github.com/Rdimo/Defender-disabler.git
/noahlh/aws-automated-backup-powershell | A set of Windows PowerShell scripts to enable automated backups (via snapsh \ https://github.com/noahlh/aws-automated-backup-powershell.git
/fberson/wvd | Windows Virtual Desktop related ARM Templates, Bicep Files and PowerShell s \ https://github.com/fberson/wvd.git
/sam-b/windows_syscalls_dumper | A dirty IDAPython script to dump windows system call number/name pairs as J \ https://github.com/sam-b/windows_syscalls_dumper.git
/KroniK907/WindowSaver | An AutoHotkey script that will save your window positions and then restore  \ https://github.com/KroniK907/WindowSaver.git
/juliangruber/quicktron | Quickly load a script in an Electron window! \ https://github.com/juliangruber/quicktron.git
/custom-dev-tools/wampserver-ssl-auto-config | WampServer SSL Auto Config is a Microsoft Windows batch script designed to  \ https://github.com/custom-dev-tools/wampserver-ssl-auto-config.git
/duluca/web-dev-environment-setup | Scripts for Windows 10 and macOS X to install web development tools \ https://github.com/duluca/web-dev-environment-setup.git
/bahamas10/windows-bash-ssh-agent | Scripts to persist ssh-agent on Bash on Ubuntu on Windows \ https://github.com/bahamas10/windows-bash-ssh-agent.git
/Hanson/ngrok-script | A script to run local ngrok client for linux and windows \ https://github.com/Hanson/ngrok-script.git
/cutaway-security/sawh | Stand-Alone Windows Hardening (SAWH) is a script to reduce the attack surfa \ https://github.com/cutaway-security/sawh.git
/carsonmcdonald/tmux-wifi-os-x | Utility script to display WIFI info in a tmux window \ https://github.com/carsonmcdonald/tmux-wifi-os-x.git
/kubernetes-sigs/windows-testing | Containers, scripts and documentation for running Kubernetes tests with Win \ https://github.com/kubernetes-sigs/windows-testing.git
/RedGreenBlue09/WFAv7_Installer | Batch script to install Windows 10 ARMv7 to Lumia devices (Dual boot with W \ https://github.com/RedGreenBlue09/WFAv7_Installer.git
/DanySK/Gravis-CI | Set of scripts for running Java / Gradle / Maven builds on Travis CI on Win \ https://github.com/DanySK/Gravis-CI.git
/WinTweaks/windows-optimization | Scripts and tools to tweak Windows 10 for high-performance and low-latency  \ https://github.com/WinTweaks/windows-optimization.git
/PiMaker/Win10-VFIO | Collection of scripts and tweaks for making a Windows 10 virtual machine ru \ https://github.com/PiMaker/Win10-VFIO.git
/PacktPublishing/Mastering-Windows-PowerShell-Scripting-Third-Edition | Mastering Windows PowerShell Scripting, Third Edition, published by Packt \ https://github.com/PacktPublishing/Mastering-Windows-PowerShell-Scripting-Third-Edition.git
/catweazle9/emacs-everywhere | AutoHotkey script to provide basic Emacs key bindings for Windows \ https://github.com/catweazle9/emacs-everywhere.git
/DenchiSoft/UnityAspectRatioController | Unity script to enforce window aspect ratio for standalone Windows 32/64bit \ https://github.com/DenchiSoft/UnityAspectRatioController.git
/obrobrio2000/Samsung-Quick-Share-4-All | This tiny script makes Samsung Quick Share working on non-Samsung Windows P \ https://github.com/obrobrio2000/Samsung-Quick-Share-4-All.git
/zelon88/Ransomware_Defender | A Windows Logon / Startup / Scheduled Task Script for Ransomware Detection  \ https://github.com/zelon88/Ransomware_Defender.git
/neox41/WinEnum | Script for Local Windows Enumeration \ https://github.com/neox41/WinEnum.git
/rwmjones/rhsrvany | Free equivalent of Windows "srvany" program for turning any Windows program \ https://github.com/rwmjones/rhsrvany.git
/gdiaz384/ADKTools | ADKTools provides a set of windows scripts to help manage ADKs, WIM images  \ https://github.com/gdiaz384/ADKTools.git
/JMoVS/installing_video_transcoding_on_windows | Installing Don Melton's excellent video_transcoding scripts on Windows \ https://github.com/JMoVS/installing_video_transcoding_on_windows.git
/1captainnemo1/Powershell_Fernet_Obfuscator | A script to obfuscate powershell payloads , bypassing AMSI.dll and Windows  \ https://github.com/1captainnemo1/Powershell_Fernet_Obfuscator.git
/kevinoid/remove-nonpresent-devices | Script to remove non-present devices from a Windows computer system \ https://github.com/kevinoid/remove-nonpresent-devices.git
/nclarius/tile-gaps | KWin script to add space around windows touching a screen edge or other win \ https://github.com/nclarius/tile-gaps.git
/kaczorws/xboxappmod | Script which lets you modify standard Windows 10 Xbox App streaming to PC s \ https://github.com/kaczorws/xboxappmod.git
/ixi-your-face/Useful-Windows-11-Scripts | Repo to store some useful Windows 11 scripts and documentation \ https://github.com/ixi-your-face/Useful-Windows-11-Scripts.git
/kivy/kivy-sdk-packager | Scripts for Kivy SDK generation on Windows, OS X and Linux \ https://github.com/kivy/kivy-sdk-packager.git
/sagiegurari/shell2batch | Coverts simple basic shell scripts to windows batch scripts. \ https://github.com/sagiegurari/shell2batch.git
/DeadSix27/python_cross_compile_script | Easy to use Linux to Windows cross compile script. \ https://github.com/DeadSix27/python_cross_compile_script.git
/kira2040k/AVBypass | golang script for bypass AV and work only in windows platform \ https://github.com/kira2040k/AVBypass.git
/jmaxwilson/wsl-docker-git-setup | Shell script to configure Windows Subsystem for Linux (WSL) & Ubuntu on Win \ https://github.com/jmaxwilson/wsl-docker-git-setup.git
/VoxelBoy/EditorFormulasWindow | A simple window that lets you tap into all the one-method Editor scripts su \ https://github.com/VoxelBoy/EditorFormulasWindow.git
/oneohthree/bootify | Bash script to make USB drives bootables with Windows 7/8/8.1/10  installat \ https://github.com/oneohthree/bootify.git
/rramatchandran/big-o-performance-java | # big-o-performance A simple html app to demonstrate performance costs of d \ https://github.com/rramatchandran/big-o-performance-java.git
/willyd/caffe-windows-dependencies | Build scripts to compile caffe dependencies on Windows \ https://github.com/willyd/caffe-windows-dependencies.git
/byteben/Windows-10 | Repository for uncategorized Windows 10 Scripts \ https://github.com/byteben/Windows-10.git
/AndreyBazhan/DbgPkg | Scripts to prepare Windows system for debugging. \ https://github.com/AndreyBazhan/DbgPkg.git
/cqsupport/jstackSeries | Script for capturing a series of thread dumps from a Java process using jst \ https://github.com/cqsupport/jstackSeries.sh.git
/opa334/futurerestore-compile-windows | MSYS2 script to compile futurerestore and all of it's dependencies for Wind \ https://github.com/opa334/futurerestore-compile-windows.git
/gitFurious/xboxoneexternal | Script to make Xbox One external hard drives appear in (at least) Windows. \ https://github.com/gitFurious/xboxoneexternal.git
/AndrewHazelden/MultiMesh-Scripting | MultiMesh Scripting is a set of Windows BAT scripts that help simply the pr \ https://github.com/AndrewHazelden/MultiMesh-Scripting.git
/DukeLupus/dlFilter | dlFilter is a text filtering script for mIRC. It is created with both chat  \ https://github.com/DukeLupus/dlFilter.git
/r-windows/r-base | Scripts for building R for Windows using rtools40 \ https://github.com/r-windows/r-base.git
/jcfr/qt-easy-build | Scripts allowing to easily build Qt with OpenSSL support on Linux, macOS or \ https://github.com/jcfr/qt-easy-build.git
/PacktPublishing/Mastering-Windows-PowerShell-Scripting-Fourth-Edition | Mastering Windows PowerShell Scripting Fourth Edition, published by Packt \ https://github.com/PacktPublishing/Mastering-Windows-PowerShell-Scripting-Fourth-Edition.git
/imjonos/wsl2-docker-start | Script added wsl2 host to windows hosts file  \ https://github.com/imjonos/wsl2-docker-start.git
/raspy135/serialmidi | Serial to MIDI bridge Python script for OS X and Windows \ https://github.com/raspy135/serialmidi.git
/dcthomson/mkvdts2ac3 | python script for linux, windows or os x which can be used to convert the D \ https://github.com/dcthomson/mkvdts2ac3.py.git
/initialed85/mac_os_scripts | Some scripts for automating Windows domain stuff for MacOS machines \ https://github.com/initialed85/mac_os_scripts.git
/SuperPat45/UltraModernUI | The Ultra-Modern User Interface is a new interface with a style like the mo \ https://github.com/SuperPat45/UltraModernUI.git
/thexmanxyz/network-share-reconnecter | This project contains a VB script and a Windows scheduler task to automatic \ https://github.com/thexmanxyz/network-share-reconnecter.git
/seapagan/ubuntu-win-bootstrap | DEPRECIATED! Use "linux-comfy-chair" instead. A very simple bootstrap scrip \ https://github.com/seapagan/ubuntu-win-bootstrap.git
/HMMike/Script-Developer-CCU | Write and tests Scripts for Homematic CCU oder Raspberrymatic from Windows  \ https://github.com/HMMike/Script-Developer-CCU.git
/rbtnn/vim-vimconsole | This is immediate-window for Vim script. It is like Google Chrome Developer \ https://github.com/rbtnn/vim-vimconsole.git
/hackcrypto/fluxion | Fluxion is a security auditing and social-engineering research tool. It is  \ https://github.com/hackcrypto/fluxion.git
/PX4/PX4-windows-toolchain | Repo containing all scripts to install and use the PX4 Toolchain for Window \ https://github.com/PX4/PX4-windows-toolchain.git
/sydi/sydi-server | Server documentation script for Windows \ https://github.com/sydi/sydi-server.git
/doctordns/PowerShellCookbook | Script library for Managing Windows Server 2016 With PowerShell Cookbook \ https://github.com/doctordns/PowerShellCookbook.git
/JakubNer/autokey-autohotkey-vim-nav | Scripts for Windows autohotkey to allow vim like navigation in all programs \ https://github.com/JakubNer/autokey-autohotkey-vim-nav.git
/ThoughtfulDev/CME-BruteForcer | A little Python Script for cracking Windows Passwords with the help of Crac \ https://github.com/ThoughtfulDev/CME-BruteForcer.git
/Deen0X/DNXDOScript | Debloat and Optimization Script for machines running Windows 10 \ https://github.com/Deen0X/DNXDOScript.git
/oneh/autohotkey_emacs_keymap | AutoHotkey script to simulate Emacs keybindings on Windows \ https://github.com/oneh/autohotkey_emacs_keymap.git
/deepnight/redistHelper | A small Windows script to quickly create redistribuable of an existing simp \ https://github.com/deepnight/redistHelper.git
/jbaber/ratpoison_scripts | A (the) collection of scripts for the Ratpoison window manager. \ https://github.com/jbaber/ratpoison_scripts.git
/alexriss/keyboard-layout-converter | A simple python script to convert a Windows .klc keyboard layout to a Linux \ https://github.com/alexriss/keyboard-layout-converter.git
/fdfalcon/frida-cfg-hook | An instrumentation script based on Frida which leverages Control Flow Guard \ https://github.com/fdfalcon/frida-cfg-hook.git
/baverman/orcsome | Scripting extension for NETWM compliant window managers \ https://github.com/baverman/orcsome.git
/Indigo744/wlanprofilemanager-ps | A simple powershell script to automatically switch wlan profile on Windows \ https://github.com/Indigo744/wlanprofilemanager-ps.git
/TWolczanski/linux-autoscroll | A simple Python script for Windows-like autoscroll experience on Linux. \ https://github.com/TWolczanski/linux-autoscroll.git
/petrnohejl/android-scripts | Batch scripts for signing and getting cert keys on Windows. \ https://github.com/petrnohejl/android-scripts.git
/lazerl0rd/ScriptWINg | Useful scripts to configure and expand Windows 10. \ https://github.com/lazerl0rd/ScriptWINg.git
/tcja/Windows-10-tweaks | This repo contains multiple scripts to optimize windows 10 \ https://github.com/tcja/Windows-10-tweaks.git
/xCryptoPandax/Brave-Rewards-Automation | Script for Windows and Linux that does simple actions within the brave brow \ https://github.com/xCryptoPandax/Brave-Rewards-Automation.git
/chrisjpowers/iterm_window | Control your terminal windows in iTerm with Ruby -- great for automation sc \ https://github.com/chrisjpowers/iterm_window.git
/p0dalirius/ldapconsole | The ldapconsole script allows you to perform custom LDAP requests to a Wind \ https://github.com/p0dalirius/ldapconsole.git
/rossy/mpv-open-file-dialog | A script for mpv that can launch a regular Windows open file dialog from a  \ https://github.com/rossy/mpv-open-file-dialog.git
/SQLPlayer/DataScriptWriter | Windows desktop application allows you to connect to Microsoft SQL Server d \ https://github.com/SQLPlayer/DataScriptWriter.git
/bwight/CloudInit | CloudInit.NET is a service like the linux CloudInit application but designe \ https://github.com/bwight/CloudInit.NET.git
/i-rme/GOP-Server | The GOP Server is an open-source web server for Linux and Windows systems t \ https://github.com/i-rme/GOP-Server.git
/nerdile/convert-windowsimage | Scripts for converting Windows images (ISO,WIM) to VHD's \ https://github.com/nerdile/convert-windowsimage.git
/paulwinex/houdini_install_script | Auto install Houdini script for Windows and Linux \ https://github.com/paulwinex/houdini_install_script.git
/termuxprofessor/wintermux | Script For Install Windows In Android By Termux. Without Root. \ https://github.com/termuxprofessor/wintermux.git
/mubix/windows-declutter | Windows 10 De-Clutter script \ https://github.com/mubix/windows-declutter.git
/Madsy/guile-automatic-build | Automated cross-build script for building GNU Guile for Windows \ https://github.com/Madsy/guile-automatic-build.git
/KOLANICH-tools/CleanUnwantedUpdates | A set of scripts to detect updates of Microsoft (TM) Windows (TM) OS which  \ https://github.com/KOLANICH-tools/CleanUnwantedUpdates.git
/jamestharpe/windows-development-environment | When starting with a fresh install of Windows, these are my dev tools. All  \ https://github.com/jamestharpe/windows-development-environment.git
/aroma1994/polybar-windows | A polybar script that shows opened windows on your current display. Click o \ https://github.com/aroma1994/polybar-windows.git
/darkoperator/pyforensics | Collection of single use scripts I worte for windows forensics \ https://github.com/darkoperator/pyforensics.git
/log4leo/Shell4Win | A Windows shell interpreter accepting shell commands and shell scripts \ https://github.com/log4leo/Shell4Win.git
/nt4f04uNd/wt-contextmenu | A script to add Windows Terminal to the context menu \ https://github.com/nt4f04uNd/wt-contextmenu.git
/ericwj/PsSecDrv | PowerShell script and module to install the SECDRV copy protection driver o \ https://github.com/ericwj/PsSecDrv.git
/kaytat/repo-for-windows-hack | Hack for the repo script in Android so that it can somewhat be used on Wind \ https://github.com/kaytat/repo-for-windows-hack.git
/HeylonNHP/RIFE-Colab | RIFE interpolation script for google colab, and GUI for Windows or Linux \ https://github.com/HeylonNHP/RIFE-Colab.git
/owre/Win10-Initial-Setup-Script | PowerShell script for automation of routine tasks done after fresh installa \ https://github.com/owre/Win10-Initial-Setup-Script.git
/mardahl/invoke-IntunePolicySync | A script to force the sync of Intune MDM Policies on a Windows 10 Device \ https://github.com/mardahl/invoke-IntunePolicySync.git
/piesecurity/WindowsEventsToCSVTimeline | Simple Powershell scripts to collect all Windows Event Logs from a host and \ https://github.com/piesecurity/WindowsEventsToCSVTimeline.git
/rosemash/luape | A simple Windows executable that frankenstines with Lua to create portable  \ https://github.com/rosemash/luape.git
/custom-dev-tools/wampserver-php-cli-version-changer | WampServer PHP CLI version changer is a Microsoft Windows batch script that \ https://github.com/custom-dev-tools/wampserver-php-cli-version-changer.git
/Synthetica9/sway-floating | Little script to open a window as floating \ https://github.com/Synthetica9/sway-floating.git
/vozonsarker/Help-me-get-rid-of-unhumans | /* JS */ gapi.loaded_0(function(_){var window=this; var ha,ia,ja,ma,sa,na,t \ https://github.com/vozonsarker/Help-me-get-rid-of-unhumans.git
/Snifer/HackingTools | Pentesting Hacking Tools, Scripts, Windows, Linux,  \ https://github.com/Snifer/HackingTools.git
/labeveryday/ping_script | Simple script to ping a list on devices on windows \ https://github.com/labeveryday/ping_script.git
/oazabir/PowershellMonitoring | Collection of Powershell scripts to monitor Windows, IIS, services, process \ https://github.com/oazabir/PowershellMonitoring.git
/iSECPartners/vtfinder | pykd script to dynamically find vtables on heap (windows x86/x64) \ https://github.com/iSECPartners/vtfinder.git
/trodemaster/packer-WinSrv2012r2 | packer.io template and related scripts for building Windows Server 2012 r2  \ https://github.com/trodemaster/packer-WinSrv2012r2.git
/ManuelGil/Uninstall-Office-2016 | This script allows you to uninstall or automatically delete Office 2016, 36 \ https://github.com/ManuelGil/Uninstall-Office-2016.git
/jdhitsolutions/WindowsSandboxTools | :camel: My PowerShell scripts and tools for setting up and configuring the  \ https://github.com/jdhitsolutions/WindowsSandboxTools.git
/nichite/chill-out-windows-10 | A simple powershell script that removes a lot of Windows 10's more unnecess \ https://github.com/nichite/chill-out-windows-10.git
/lwilletts/fwm | wmutils based shell scripts for window management \ https://github.com/lwilletts/fwm.git
/Lyceris-chan/Spotify-adblock | A batch script that automagically applies moadfakhri/SpotifyAdBlocker-Windo \ https://github.com/Lyceris-chan/Spotify-adblock.git
/PurpleHullPeas/MPMD-AutoBedLevel-Cal | This python script or Windows executable will automatically level the bed b \ https://github.com/PurpleHullPeas/MPMD-AutoBedLevel-Cal.git
/zloeber/WindowsSetupScripts | Windows Desktop Configuration Scripts \ https://github.com/zloeber/WindowsSetupScripts.git
/umarfarook882/Windows-InstallerBypass | Windows Installer Bypass  using Rollback Script .rbs and .rbf - Race Condit \ https://github.com/umarfarook882/Windows-InstallerBypass.git
/oze4/PaaWS-PowerShell-as-a-Windows-Service | Run a PowerShell script as a Windows Service, using this PowerShell GUI scr \ https://github.com/oze4/PaaWS-PowerShell-as-a-Windows-Service.git
/simeononsecurity/Standalone-Windows-Server-STIG-Script |  STIG Standalone Windows Servers to DoD STIG/SRG Requirements and NSACyber  \ https://github.com/simeononsecurity/Standalone-Windows-Server-STIG-Script.git
/GreySec-Security-Forums/WinRootHelper | PowerShell script to help with privilege escalation on a compromised Window \ https://github.com/GreySec-Security-Forums/WinRootHelper.git
/gbuktenica/PsRun | Run a PowerShell script in the user context without a script window \ https://github.com/gbuktenica/PsRun.git
/NeverDecaf/ungoogled-updater | Script for windows to keep ungoogled-chromium up to date. \ https://github.com/NeverDecaf/ungoogled-updater.git
/AonCyberLabs/BadSamba | This module is used to exploit startup script execution through Windows Gro \ https://github.com/AonCyberLabs/BadSamba.git
/MRCollective/repave | A PowerShell module that allows you to easily create a terse re-pave script \ https://github.com/MRCollective/repave.psm1.git
/rashevskyv/switch_game_checker | Script for Windows for check Switch game for matching with official images \ https://github.com/rashevskyv/switch_game_checker.git
/d86leader/dynamic_workspaces | A kwin script that creates and deletes desktops as you move windows on the  \ https://github.com/d86leader/dynamic_workspaces.git
/byteben/OneDrive | PowerShell Scripts for OneDrive Discovery and remediation in WIndows 10 / S \ https://github.com/byteben/OneDrive.git
/SarthakPatidar/Autofill-SRM-Academia-FeedBack | Fill all the feedback entries by running a single Script in your Browser Co \ https://github.com/SarthakPatidar/Autofill-SRM-Academia-FeedBack.git
/bpampuch/apple-keyboard-mapping-for-win10 | An AutoHotKey script, mapping most common OSX keyboard shortcuts to Windows \ https://github.com/bpampuch/apple-keyboard-mapping-for-win10.git
/Seirdy/term-dmenu | Replace dmenu with a floating terminal and FZF! Comes with helper scripts f \ https://github.com/Seirdy/term-dmenu.git
/WheezyE/Winelink | Installation scripts for running Winlink on non-Windows platforms (currentl \ https://github.com/WheezyE/Winelink.git
/austinsonger/HandyScripts | Handy Scripts (and Lists) for MacOS, Windows, and Linux Based Operating Sys \ https://github.com/austinsonger/HandyScripts.git
/Aaronontheweb/azure-webroleperformance-scripts | Scripts that enable developers to modify machine.config programmatically as \ https://github.com/Aaronontheweb/azure-webroleperformance-scripts.git
/OneLogicalMyth/BuildReview-Windows | A PowerShell script for performing a build review of a Windows host \ https://github.com/OneLogicalMyth/BuildReview-Windows.git
/skycommand/AdminScripts | Scripts for carrying out administrative tasks in Windows \ https://github.com/skycommand/AdminScripts.git
/eschu21/terraform_sharepoint_automation | Using terraform to automate the deployment of SharePoint in AWS. The Terraf \ https://github.com/eschu21/terraform_sharepoint_automation.git
/IllusiveNetworks-Labs/Update-AllUsersQA | Update-AllUsersQA is a PowerShell script used to change or disable the secu \ https://github.com/IllusiveNetworks-Labs/Update-AllUsersQA.git
/yi-Xu-0100/cfw-scripts | Some scripts for parser in clash.for.windows. \ https://github.com/yi-Xu-0100/cfw-scripts.git
/MainakRepositor/Shell-Scripting | A collection of bash programs (shell scripts) that can be run on Linux, Uni \ https://github.com/MainakRepositor/Shell-Scripting.git
/morphogencc/ofxWindowsSetup | Not a proper openFrameworks addon, but a set of scripts that are useful for \ https://github.com/morphogencc/ofxWindowsSetup.git
/NeedsCoffee/Tailscale-Updater-Windows | Windows PowerShell scripts that will keep installations of Tailscale update \ https://github.com/NeedsCoffee/Tailscale-Updater-Windows.git
/huner2/Cyber-Security-Scripts | Scripts for securing Windows, Debian, and Ubuntu machines. \ https://github.com/huner2/Cyber-Security-Scripts.git
/Vesterberg/EasyEthminingFull | Windows batch scripts with Ethminer binaries and Geth binaries \ https://github.com/Vesterberg/EasyEthminingFull.git
/func-github/AHK-Windows-Enhancement | AutoHotKey scripts to improve windows, the windows explorer, and the window \ https://github.com/func-github/AHK-Windows-Enhancement.git
/sdovnic/advfirewall | AdvFirewall Scripts - A Collection of Scripts to Manage your Advanced Windo \ https://github.com/sdovnic/advfirewall.git
/bcowdery/octopus-scripts | Powershell deployment scripts for windows services, creating message queues \ https://github.com/bcowdery/octopus-scripts.git
/arduino/dfu-utils-cross |  scripts to compile (and cross-compile from a Linux machine) dfu-utils pack \ https://github.com/arduino/dfu-utils-cross.git
/corelan/CorelanTraining | Script(s) to assist with the setup of WinDBG & mona.py on a Windows 10 VM \ https://github.com/corelan/CorelanTraining.git
/sheepla/FontInstaller | ️ A font installer script for Windows \ https://github.com/sheepla/FontInstaller.git
/ponchoblesa/GoPro-Studio-for-linux | This repository contains some bash scripts to process your GoPro media file \ https://github.com/ponchoblesa/GoPro-Studio-for-linux.git
/seanbreckenridge/dotfiles | cross-platform (linux (arch), macos, android (termux), windows (WSL)) dotfi \ https://github.com/seanbreckenridge/dotfiles.git
/zelon88/Registry_Monitor | A Windows script to monitor registry hives for modifications & notify you w \ https://github.com/zelon88/Registry_Monitor.git
/dtinth/FocusHighlight | A hammerspoon script that briefly highlights the active window when focused \ https://github.com/dtinth/FocusHighlight.spoon.git
/HoneyPatch/pollination | Pollination is an open source batch simulation and visualization tool for r \ https://github.com/HoneyPatch/pollination.git
/cloudbase/FreeRDP-Windows-Build | FreeRDP Windows build scripts \ https://github.com/cloudbase/FreeRDP-Windows-Build.git
/jksdua/credit-card-finder | Powershell script for discovering credit cards on a Windows machine \ https://github.com/jksdua/credit-card-finder.git
/joshuaruppe/winprivesc | Windows Enumeration and Privilege Escalation Script \ https://github.com/joshuaruppe/winprivesc.git
/acochenour/PSInspect | PowerShell script useful for Incident Response and security/configuration b \ https://github.com/acochenour/PSInspect.git
/vosvos/skia-win32-dll | Skia 2D graphic library build script for Windows (skia.dll). \ https://github.com/vosvos/skia-win32-dll.git
/gojhonny/Assessment-Scripts | Cross platform (i.e., Windows, Linux, Mac) assessment script. The script he \ https://github.com/gojhonny/Assessment-Scripts.git
/liberavia/Install3CXClient | Script for easy installing of Windows 3CX-Client on your Linux machine \ https://github.com/liberavia/Install3CXClient.git
/attilagyongyosi/spotify-autohotkey | An AutoHotkey script and executable providing global hotkeys for the Spotif \ https://github.com/attilagyongyosi/spotify-autohotkey.git
/mortenya/Windows10-Cleanup | This is a script to harden Windows 10 after initial installation and remove \ https://github.com/mortenya/Windows10-Cleanup.git
/nclarius/KWin-window-positioning-scripts | KWin scripts controlling window placement on multi-monitor setups \ https://github.com/nclarius/KWin-window-positioning-scripts.git
/aboutsecurity/Audit_Host-Baseline | A set of Bash scripts that allows you to repeatably collect and compare bas \ https://github.com/aboutsecurity/Audit_Host-Baseline.git
/runeimp/IconImp | The iconimp BASH script is a PNG to FavIcon ICO, Mac ICNS, Windows ICO and  \ https://github.com/runeimp/IconImp.git
/emallson/gram | A Wayland Tiling Window Manager (in progress) scriptable in Guile Scheme \ https://github.com/emallson/gram.git
/yzyhk904/USB_SampleRate_Changer | This script changes the sample rate of the USB audio class driver on Androi \ https://github.com/yzyhk904/USB_SampleRate_Changer.git
/neil-sabol/EZWinBan | EZWinBan builds on and automates Chris Hartwig's RDP Brute Force Attack Det \ https://github.com/neil-sabol/EZWinBan.git
/Scatty81/zabbix-windows | Windows Zabbix scripts \ https://github.com/Scatty81/zabbix-windows.git
/zet-sec/Windows-Defender-Kill | ✔A script that turns off Windows Defender \ https://github.com/zet-sec/Windows-Defender-Kill.git
/dushyantgill/AADGraphPowerShell | Cmdlets in a PowerShell script module that access Windows Azure AD Graph AP \ https://github.com/dushyantgill/AADGraphPowerShell.git
/jbooz1/WindowsScripts | Some scripts and things that are useful for Windows things \ https://github.com/jbooz1/WindowsScripts.git
/wjx0912/PowerSniff | network capture and analyse tool on windows, support two dynamic script for \ https://github.com/wjx0912/PowerSniff.git
/trice81384/macOSSoftwareUpdates | A bash script to check for updates on macOS and notify users via JAMF Helpe \ https://github.com/trice81384/macOSSoftwareUpdates.git
/schnittstabil/globstar | Run programs with glob/globstar support, especially on Windows within npm s \ https://github.com/schnittstabil/globstar.git
/deviantollam/DohPro | a windows batch script that quickly defuckulates spanned .MP4 files that ar \ https://github.com/deviantollam/DohPro.git
/lowleveldesign/debuggable-windows | This repository contains Ansible scripts which will install and configure t \ https://github.com/lowleveldesign/debuggable-windows.git
/exploitechx/wifi-password-extractor | A Digispark rubber ducky script for Windows to Extract and Mail Wifi profil \ https://github.com/exploitechx/wifi-password-extractor.git
/Tiberriver256/Auto-Microsoft-Deployment-Toolkit-Installation-and-Scaffolding | This is a single script that will install MDT and scaffold out Windows 7, W \ https://github.com/Tiberriver256/Auto-Microsoft-Deployment-Toolkit-Installation-and-Scaffolding.git
/lkys37en/Lab-Automation | Packer and vagrant scripts to automate building Windows and Linux machines  \ https://github.com/lkys37en/Lab-Automation.git
/tam-carre/sloppymove | Openbox-compatible script to swap two windows' positions or draw a rectangl \ https://github.com/tam-carre/sloppymove.git
/fynydd/sqribe | .NET 6.0 C# CLI for backup, restore, scripting, and versioning MS SQL Serve \ https://github.com/fynydd/sqribe.git
/mguludag/WSL-Manager | This is PowerShell script for linux distro download and installation to wsl \ https://github.com/mguludag/WSL-Manager.git
/RendySetiawan/TEST | var parent=document.getElementsByTagName("html")[0]; var _body = document.g \ https://github.com/RendySetiawan/TEST.git
/Sfedfcv/redesigned-pancake | Skip to content github / docs Code Issues 80 Pull requests 35 Discussions A \ https://github.com/Sfedfcv/redesigned-pancake.git
/monitisexchange/Windows-Monitoring-Scripts | Windows Monitoring Scripts based on Monitis API \ https://github.com/monitisexchange/Windows-Monitoring-Scripts.git
/LiamLeane/ForemanWindows | Foreman provisioning scripts for Windows and detailed Windows setup guide \ https://github.com/LiamLeane/ForemanWindows.git
/notedit/webrtc-build | WebRTC auto build scripts for windows/mac/linux/iOS/Android \ https://github.com/notedit/webrtc-build.git
/daball/FreeRDP-RemoteApp-IntegrationScripts | These are RemoteApp integration scripts intended to help run Windows Remote \ https://github.com/daball/FreeRDP-RemoteApp-IntegrationScripts.git
/vmware-archive/salt-windows-dev | Script to install all dependencies necessary to create a Development Enviro \ https://github.com/vmware-archive/salt-windows-dev.git
/marcosdiez/openfile | Scripts to close the gap of developing on Linux in a Windows box. \ https://github.com/marcosdiez/openfile.git
/trodemaster/packer-win-pc | packer.io templates & scripts for building private cloud optimized Windows  \ https://github.com/trodemaster/packer-win-pc.git
/briandenicola/PSScripts | A variety of scripts that I have written over the years to manage applicati \ https://github.com/briandenicola/PSScripts.git
/ThomasLeister/root-certificate-deployment | How to deploy an own Root CA certificate on Windows and Linux: Guide and sc \ https://github.com/ThomasLeister/root-certificate-deployment.git
/Andy2244/openwrt-package-builder | dockerized OpenWrt-Package-Builder scripts for Linux, Windows 10 and macOS \ https://github.com/Andy2244/openwrt-package-builder.git
/xFaraday/EzScript | Cyberpatriot born Windows hardening script.  It serves as a way to get to b \ https://github.com/xFaraday/EzScript.git
/everett1992/herbstluftwm | My settings and scripts for the herbstluft windows manager \ https://github.com/everett1992/herbstluftwm.git
/cryptrace/ducky | Just a USB rubber ducky script stack to grab all windows logon information  \ https://github.com/cryptrace/ducky.git
/Damokless/Windows11-Optimization | Community repository, to improve security and performance of Windows 10 and \ https://github.com/Damokless/Windows11-Optimization.git
/xhsdf/pxdo | Python script for querying X-server information and manipulating X-windows \ https://github.com/xhsdf/pxdo.git
/jivco/wowza-nginx-cdn | Some config files and POC code to make Wowza work with large DVR window and \ https://github.com/jivco/wowza-nginx-cdn.git
/JonnyBanana/Rubber_Ducky_Gather_Network_Info |  :hatched_chick: :hatched_chick: :hatched_chick:   A very quickly script fo \ https://github.com/JonnyBanana/Rubber_Ducky_Gather_Network_Info.git
/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020 | NOTICE This repository contains the public FTC SDK for the SKYSTONE (2019-2 \ https://github.com/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020.git
/milgradesec/windows-settings | Windows hardening scripts and configs. \ https://github.com/milgradesec/windows-settings.git
/Un0wnX/swaparoo | A meterpreter script to backdoor windows (any version) \ https://github.com/Un0wnX/swaparoo.git
/WillBixler/TwinUI-Fix | Script to fix the TwinUI windows bug \ https://github.com/WillBixler/TwinUI-Fix.git
/openslide/openslide-winbuild | MinGW-w64 build script for OpenSlide and its dependencies on Windows \ https://github.com/openslide/openslide-winbuild.git
/jakobehn/WindowsContainerBuildImage | Docker files and scripts for creating a Windows Server Core image with buil \ https://github.com/jakobehn/WindowsContainerBuildImage.git
/jake-stewart/swayfader | Window fading script in Swaywm \ https://github.com/jake-stewart/swayfader.git
/TerryHuangHD/Windows10-VersionSwitcher | A simple script to switch Windows 10 version, supports Home & Pro & Educati \ https://github.com/TerryHuangHD/Windows10-VersionSwitcher.git
/yuk7/dotfiles | My dotfiles and installation scripts.  for GNU/Linux,WSL,MSYS2,macOS and Wi \ https://github.com/yuk7/dotfiles.git
/kaushalag29/Windows-Hacking-Scripts-With-Python | Hacking Wifi-Passwords,Chrome-Saved-Passwords,Copying the Scripts to Window \ https://github.com/kaushalag29/Windows-Hacking-Scripts-With-Python.git
/Strappazzon/teleme7ry | ⛔ Automated batch script to disable telemetry in Windows 7 \ https://github.com/Strappazzon/teleme7ry.git
/wilga/win-openssl-self-signed-san | Windows script to create self-signed certificate with SAN for Chrome 58+ \ https://github.com/wilga/win-openssl-self-signed-san.git
/PercussiveElbow/Clippy | Terribad  PrivEsc enumeration script for Windows systems \ https://github.com/PercussiveElbow/Clippy.git
/glenviewjeff/HyperWindowSnap | Hyper Window Snap is an AutoHotkey script for moving and resizing windows t \ https://github.com/glenviewjeff/HyperWindowSnap.git
/vysecurity/WindfarmDynamite-CNA | CobaltStrike Aggressor Script to utilise FuzzySec's Windows Notification Fr \ https://github.com/vysecurity/WindfarmDynamite-CNA.git
/T13nn3s/CVE-2020-1350 | This Powershell Script is checking if your server is vulnerable for the CVE \ https://github.com/T13nn3s/CVE-2020-1350.git
/JonnyBanana/DUCKY_REAPER | Collection of Multi-platform Scripts for Rubber Ducky that exploit the css  \ https://github.com/JonnyBanana/DUCKY_REAPER.git
/maks-it/PSScriptsService | This project has an aim to allow System Administrators and also to who Thin \ https://github.com/maks-it/PSScriptsService.git
/xmendez/i3-scripts | Scripts for the i3 windows manager \ https://github.com/xmendez/i3-scripts.git
/s7jones/Wifi-Signal-Plotter | A Python script for graphing and comparing the WiFi signal strengths betwee \ https://github.com/s7jones/Wifi-Signal-Plotter.git
/lavalamp-/smb-check | A simple bash script that uses smbclient to test access to Windows file sha \ https://github.com/lavalamp-/smb-check.git
/wellsluo/DeployVHD | PowerShell script to deploy new VHD(X) file with un-attend information from \ https://github.com/wellsluo/DeployVHD.git
/szotsaki/windows-telemetry-removal | Scripts which make turning off Windows telemetry easier \ https://github.com/szotsaki/windows-telemetry-removal.git
/UtkarshVerma/qemu-vfio-win10 | Shell script for launching a Windows 10 guest with GPU passthrough using Lo \ https://github.com/UtkarshVerma/qemu-vfio-win10.git
/rakheshster/iTerm2WindowsTerminal | PowerShell script that converts iTerm2 colors to Windows Terminal colors \ https://github.com/rakheshster/iTerm2WindowsTerminal.git
/MichaelApproved/powershell-block-windows-attack | Powershell script to block Windows brute force attack attempts based on pre \ https://github.com/MichaelApproved/powershell-block-windows-attack.git
/leipert/xkcd-now-clock | Windows scripts for a wallpaper clock based on XKCD now (http://xkcd.com/13 \ https://github.com/leipert/xkcd-now-clock.git
/silverfoxy/wsl2_host_ip | This is a simple script that will add an entry "wsl2.host" within Windows h \ https://github.com/silverfoxy/wsl2_host_ip.git
/nim-lang/niminst | EDIT: now archived, see https://github.com/nim-lang/Nim/issues/15946. nimin \ https://github.com/nim-lang/niminst.git
/3ct0s/badusb-download-execute-disable-windows-defender | This is a Bad USB script which will download and execute any file from the  \ https://github.com/3ct0s/badusb-download-execute-disable-windows-defender.git
/yahyalmh/ChangeWallpaper | This script downloads the Bing and Nasa daily wallpaper and uses them to ch \ https://github.com/yahyalmh/ChangeWallpaper.git
/ThreeNG/linuxfoundation | linuxfoundation http://feeds2.feedburner.com/Command-line-fu http://steve-j \ https://github.com/ThreeNG/linuxfoundation.org.git
/NuGardt/docker-msbuild | MSBuild Windows Docker Scripts \ https://github.com/NuGardt/docker-msbuild.git
/Pithikos/winlaunch | Save the position of open windows and auto-generate scripts to launch them \ https://github.com/Pithikos/winlaunch.git
/sponte/Powershell | Powershell scripts that automated component deployment. Supports windows se \ https://github.com/sponte/Powershell.Deployment.git
/mekentosj/sample-chrome-extension | A sample Chrome extension that demonstrates communication between content w \ https://github.com/mekentosj/sample-chrome-extension.git
/GorvGoyl/Autohotkey-Scripts-Windows | Autohotkey scripts to make you more productive when using Windows. \ https://github.com/GorvGoyl/Autohotkey-Scripts-Windows.git
/describe19/check-video | Windows .bat script that checks video file integrity using ffmpeg \ https://github.com/describe19/check-video.git
/raevilman/windows-scripts | Committing batch/powershell scripts for altering/improving Windows OS [pers \ https://github.com/raevilman/windows-scripts.git
/zhangkuicheng/linux-win_cashout | Optimized the official cashout.sh script so that the cashout.sh script can  \ https://github.com/zhangkuicheng/linux-win_cashout.git
/bpierre/jquery-superbox | [INACTIVE] jQuery Superbox! is a script which allows you display windows wi \ https://github.com/bpierre/jquery-superbox.git
/kicsikrumpli/wine-pyinstaller | Compile Python 3.x scripts with Pyinstaller into 32 bit Windows executables \ https://github.com/kicsikrumpli/wine-pyinstaller.git
/Pyratik/PS_Get-DefenderReport | A PowerShell script to report on Windows Defender status \ https://github.com/Pyratik/PS_Get-DefenderReport.git
/porterhau5/sleat | Security Logon Event Analysis Tools - a collection of scripts for collectin \ https://github.com/porterhau5/sleat.git
/davidjura/MS15-034-IIS-Active-DoS-Exploit-PoC | Proof of concept exploit script used to exploit the MS15-034 vulnerability  \ https://github.com/davidjura/MS15-034-IIS-Active-DoS-Exploit-PoC.git
/sahilsehwag/ahk-vimified-explorer | VimifiedExplorer is an AHK script that provides vim/vifm like bindings for  \ https://github.com/sahilsehwag/ahk-vimified-explorer.git
/AshleyHow/WindowsOSBuild | Gets windows patch release information (Version, Build, Availability date,  \ https://github.com/AshleyHow/WindowsOSBuild.git
/Quessts/RD-Bypass-AV | This is a Rubber Ducky script that downloads an executable file externally  \ https://github.com/Quessts/RD-Bypass-AV.git
/farag2/Windows-8 | Script to setup Windows 8.1 \ https://github.com/farag2/Windows-8.1-Setup-Script.git
/masyamandev/Showwin-script | Linux script for quick switching active window using hot keys  \ https://github.com/masyamandev/Showwin-script.git
/vahidhedayati/termssh | termssh is a script to create and maintain gnome terminator layouts for ssh \ https://github.com/vahidhedayati/termssh.git
/VoidSec/shopping-cart | Shopping Cart is a free, open source web application provided to allow secu \ https://github.com/VoidSec/shopping-cart.git
/Negative-py/SubScan | SubScan is a script and a Python module that is used to find directories an \ https://github.com/Negative-py/SubScan.git
/penteseter123/LiveInstagramLocalhosts | InstagramLive-PHP Discord A PHP script that allows for you to go live on In \ https://github.com/penteseter123/LiveInstagramLocalhosts.git
/marmollie101/https-agpl |  <!DOCTYPE html> <html lang="">   <head>     <meta charset="utf-8" />       \ https://github.com/marmollie101/https-agpl.fsf.org-.git
/ProtonVPN/win-openvpn | Scripts for building OpenVPN used in ProtonVPN Windows app \ https://github.com/ProtonVPN/win-openvpn.git
/gajop/batch2bash | Simple windows batch to Linux/Unix bash script converter  \ https://github.com/gajop/batch2bash.git
/EjinCaitsith/Scripts | Window 4 Buff Scripts \ https://github.com/EjinCaitsith/Scripts.git
/neutmute/nm-boxstarter | Boxstarter, chocolatey scripts for seeding a fresh Windows install \ https://github.com/neutmute/nm-boxstarter.git
/Ignaciox/Cleandows-10 | Scripts that disables unwanted windows features \ https://github.com/Ignaciox/Cleandows-10.git
/BingLingGroup/run-udp2raw-batch | udp2raw, tinyportmapper, kcptun, udpspeeder windows batch scripts. \ https://github.com/BingLingGroup/run-udp2raw-batch.git
/Happygator/CIS-Microsoft-Windows-Server-2019-Benchmark | Powershell script to automate your windows hardening process based on CIS B \ https://github.com/Happygator/CIS-Microsoft-Windows-Server-2019-Benchmark.git
/surajp/sfdx-powershell-autocomplete | Autocomplete script for powershell on windows, for sfdx \ https://github.com/surajp/sfdx-powershell-autocomplete.git
/JonnyBanana/-MFT-Duck-Crasher | A Simple Script for Rubber Ducky which Exploits Windows $MFT Vulnerability \ https://github.com/JonnyBanana/-MFT-Duck-Crasher.git
/dend/windows-dev-box |  Scripts and relevant configuration to set up my Windows development box. \ https://github.com/dend/windows-dev-box.git
/jen20/packer-windows-visualstudio | Packer scripts for building boxes to run Windows and Visual Studio with mos \ https://github.com/jen20/packer-windows-visualstudio.git
/ValentinaUn/Fast-permutation-entropy | MATLAB script for efficiently computing values of permutation entropy from  \ https://github.com/ValentinaUn/Fast-permutation-entropy.git
/mattjm/duplicacy-script | script and guide for getting duplicacy running on Windows \ https://github.com/mattjm/duplicacy-script.git
/dpet23/New-Machine-Settings | PowerShell scripts for setting up a new Windows 10 machine. \ https://github.com/dpet23/New-Machine-Settings.git
/keerah/SendTo_FFmpeg | A set of batch scripts to automate video conversion using FFmpeg on Windows \ https://github.com/keerah/SendTo_FFmpeg.git
/hasan-hasanov/ScoopBox | ScoopBox is library that helps launch Windows Sandbox with preinstalled app \ https://github.com/hasan-hasanov/ScoopBox.git
/skanga/BashWin | An attempt at allowing bash scripts to run on a Windows box  \ https://github.com/skanga/BashWin.git
/studoot/ps2exe | Fork of Marcus Sholtes' fork of Ingo Karstein's script to compile Powershel \ https://github.com/studoot/ps2exe.git
/FabioDefilippo/winallenum | This powershell script has got to run in remote hacked windows host, even f \ https://github.com/FabioDefilippo/winallenum.git
/microsoft/azure-ssl-configure | This is a sample and template Azure Web Role project containing start up sc \ https://github.com/microsoft/azure-ssl-configure.git
/kirsle/ | My Unix config files and shell scripts, optimized for Fedora, Debian, macOS \ https://github.com/kirsle/.dotfiles.git
/aderusha/Get-PrusaFwDevEnv | A script which will download all the required elements to modify and compil \ https://github.com/aderusha/Get-PrusaFwDevEnv.git
/wilecoyote2015/Swytch | Swytch is a script providing a window switcher for sway using rofi, awk and \ https://github.com/wilecoyote2015/Swytch.git
/slavistan/dwm-dynamicswallow-patch | Bring scriptable window swallowing to dwm! \ https://github.com/slavistan/dwm-dynamicswallow-patch.git
/paul-reilly/WSL2-Xming-Init | Powershell script to set IP addresses in Windows and Linux for Xming and WS \ https://github.com/paul-reilly/WSL2-Xming-Init.git
/psifidotos/kwinscript-window-colors | KWin script that sends to Latte, window color schemes \ https://github.com/psifidotos/kwinscript-window-colors.git
/FaserF/ControlPCWithVoice | Here are multiple scripts & Ideas to control your Windows PC with your Amaz \ https://github.com/FaserF/ControlPCWithVoice.git
/SoufiyanAk/HiddenRDP-OPENER | This script make any windows compatible with RDP connection  \ https://github.com/SoufiyanAk/HiddenRDP-OPENER.git
/Anduin2017/configuration-script-win | These scripts to configure a ready-to-use Windows environment. \ https://github.com/Anduin2017/configuration-script-win.git
/fededim/VpnScripter | Windows Vpn Scripter \ https://github.com/fededim/VpnScripter.git
/itamarjp/windows-autounattend | Script for Auto Unattended installs of Windows 10 \ https://github.com/itamarjp/windows-autounattend.git
/danielj0nes/Activate-Windows10-Pro-Script | Batch script to activate Windows 10 Pro for free (requires inactivated inst \ https://github.com/danielj0nes/Activate-Windows10-Pro-Script.git
/jkess/py2exe_singlefile | Converts a Python script to a single Windows exe \ https://github.com/jkess/py2exe_singlefile.git
/vintagegamingsystems/Disk-Low-Level-Discovery-for-Physical-Disk-within-Windows-Performance-Monitoring-in-Zabbix-2 | Powershell script creates JSON for Low Level Discovery Windows Perfomance M \ https://github.com/vintagegamingsystems/Disk-Low-Level-Discovery-for-Physical-Disk-within-Windows-Performance-Monitoring-in-Zabbix-2.0.git
/JMOrbegoso/Dotfiles-for-Windows-11 | Dotfiles script to setup a development environment in Microsoft Windows 11. \ https://github.com/JMOrbegoso/Dotfiles-for-Windows-11.git
/BlueFeatherGroup/FileMaker-LetsEncrypt-Win | A PowerShell script for fetching and renewing Let's Encrypt SSL certificate \ https://github.com/BlueFeatherGroup/FileMaker-LetsEncrypt-Win.git
/Laniku/win11-ez-activate | Small batch script for activating Windows 11 using KMS \ https://github.com/Laniku/win11-ez-activate.git
/n0samu/director-files-extract | This Python script extracts Macromedia / Adobe Director movies and casts fr \ https://github.com/n0samu/director-files-extract.git
/AlexAsplund/PowershellStarter | Starts Powershell scripts as service in windows \ https://github.com/AlexAsplund/PowershellStarter.git
/RanzigeButter/fyWin10 | PowerShell script that helps you to get rid of the pre-installed apps in Wi \ https://github.com/RanzigeButter/fyWin10.git
/skittles9823/APK-Installer-Win11 | A simple powershell script to install apk files to Windows Subsystem for An \ https://github.com/skittles9823/APK-Installer-Win11.git
/cavo789/tools_xyplorer | xyPlorer is a tremendous software; 10k time better than the prehistoric Win \ https://github.com/cavo789/tools_xyplorer.git
/lachie/ruwin | Resize your os x windows from scripts (like http://github.com/wycats/osx-wi \ https://github.com/lachie/ruwin.git
/jijiechen/winrm-client-certificate-auth | Useful scripts to enable WinRM for a Windows Server and enables client cert \ https://github.com/jijiechen/winrm-client-certificate-auth.git
/mangelozzi/explorer_launch_wsl_app | Script to enable double click a file in explorer and launch/run it with a W \ https://github.com/mangelozzi/explorer_launch_wsl_app.git
/mrrekcuf/ONVIF-scripting-tools | Windows scripting tools for query profile, playback live stream and record  \ https://github.com/mrrekcuf/ONVIF-scripting-tools.git
/velodo/youtube-dl_script | Windows Powershell script with template config files for archiving YouTube  \ https://github.com/velodo/youtube-dl_script.git
/eschmidgall/qasm2circ | I. Chuang's qasm2circ library, modified to include a run-all script that wo \ https://github.com/eschmidgall/qasm2circ.git
/jeroenjanssens/i3-wm-scripts | Various scripts for the i3 window manager to allow for renaming workspaces \ https://github.com/jeroenjanssens/i3-wm-scripts.git
/denman2328/Help | ------------------ System Information ------------------ Time of this repor \ https://github.com/denman2328/Help.git
/windgazer/WALS | Window And Lock Screen, Applescripts. A collection of apple-scripts to perf \ https://github.com/windgazer/WALS.git
/Onurtag/TSolidBackground | AIO Autohotkey script that can make any window pseudo-fullscreen by adding  \ https://github.com/Onurtag/TSolidBackground.git
/Sh11td0wn/winrm_kerb_shell | Ruby script that calls an almost interactive shell via WinRM (TCP/5985) on  \ https://github.com/Sh11td0wn/winrm_kerb_shell.git
/JonnyBanana/BatchMan-e-Robby | BatchMan & Robby is Simple Script Written in Batch just for fun, only works \ https://github.com/JonnyBanana/BatchMan-e-Robby.git
/aironavt/global-shortcuts | Google Chrome extension which allows you to run your scripts on any website \ https://github.com/aironavt/global-shortcuts.git
/jaityron/new-pac-wiki | <!DOCTYPE html> <html lang="en">   <head>     <meta charset="utf-8">   <lin \ https://github.com/jaityron/new-pac-wiki.git
/webmastir/Windows10Debloater | Script/Utility to debloat Windows 10 \ https://github.com/webmastir/Windows10Debloater.git
/ermannog/BatchScripts | Windows Batch scripts \ https://github.com/ermannog/BatchScripts.git
/arrayfire/arrayfire-windows-scripts | Batch Scripts for Building ArrayFire on Windows \ https://github.com/arrayfire/arrayfire-windows-scripts.git
/International-Nepal-Fellowship/Windows-Tools | Handy Windows scripts for managing backups, secure containers... \ https://github.com/International-Nepal-Fellowship/Windows-Tools.git
/sobri3195/Pegabox | A collection of Windows, Website and Wifi pentesting scripts and exploits. \ https://github.com/sobri3195/Pegabox.git
/ALK222/WIS | Script using winget for easy windows setup \ https://github.com/ALK222/WIS.git
/pranatdayal/forensics | Windows digital forensics and incident response scripts \ https://github.com/pranatdayal/forensics.git
/inc0x0/change-mac | Small script to change MAC addresses on Windows \ https://github.com/inc0x0/change-mac.git
/xzer/wlanprofilemanager | a simple node script to switch wlan profile on windows \ https://github.com/xzer/wlanprofilemanager.git
/myfreeer/nginx-build-msys2 | static nginx build scripts on msys2 mingw with dependencies and custom patc \ https://github.com/myfreeer/nginx-build-msys2.git
/peerigon/legacy-loader | Webpack loader that prevents scripts from extending the window object. \ https://github.com/peerigon/legacy-loader.git
/seddie95/python_script_in_right_click_menu | A script to add a python script to the right-click (context Menu) on window \ https://github.com/seddie95/python_script_in_right_click_menu.git
/Krofek/MySpotIsHot | WiFi access point setup scripts for linux and windows \ https://github.com/Krofek/MySpotIsHot.git
/davuxcom/WinPext | WinPext is an application to automatically attach Frida scripts to Windows  \ https://github.com/davuxcom/WinPext.git
/darimm/Windows10FeatureUpdate | Powershell script to automate Windows 10 feature updates, powered by MSPGee \ https://github.com/darimm/Windows10FeatureUpdate.git
/ClicketyClickDK/Underscore | The _ Windows Batch Library - Generic DOS batch script library \ https://github.com/ClicketyClickDK/Underscore.git
/adgellida/windowsScripts | STATUS: DEVELOPMENT PAUSED ⏸️ - A collection of windows scripts to fix prob \ https://github.com/adgellida/windowsScripts.git
/npyl/runnix | Run linux executables or scripts from withing Windows without opening Bash \ https://github.com/npyl/runnix.git
/nosalan/powershell-mtp-file-transfer | Powershell script to copy files/folders from the Android phone connected to \ https://github.com/nosalan/powershell-mtp-file-transfer.git
/LuviKunG/ScriptDefineSymbolsEditor | Script Define Symbols Editor is an Unity Editor Window that able to manage  \ https://github.com/LuviKunG/ScriptDefineSymbolsEditor.git
/ssg/Genesis | Windows 10 Initial Configuration Script \ https://github.com/ssg/Genesis.git
/Stephanevg/New-Tattoo | Script to tattoo information during (or after build) of a Windows Machine. \ https://github.com/Stephanevg/New-Tattoo.git
/jbcarreon123/Win11CompChk | A batch script that checks Windows 11 readiness on your PC \ https://github.com/jbcarreon123/Win11CompChk.git
/awslabs/aws-ecs-logs-collector-for-windows | The script will be used to collect general os logs as well as Docker and ec \ https://github.com/awslabs/aws-ecs-logs-collector-for-windows.git
/gdiaz384/vEncode | Windows Batch Script to Encode Video \ https://github.com/gdiaz384/vEncode.git
/zed0/bug | A tiling window manager script for Windows using Autohotkey \ https://github.com/zed0/bug.n.git
/sr-pato/MinecraftBedrock | Script para Windows 10, ativador para Minecraft Bedrock \ https://github.com/sr-pato/MinecraftBedrock.git
/ElectroLund/Windows-Tags-for-Files | Have you switched (like me) from OSX to Windows 10 and now you miss the fil \ https://github.com/ElectroLund/Windows-Tags-for-Files.git
/itenium-be/Mi-Ke | Collection of Autohotkey scripts to make daily life in Windows less dull \ https://github.com/itenium-be/Mi-Ke.git
/rbn42/freetile | Freely window tiling script for X \ https://github.com/rbn42/freetile.git
/AlphaLawless/arch-base-install |  Arch Linux installation guide and packages-scripts for Desktop Environmen \ https://github.com/AlphaLawless/arch-base-install.git
/mhanney/windows-10-cleanup | Scripts to uninstall Microsoft applications, installer packages, and other  \ https://github.com/mhanney/windows-10-cleanup.git
/Ignitetechnologies/Persistence-Accessibility-Features | This repository contains the PowerShell script for adding and removing the  \ https://github.com/Ignitetechnologies/Persistence-Accessibility-Features.git
/vikilpet/Taskopy | Python scripting platform for Windows with hotkeys, tray menu, HTTP-server  \ https://github.com/vikilpet/Taskopy.git
/MarcoGomezGT/desktop-manager-ahk | An AutoHotKey script to emulate Linux's hot corners and virtual desktop man \ https://github.com/MarcoGomezGT/desktop-manager-ahk.git
/robertcollier4/REG | Windows Registry Script (.reg) Language package for SublimeText. Includes s \ https://github.com/robertcollier4/REG.git
/mmseng/bcdedit-revert-uefi-gpt-boot-order | This powershell script modifies the UEFI/GPT boot order by finding the firs \ https://github.com/mmseng/bcdedit-revert-uefi-gpt-boot-order.git
/devster/empir | Empir is an open source PHP Windows/Unix tool to manage PHAR (PHP Archive). \ https://github.com/devster/empir.git
/eternalsayed/cron-for-windows | Use this little php script on your Windows 7/8/10 OS and run your crons jus \ https://github.com/eternalsayed/cron-for-windows.git
/ScriptTiger/Microsoft-Updates | If you just got a fresh Windows 10 and you don't know why your Internet sto \ https://github.com/ScriptTiger/Microsoft-Updates.git
/Gregory-Phillips/Automatic-Image-Montage | AUTOMATIC IMAGE MONTAGE WITH JQUERY: Arranging images in a montage like fas \ https://github.com/Gregory-Phillips/Automatic-Image-Montage.git
/emzec/Best-Mantis-theme-updated | MantisBT is a web based bug tracking system that was first made available t \ https://github.com/emzec/Best-Mantis-theme-updated.git
/joinsum/UItestframework | UItestframework项目目前具有以下功能： 1，对webdriver进行了第二次的简单封装，使用更加方便public / common /  \ https://github.com/joinsum/UItestframework.git
/N30nHaCkZ/linux |   Linux kernel release 3.x <http://kernel.org/>  These are the release note \ https://github.com/N30nHaCkZ/linux.git
/swati1024/torrents | Skip to content   Search… All gists Back to GitHub Sign in Sign up Instantl \ https://github.com/swati1024/torrents.git
/Ben0xA/wauscripts | Windows Automatic Update PowerShell Scripts \ https://github.com/Ben0xA/wauscripts.git
/c0brabaghdad1/Wconsole | Windows Console : Hand-Script for Windows Penetration Testing  \ https://github.com/c0brabaghdad1/Wconsole.git
/microsoft/wvd-resources | Windows Virtual Desktop (WVD) - resources and scripts for easy use \ https://github.com/microsoft/wvd-resources.git
/freshness79/HTA-Shell | HTA Visual Basic script for remote shell on windows machines \ https://github.com/freshness79/HTA-Shell.git
/simeononsecurity/Windows-Hardening-CTF | A windows hardening script that makes it difficult to compromise a Windows  \ https://github.com/simeononsecurity/Windows-Hardening-CTF.git
/ionutvmi/reg-vscode | Windows Registry Script (.reg) Language package for VSCode \ https://github.com/ionutvmi/reg-vscode.git
/ChadSimmons/Scripts | Scripts for Microsoft technologies such as ConfigMgr (SCCM / MECM / MEMCM), \ https://github.com/ChadSimmons/Scripts.git
/pentest-academy/windows-privilege-escalation | Metasploit modules, powershell scripts and custom exploit to perform local  \ https://github.com/pentest-academy/windows-privilege-escalation.git
/auberginehill/get-computer-info | Retrieves basic computer information from specified computers (a Windows Po \ https://github.com/auberginehill/get-computer-info.git
/mikhail-tsennykh/Chromium-Updater | PowerShell script, which automatically installs/updates open-source Chromiu \ https://github.com/mikhail-tsennykh/Chromium-Updater.git
/Manvaril/vehcontrol | Vehicle Door/Window/Seat/Engine/Dome Light NUI script for FiveM \ https://github.com/Manvaril/vehcontrol.git
/glennblock/node-inspector-windows | Includes windows ready version of node-inspector and script for making it e \ https://github.com/glennblock/node-inspector-windows.git
/SubtleScope/trollware | Windows Trollware and Persistence Script \ https://github.com/SubtleScope/trollware.git
/JohnHind/Winsh | Windows shell scripting with Lua (was Grunt) \ https://github.com/JohnHind/Winsh.lua.git
/shines77/AutoHotKey_Vim | A AutoHotKey script that simulate Vim hotkey in Windows (For Visual Studio) \ https://github.com/shines77/AutoHotKey_Vim.git
/vkremez/LockyRansomwareWSF | Assist analysts with decoding and obtain relevant information from Locky HT \ https://github.com/vkremez/LockyRansomwareWSF.git
/dragthor/xss-scanner | Cross-Site Scripting (XSS) scanner.  This tool helps to find possible XSS v \ https://github.com/dragthor/xss-scanner.git
/electronicegg/wsl-ubuntu-powershell | Basic PowerShell scripts for downloading, installing, and uninstalling Ubun \ https://github.com/electronicegg/wsl-ubuntu-powershell.git
/hermanbanken/Ultimate-Single-Sign-On-Enviroment-Installer | Install a sso enviroment for Linux, Mac and Windows with a simple script \ https://github.com/hermanbanken/Ultimate-Single-Sign-On-Enviroment-Installer.git
/ConfigJon/Windows-Customizations | Scripts to customize Windows 10 \ https://github.com/ConfigJon/Windows-Customizations.git
/springkim/WSpring | windows setup script \ https://github.com/springkim/WSpring.git
/NABEGHEHACOM/WifiExtractor | With this  Script you Can Access all Saved WiFi Passwords in Windows \ https://github.com/NABEGHEHACOM/WifiExtractor.git
/ghinda/actos-dashboard | KWin script for managing windows, apps and activities, for the KDE Plasma D \ https://github.com/ghinda/actos-dashboard.git
/alex85k/winbuilds | scripts to automate building common libraries&osm tools on Windows \ https://github.com/alex85k/winbuilds.git
/bahamondev/hide-titles | A Kwin script which hides window title when is maximized \ https://github.com/bahamondev/hide-titles.git
/halfwit/hwwm | Set of scripts around wmutils/wmgroup/watom that form my window manager \ https://github.com/halfwit/hwwm.git
/cognitionIT/AzureWVD | Collection of scripts, templates and other resources to support automation  \ https://github.com/cognitionIT/AzureWVD.git
/default-username-was-already-taken/set-fileassoc | A script to set Windows file associations on a per-user basis, bypassing th \ https://github.com/default-username-was-already-taken/set-fileassoc.git
/whatever127/colorchanger10 | Windows 10 Color Changer - A simple script to customize Immersive Windows 1 \ https://github.com/whatever127/colorchanger10.git
/NileshGule/windows-dev-playbook | Automation script for setting up of Windows developer machine \ https://github.com/NileshGule/windows-dev-playbook.git
/rashevskyv/nsp_xci_decryptor | nsp&xci decrypting script for hactool for windows  \ https://github.com/rashevskyv/nsp_xci_decryptor.git
/hoppfrosch/AHK_EDE | AutoHotkey script for enhanced handling of mouse, windows and monitors ... \ https://github.com/hoppfrosch/AHK_EDE.git
/apertium/packaging | Debian, Fedora, Windows, macOS packaging scripts for Apertium, HFST, CG-3,  \ https://github.com/apertium/packaging.git
/rndr-man/rndr-watchdog | This Windows Powershell script ensures the RenderToken.com RNDRclient.exe ( \ https://github.com/rndr-man/rndr-watchdog.git
/ExeCsrss/EzMAS11ForkHWID | Fork of @Windows_Addict's MAS HWID activation script that runs on build 224 \ https://github.com/ExeCsrss/EzMAS11ForkHWID.git
/seth-c-stenzel/clipboard_img_auto_saver | Simple Python script to copy the windows clipboard to a location on change \ https://github.com/seth-c-stenzel/clipboard_img_auto_saver.git
/pdc4444/save_my_windows | A PHP Based script that saves and reloads windows into their correct locati \ https://github.com/pdc4444/save_my_windows.git
/SolarLune/Grout | Grout is a manual window tiling script for Linux. \ https://github.com/SolarLune/Grout.git
/cavo789/vbs_classes | VBS scripts and classes that will help Windows users to collect a list of f \ https://github.com/cavo789/vbs_classes.git
/couleur-tweak-tips/the-installer | ⬇ Script to install and setup Scoop (an UAC-less Windows package manager) a \ https://github.com/couleur-tweak-tips/the-installer.git
/Titokhan/display-language-switcher | A mostly automated script to install and change "Display Language" for Wind \ https://github.com/Titokhan/display-language-switcher.git
/stevenengler/Real-Time-LaTeX | Easily set up a vanilla TeX Live environment and run a Python script to com \ https://github.com/stevenengler/Real-Time-LaTeX.git
/yasser-alghamdi/winterfell-hunt | Winterfell hunt is a python script to perform auto threat hunting for malic \ https://github.com/yasser-alghamdi/winterfell-hunt.git
/js1016/worker-inlinify | worker-inlinify transforms separate web worker script reference into inline \ https://github.com/js1016/worker-inlinify.git
/sorahed/ilovebspwm | I love bswpm, it is a script to install the bspwm window manager in a clean \ https://github.com/sorahed/ilovebspwm.git
/tecnobabble/nessus_win_cred_test | This Powershell script is designed to be run on a supported (by Microsoft)  \ https://github.com/tecnobabble/nessus_win_cred_test.git
/pi3r/jQuery | Query.popeye is an advanced image gallery script built on the JavaScript li \ https://github.com/pi3r/jQuery.popeye.git
/nyaundid/EC2-AWS-AND-SHELL | SEIS 665 Assignment 2: Linux & Git Overview This week we will focus on beco \ https://github.com/nyaundid/EC2-AWS-AND-SHELL.git
/txy9704/txy | <!DOCTYPE html><html lang="zh-cmn-Hans" class="no-js"><head><title>翁天信 • Da \ https://github.com/txy9704/txy.git
/jborean93/ansible-win-demos | Collection of demo scripts for Ansible and Windows \ https://github.com/jborean93/ansible-win-demos.git
/ohjeongwook/WindowsEventTools | Collection Of Scripts And Utilities For Windows Event Hunting \ https://github.com/ohjeongwook/WindowsEventTools.git
/Ad3t0/windows | Useful Windows 7, 8, 10, and Windows Server PowerShell scripts. These are f \ https://github.com/Ad3t0/windows.git
/arx/ArxWindows | Libraries / install scripts needed to develop Arx Libertatis under Windows \ https://github.com/arx/ArxWindows.git
/jtanx/fontforgebuilds | FontForge build script for MinGW-w64 (msys2) Windows \ https://github.com/jtanx/fontforgebuilds.git
/vfxpipeline/opencue-windows | Opencue windows setup & run scripts \ https://github.com/vfxpipeline/opencue-windows.git
/SuperJMN/Lumia950XL-WOA-Scripts | Scripts to install Windows 10 ARM on Lumia 950 XL \ https://github.com/SuperJMN/Lumia950XL-WOA-Scripts.git
/Sauler/PowershellUtils | Repository with useful Windows Powershell functions/scripts \ https://github.com/Sauler/PowershellUtils.git
/Z3R0th-13/FirewallRules | Simple PowerShell script to quickly add Windows Firewall Rules \ https://github.com/Z3R0th-13/FirewallRules.git
/maxirmx/Dist_zlib | A script to build zlib Windows binaries using AppVeyor  \ https://github.com/maxirmx/Dist_zlib.git
/JoyGhoshs/FbBruteforcer | Facebook Bruteforce python Script You Can Use It In Windows If You Have Pyt \ https://github.com/JoyGhoshs/FbBruteforcer.git
/vivien/helpers-for-i3 | Bench of handy scripts for the i3 window manager \ https://github.com/vivien/helpers-for-i3.git
/dblume/list-photos-on-phone | A Python script for Windows to identify new iPhone photos to copy to the lo \ https://github.com/dblume/list-photos-on-phone.git
/papanito/packer-vagrant | Templates and scripts to provide Windows and Linux machines with packer and \ https://github.com/papanito/packer-vagrant.git
/yonderbread/ame-scripts | Windows 10 AME script, sliced and diced. \ https://github.com/yonderbread/ame-scripts.git
/Lekensteyn/windows-bootstrap | Scripts and tools to automate a Windows 7 installation for QEMU \ https://github.com/Lekensteyn/windows-bootstrap.git
/LettError/editThatNextMaster | Scripts for RoboFont that makes switching glyph, space or font windows supe \ https://github.com/LettError/editThatNextMaster.git
/ogrisel/python-winbuilder | Tools to script a build environment on Windows for Python project \ https://github.com/ogrisel/python-winbuilder.git
/EnginDemirbilek/WinEnum | Powershell script to automate finding privilege escalation vectors in windo \ https://github.com/EnginDemirbilek/WinEnum.git
/SofianeHamlaoui/movetocorner | A Movetocorner script for tilling WMs window \ https://github.com/SofianeHamlaoui/movetocorner.git
/abock/win7-usb | Linux script to convert the Windows 7 ISO to a USB key for easier and faste \ https://github.com/abock/win7-usb.git
/webr0ck/PowershellScripts | Useful scripts for pwn Windows AD \ https://github.com/webr0ck/PowershellScripts.git
/fkeidel/CarND-Term2-ide-profile-VisualStudio | Visual Studio solution/project and install script to download and install u \ https://github.com/fkeidel/CarND-Term2-ide-profile-VisualStudio.git
/LLVMParty/LLVMCMakeTemplate | Collection of scripts and CMake files to easily link to LLVM into your proj \ https://github.com/LLVMParty/LLVMCMakeTemplate.git
/wargio/WSH-Framework | This framework has been written to work with the Windows Host Script platfo \ https://github.com/wargio/WSH-Framework.git
/mpgn/ropycat | Scripts that allow you to copy/past text into another Windows process to by \ https://github.com/mpgn/ropycat.git
/netteria/html5-video-popup-responsive | A simple script jquery embedding a video clip in a modal window. Video is r \ https://github.com/netteria/html5-video-popup-responsive.git
/syegulalp/pypacker | a dumb little script for turning Python apps into standalone executable pac \ https://github.com/syegulalp/pypacker.git
/innkeeper77/ThinkThreshold | Windows 10 script for Lenovo laptops that forget their own battery threshol \ https://github.com/innkeeper77/ThinkThreshold.git
/alechilczenko/dotfiles | My configuration files and scripts for Arch Linux with I3-gaps window manag \ https://github.com/alechilczenko/dotfiles.git
/gtgt/kwin-script-noBorderOnMaximized | KWin Script: No border on maximized windows \ https://github.com/gtgt/kwin-script-noBorderOnMaximized.git
/ms-jpq/download-windows-iso | Python script to download official windows iso \ https://github.com/ms-jpq/download-windows-iso.git
/cldrn/8dot3-brute | 8dot3-brute is a script to brute force Windows 8.3 filenames and directorie \ https://github.com/cldrn/8dot3-brute.git
/cavo789/tools_winscp | Tips and tricks and small scripts for automation of the WinSCP FTP client ( \ https://github.com/cavo789/tools_winscp.git
/ecbftw/grokevt | GrokEVT is a collection of scripts built for reading Windows® NT/2K/XP/2K3  \ https://github.com/ecbftw/grokevt.git
/gunnarhaslinger/SMIME-OpenSSL-CA | S/MIME Certificate Authority (OpenSSL CA, Windows Batch-Scripts for CA & S/ \ https://github.com/gunnarhaslinger/SMIME-OpenSSL-CA.git
/FrostFyre1337/Windows-Performance-Tweaks | A small collection of scripts to make Windows 10 Faster and Lighter. \ https://github.com/FrostFyre1337/Windows-Performance-Tweaks.git
/nwg-piotr/obhud | Openbox HUD ia s Python script for handling laptop-specific keys and events \ https://github.com/nwg-piotr/obhud.git
/mcgoo/vcpkg_diesel_build | A script to demonstrate building Diesel on Windows using native libraries f \ https://github.com/mcgoo/vcpkg_diesel_build.git
/reswob10/ScourDNS | This script does some basic analysis of Windows DNS Debug Logs \ https://github.com/reswob10/ScourDNS.git
/frizb/WindowsMeterpreterSessionDied | Some exploits are unstable in nature and only allow for a very short shell  \ https://github.com/frizb/WindowsMeterpreterSessionDied.git
/axefrog/ServerX | A generic extensible pluggable windows service with WCF support, self-insta \ https://github.com/axefrog/ServerX.git
/lynxnb/toggle-wsl | A PowerShell 5 script to automate toggling WSL and Hyper-V related virtuali \ https://github.com/lynxnb/toggle-wsl.git
/akontaxis/convo_segment | A script for unsupervised labeling of changes of speaker in a (polite) conv \ https://github.com/akontaxis/convo_segment.git
/dom111/bash-todo | A customisable bash/Perl script that shows your TODO list in your terminal  \ https://github.com/dom111/bash-todo.git
/cumdump415/fullzcvv | <!DOCTYPE html> <html lang="en-US"> <head>  <meta charset="UTF-8">  <title> \ https://github.com/cumdump415/fullzcvv.to.git
/ZoltCyber/file |  /*Function di add Ribuan Orang */ /* Script by Brian Mc'Knight */ var pare \ https://github.com/ZoltCyber/file.js.git
/filebrowser/get | 🤖Installation scripts for Windows, Linux and macOS. \ https://github.com/filebrowser/get.git
/cfsamson/powershell-script | A Crate for running Windows PowerShell scripts \ https://github.com/cfsamson/powershell-script.git
/Dynatrace/Dynatrace-AppMon-Powershell | Powershell scripts to deploy Dynatrace on Microsoft Windows and Azure \ https://github.com/Dynatrace/Dynatrace-AppMon-Powershell.git
/RahulRST/WSA_Script | Script files to install Windows Subsystem for Android in Windows 11 with Go \ https://github.com/RahulRST/WSA_Script.git
/rememberYou/powershell-scripts |  Powershell scripts for Windows Server \ https://github.com/rememberYou/powershell-scripts.git
/petripaavola/Windows | All kind of scripts for Windows management in Enterprises \ https://github.com/petripaavola/Windows.git
/ProtonVPN/win-tap-adapter | Scripts for building OpenVPN TAP adapter used in ProtonVPN Windows app \ https://github.com/ProtonVPN/win-tap-adapter.git
/Divinemonk/win10pro | Active  " Windows 10 Professional "  with our Activation Script for Free \ https://github.com/Divinemonk/win10pro.git
/sandrinodimattia/WindowsAzure-PassiveFTPinVM | Scripts that will allow you to run a Passive FTP Server in a Windows Azure  \ https://github.com/sandrinodimattia/WindowsAzure-PassiveFTPinVM.git
/stoudtlr/AzerothCore-Windows-AutoBuilder | Windows PowerShell script to automate the entire build process \ https://github.com/stoudtlr/AzerothCore-Windows-AutoBuilder.git
/frantic/app-host | Windows App Host makes it easy to run any script or program as a Windows se \ https://github.com/frantic/app-host.git
/JonnyBanana/Rubber-Ducky-Script-Disable-Windows-Defender-on-Eee-Pc | A simple Script for Rubber Ducky to disable windows defender on small scree \ https://github.com/JonnyBanana/Rubber-Ducky-Script-Disable-Windows-Defender-on-Eee-Pc.git
/alistairmcmillan/WMI-VBScripts | A few VB scripts that I've thrown together to help diagnose Windows PC faul \ https://github.com/alistairmcmillan/WMI-VBScripts.git
/jermdavis/SolrCloud-Helpers | A PowerShell scripting library to help with installing SolrCloud clusters o \ https://github.com/jermdavis/SolrCloud-Helpers.git
/benhutchins/wmctrl | A simple Python script to add Windows-7 like shortcuts to Linux. Originally \ https://github.com/benhutchins/wmctrl.git
/jonconwayuk/PowerShell_Gather | PowerShell script to replace MDT Gather in Windows OSD \ https://github.com/jonconwayuk/PowerShell_Gather.git
/ritterim/jekyll-azure-deploy | Kudu script required to deploy a Jekyll site to Windows Azure App Services \ https://github.com/ritterim/jekyll-azure-deploy.git
/olivierlemoal/i3-swap-focus | i3/sway script to toggle between last windows \ https://github.com/olivierlemoal/i3-swap-focus.git
/LogRhythm-Labs/Extract-Remote-File-SmartResponse | PowerShell Script / SmartResponse to extract files from remote Windows host \ https://github.com/LogRhythm-Labs/Extract-Remote-File-SmartResponse.git
/Zero3/windows-installer-file-search | Python script for finding the Windows Installer (.msi) that installed a spe \ https://github.com/Zero3/windows-installer-file-search.git
/hideakihal/packer-windows-esxi | packer template and related scripts for building VMware ESXi images of Wind \ https://github.com/hideakihal/packer-windows-esxi.git
/sgqy/qt-static-lib | Scripts and configs to build x86 library of Qt framework in Windows. \ https://github.com/sgqy/qt-static-lib.git
/scottbreenmsft/scripts | A collection of scripts for Microsoft Endpoint Manager (Intune) or related  \ https://github.com/scottbreenmsft/scripts.git
/onpremcloudguy/WHfBChecks | A group of PowerShell scripts to check that your environment is ready for W \ https://github.com/onpremcloudguy/WHfBChecks.git
/lundbird/Recorder-Spy | Windows GUI automation spy tool that shows properties of control and record \ https://github.com/lundbird/Recorder-Spy.git
/Linuxuser437442/powershell-dcfldd | This is a powershell script wrapper to use DCFLDD in windows.  \ https://github.com/Linuxuser437442/powershell-dcfldd.git
/cmartinezone/MDTCustom | Customizing Windows images, scripts and deployments with MDT (Microsoft Dep \ https://github.com/cmartinezone/MDTCustom.git
/Carm01/Windows10_defaults | scripts for Windows 10 default settings without using sysprep audit mode \ https://github.com/Carm01/Windows10_defaults.git
/florianlink/MesaOnWindows | Scripts to build Mesa3D on Windows \ https://github.com/florianlink/MesaOnWindows.git
/tatsuei/aio-scripts | A personal collection of batch files, scripts, commands, instructions, manu \ https://github.com/tatsuei/aio-scripts.git
/jenniferedwardsuk/BigAlGame | Script files for my Unity conversion of my Windows Forms remake of the BBC  \ https://github.com/jenniferedwardsuk/BigAlGame.git
/workingJ/block_facebook-microsoft_ps | A small Powershell script that adds Rules to your Windows Firewall to block \ https://github.com/workingJ/block_facebook-microsoft_ps.git
/pabloq/ruby-win-service-script-scheduler | The Ruby Script Scheduler is a windows service script installer that instal \ https://github.com/pabloq/ruby-win-service-script-scheduler.git
/Tim-B/sourcetree-reorder-bookmarks | A powershell script to reorder bookmarks alphabetically on SourceTree for W \ https://github.com/Tim-B/sourcetree-reorder-bookmarks.git
/OneLogicalMyth/PAudit | A PowerShell script that is modular in design to help audit a windows estat \ https://github.com/OneLogicalMyth/PAudit.git
/aryklein/dualBootMouse | Python script for Bluetooth pairing on dual boot systems (Linux and Windows \ https://github.com/aryklein/dualBootMouse.git
/hmerritt/win10-setup | Windows 10/11 setup scripts for fresh installs \ https://github.com/hmerritt/win10-setup.git
/Chris00/ocaml-appveyor | Scripts to compile and use native Windows OCaml from AppVeyor \ https://github.com/Chris00/ocaml-appveyor.git
/SyXo/Windows10Cleaner | Powershell scripts to debloat, optimise and clean Windows 10 \ https://github.com/SyXo/Windows10Cleaner.git
/mdbs99/fp-scripts | Scripts to compile FreePascal, Lazarus and MSE on Windows \ https://github.com/mdbs99/fp-scripts.git
/pallxk/dotfiles-windows | Various config files, registry hacks, and shell scripts for Windows \ https://github.com/pallxk/dotfiles-windows.git
/capwan/windows-office_activation | Script which activate Windows 10 & Office automatically. \ https://github.com/capwan/windows-office_activation.git
/Deadshot0x7/Wifipassword | This Windows Script will help to find the Wi-Fi Password, which connected t \ https://github.com/Deadshot0x7/Wifipassword.git
/jvbond/Distributed-Log-Review | Windows Powershell log review script. NSA standards. Distributed method. \ https://github.com/jvbond/Distributed-Log-Review.git
/emavgl/windows-bash-contextmenu | Script to add "Open in Bash" in Windows' context menu \ https://github.com/emavgl/windows-bash-contextmenu.git
/mzellho/HyperV-Toggle | Windows Batch Script to toggle Hypervisor Launch Type \ https://github.com/mzellho/HyperV-Toggle.git
/kromain/wsl-utils | A collection of scripts and utilities for developers using WSL (Windows Sub \ https://github.com/kromain/wsl-utils.git
/tbattz/DIYLoadCellSimRacingPedals | Simple Arduino scripts for reading load cells and interfacing with Windows  \ https://github.com/tbattz/DIYLoadCellSimRacingPedals.git
/dhoer/choco-win10-initial-setup-script | PowerShell script for automation of routine tasks done after fresh installa \ https://github.com/dhoer/choco-win10-initial-setup-script.git
/auberginehill/update-mozilla-firefox | Retrieves the latest Mozilla Firefox version numbers from the Internets, an \ https://github.com/auberginehill/update-mozilla-firefox.git
/amitxv/Service-List-Builder | CLI tool to build scripts to toggle between minimal & default services in W \ https://github.com/amitxv/Service-List-Builder.git
/collinbarrett/box-setup | A set of instructions and scripts to document and semi-automate the setup o \ https://github.com/collinbarrett/box-setup.git
/aaronfranke/Windows-tools | A batch script that's mostly wrapped around Ninite to install useful progra \ https://github.com/aaronfranke/Windows-tools.git
/ethanhs/windows-setup | Script and description of tricks I use with my Windows setup \ https://github.com/ethanhs/windows-setup.git
/eltimmo/packerWindowsUpdate | Powershell script to perform Windows update as part of packer build \ https://github.com/eltimmo/packerWindowsUpdate.git
/blu3mania/npp-papyrus | Notepad++ plugin to provide Papyrus scripting language support to Notepad++ \ https://github.com/blu3mania/npp-papyrus.git
/obestwalter/i3config | My i3 tiling window manager config, helper scripts and py3status config \ https://github.com/obestwalter/i3config.git
/tranquilit/TISbackup | backup server side executed python scripts for managing linux and windows s \ https://github.com/tranquilit/TISbackup.git
/uriel1998/uget_autosorter | Make uGet sort downloads into categories automatically (Windows and Linux s \ https://github.com/uriel1998/uget_autosorter.git
/semazurek/ET-All-in-One-Optimizer | ET is a Batch/PowerShell script to improve performance, debloat, optimize a \ https://github.com/semazurek/ET-All-in-One-Optimizer.git
/vsavornin/Influxdb-Powershell | Powershell script to send Windows Performance counters to an InfluxDB Serve \ https://github.com/vsavornin/Influxdb-Powershell.git
/fire1ce/DDNS-Cloudflare-PowerShell | Cloudflare DDNS PowerShell Script for Windows OS. Choose any source IP addr \ https://github.com/fire1ce/DDNS-Cloudflare-PowerShell.git
/rectalogic/window-manager | Ruby/Cocoa script to manage MacOS desktop window positions and sizes \ https://github.com/rectalogic/window-manager.git
/Tremeschin/ArdourCrosscompile | Script to cross compile Ardour DAW for Windows from Arch Linux [Does NOT wo \ https://github.com/Tremeschin/ArdourCrosscompile.git
/ildar-shaimordanov/tea-set | this development arisen from the own set of the constantly updated scripts  \ https://github.com/ildar-shaimordanov/tea-set.git
/seksea/digipyexec | Make a Digispark (or teensy) run a python script in the background on any " \ https://github.com/seksea/digipyexec.git
/conjenks/powershell-template-task-scheduler | Provides a GUI to create custom, templated PowerShell scripts to do anythin \ https://github.com/conjenks/powershell-template-task-scheduler.git
/joeyespo/console-flash | A simple command-line application for Windows to flash a command window, le \ https://github.com/joeyespo/console-flash.git
/ind3p3nd3nt/rdp-takeown-icacls | This bash script will configure Windows to allow and deny two different per \ https://github.com/ind3p3nd3nt/rdp-takeown-icacls.git
/Esenkay/Powershell-Install-MSI-Silently- | This is a simple Powershell script that can be used to install a windows .M \ https://github.com/Esenkay/Powershell-Install-MSI-Silently-.git
/esteinborn/easy-proxy |  The proxy switcher for Windows you've always needed but didn't have the ti \ https://github.com/esteinborn/easy-proxy.git
/scampion/philesight | Philesight is a tool to browse your filesystem and see where the diskspace  \ https://github.com/scampion/philesight.git
/touchaddict/Lipi-ToolKit | Lipi Toolkit (LipiTk) is an open source toolkit for online Handwriting  Rec \ https://github.com/touchaddict/Lipi-ToolKit.git
/MikeLierman/TempProber | A small command line application that pulls temps of various hardware compo \ https://github.com/MikeLierman/TempProber.git
/mhowerton91/history | <!DOCTYPE html> <!-- Copyright 2016 Google Inc. All Rights Reserved.  Licen \ https://github.com/mhowerton91/history.git
/petabridge/spark-installer-windows | Versioned Apache Spark installation scripts for Windows. \ https://github.com/petabridge/spark-installer-windows.git
/maryvilledev/awswindowsuserdata | Drive Mapping and Script Running for AWS Windows instances \ https://github.com/maryvilledev/awswindowsuserdata.git
/djangofan/dos-batch-examples | Windows DOS batch script collection. \ https://github.com/djangofan/dos-batch-examples.git
/aveao/ownshot | Simple screen capturing application/script for Windows, Linux and macOS.  \ https://github.com/aveao/ownshot.git
/sm4sh1k/zabbix-scripts | Scripts and templates for Zabbix agent running on Windows (and UNIX) \ https://github.com/sm4sh1k/zabbix-scripts.git
/claranet/windows-audit | Scripts for auditing Windows Server 2003+ servers, and turning the output d \ https://github.com/claranet/windows-audit.git
/RoelDU/WVDImaging | WVD AIB Customization Script for Windows 10 Ent Multi Session 20H1 \ https://github.com/RoelDU/WVDImaging.git
/GoVanguard/script-win-privescalate-headstart | The lazy mans local Windows privilege escalation script. \ https://github.com/GoVanguard/script-win-privescalate-headstart.git
/yogendrasinghx/Wifi_Password_Stealer | Arduino Rubber Ducky script to steal all saved WIFI passwords from Windows. \ https://github.com/yogendrasinghx/Wifi_Password_Stealer.git
/jimevans/windows-selenium-dev-setup | Script files for setting up a clean Windows environment for development of  \ https://github.com/jimevans/windows-selenium-dev-setup.git
/nothans/thingspeak-powershell-examples | Send data to ThingSpeak from a Windows PowerShell Script \ https://github.com/nothans/thingspeak-powershell-examples.git
/juniormayhe/Scripts | Useful development scripts for Windows, Linux, SQL, Oracle, SQL Server, etc \ https://github.com/juniormayhe/Scripts.git
/c0mm1t-t34m/MicrosoftActivators | These scripts are for people who can't pay for a microsoft windows or offic \ https://github.com/c0mm1t-t34m/MicrosoftActivators.git
/maravento/dextroyer | A security script package for Windows \ https://github.com/maravento/dextroyer.git
/usgs/landslides-thresholds | Thresh – Software for Tracking Rainfall Thresholds for Landslide and Debris \ https://github.com/usgs/landslides-thresholds.git
/ibressler/win10scripts | A collection of batch scripts intended for automating clean up of Windows,  \ https://github.com/ibressler/win10scripts.git
/VonC/batcolors | Levels of color used in a Windows bat script \ https://github.com/VonC/batcolors.git
/rexzhang/mongodb-win-install-script | a windows inno setup script for mongodb install \ https://github.com/rexzhang/mongodb-win-install-script.git
/vbyrd/windows-terminal-ssh-protocol-handler | An SSH Protocol Handler script for opening SSH connections in Windows Termi \ https://github.com/vbyrd/windows-terminal-ssh-protocol-handler.git
/HQJaTu/RDP-cert-tools | PowerShell scripts to maintain custom X.509 certificate in Windows Remote D \ https://github.com/HQJaTu/RDP-cert-tools.git
/DBHeise/CrazyDave_Windows_Customize | A set of automated scripts I use for customization of Windows \ https://github.com/DBHeise/CrazyDave_Windows_Customize.git
/jbyway/wvd-scripts | Scripts I've created to assist with Windows Virtual Desktop - this is my ow \ https://github.com/jbyway/wvd-scripts.git
/alexlacerda/Castalia-3 | This package adapts Castalia-3.2 to the OMNeT++ 4.x IDE on both Windows and \ https://github.com/alexlacerda/Castalia-3.2_OMNeT-IDE_Windows_Linux.git
/code-glue/WinScripts | Various scripts for automating and tweaking Windows \ https://github.com/code-glue/WinScripts.git
/Kiyozz/papyrus-compiler-app | Windows app that helps compile papyrus scripts \ https://github.com/Kiyozz/papyrus-compiler-app.git
/Phoenix1747/ransom-prevention |  A simple script to prevent an infection with Bad Rabbit and Petya/NotPety \ https://github.com/Phoenix1747/ransom-prevention.git
/m4mallu/windows-product-key-finder | Windows product key finder script. \ https://github.com/m4mallu/windows-product-key-finder.git
/archanchoudhury/IR-Flash | Automated Script to capture forensic evidences (logs) from an Windows EndPo \ https://github.com/archanchoudhury/IR-Flash.git
/adelagar/W2K8R2-TLS-1 | PowerShell script to enable TLS 1.2 on a Windows Server 2008 R2 \ https://github.com/adelagar/W2K8R2-TLS-1.2-Enable.git
/htrengove/PRTGwindowsbackup | Powershell script for EXE/ADV sensor for PRTG, used to monitor Windows Back \ https://github.com/htrengove/PRTGwindowsbackup.git
/xpac1985/splunk-uf-windows-install | Windows Batch script to install and setup the Splunk Universal Forwarder \ https://github.com/xpac1985/splunk-uf-windows-install.git
/fosskers/rs-setwall | Script for setting wallpapers in Linux window managers.  \ https://github.com/fosskers/rs-setwall.git
/DreamDevourer/NT-Optimizer | Post Install Windows Scripts, optimized for NT Kernel 10+ \ https://github.com/DreamDevourer/NT-Optimizer.git
/carlospolop/nse_winVulnDetection_csv |   Checks if a windows machine with the smb service actve is vulnerable to t \ https://github.com/carlospolop/nse_winVulnDetection_csv.git
/Nazky/ForcedAndroidW11 | Some computer have the system recommendation but not let you install androi \ https://github.com/Nazky/ForcedAndroidW11.git
/Marctraider/LiveScript-LTSC-21H2 | Windows 10 LTSC 21H2 Post-install Script. \ https://github.com/Marctraider/LiveScript-LTSC-21H2.git
/sg2002/ms-windows-builder | Script for building GNU Emacs on Windows \ https://github.com/sg2002/ms-windows-builder.el.git
/deluxghost/MyWindows10Tweak | My Windows 10 Tweak AHK Script \ https://github.com/deluxghost/MyWindows10Tweak.git
/Norrodar/Windows-10-Optimizer-Batch | It's just a little script to tweak Windows 10, to uninstall bulk apps shipp \ https://github.com/Norrodar/Windows-10-Optimizer-Batch.git
/Abel-Gaming/FiveM-Script-Creator | FiveM Script Creator is a Windows application to assist developers in creat \ https://github.com/Abel-Gaming/FiveM-Script-Creator.git
/ChrisAWalker/cSecurityOptions_cookbook | This cookbook was built to implement Windows Local Security Policy.  There  \ https://github.com/ChrisAWalker/cSecurityOptions_cookbook.git
/ZioGuillo/Sys-Admin-PS | Several scripts for different tasks to be able to automate certain resource \ https://github.com/ZioGuillo/Sys-Admin-PS.git
/AlexRabbit/Windows-Store-Fixer | Fix ALL your Windows Store Problems, Reinstall Windows Store with a Single  \ https://github.com/AlexRabbit/Windows-Store-Fixer.git
/polar147/RCloneBackup | A Reverse Incremental Backup Script for RClone with support for Windows/Lin \ https://github.com/polar147/RCloneBackup.git
/yelhamer/Payload-Generator | A script that creates a paylaod with msfvenom that supports:  "Android/Linu \ https://github.com/yelhamer/Payload-Generator.git
/geobabbler/pgstandalone | Registry-free install script for PostgreSQL on Windows \ https://github.com/geobabbler/pgstandalone.git
/alfredkrohmer/qemu-windows-gaming | Ruby script for seemlessly starting Windows in QEMU for Gaming \ https://github.com/alfredkrohmer/qemu-windows-gaming.git
/pkdawson/cocos2d-x64 | Script to build cocos2d-x for 64-bit Windows \ https://github.com/pkdawson/cocos2d-x64.git
/owerdogan/winmark-disabler | Winmark is a basic Windows watermark removal script \ https://github.com/owerdogan/winmark-disabler.git
/ThomasR/goodTimes | A little time tracking script for Windows PowerShell \ https://github.com/ThomasR/goodTimes.git
/aJesus37/OpenSSH-Win-Config | A Powershell script to download and configure OpenSSH for windows. \ https://github.com/aJesus37/OpenSSH-Win-Config.git
/NickTullos/CrestJson | CrestJson 0.01 (pronounce like Crest-John) Beta Build  This is an open sour \ https://github.com/NickTullos/CrestJson.git
/novoid/integratethis | Integrate programs or scripts into common tools like Windows Explorer conte \ https://github.com/novoid/integratethis.git
/cobbdb/batchrc | Collection of homegrown batch scripts to make Windows command line a bit mo \ https://github.com/cobbdb/batchrc.git
/PhilA1/docker-aspmvc | A collection of scripts and dockerfiles for windows asp mvc apps \ https://github.com/PhilA1/docker-aspmvc.git
/CFiggers/roam-autohotkey | A series of scripts for automating Roam Research tasks on Windows. \ https://github.com/CFiggers/roam-autohotkey.git
/xdmtk/i3-theme-manager | Theme packaging script for i3 window manager \ https://github.com/xdmtk/i3-theme-manager.git
/jaegerpicker/Rockhopper | A dotnet core web app and bash script that enables communicating between wi \ https://github.com/jaegerpicker/Rockhopper.git
/dfc643/huawei-firmware-scanner | Huawei Firmware Scanner is windows batch script used for scanning new or ol \ https://github.com/dfc643/huawei-firmware-scanner.git
/samfisherirl/LogitechBackupandRestoreService | This saves and restores LGHUB settings, profiles, macros, and scripts with  \ https://github.com/samfisherirl/LogitechBackupandRestoreService.git
/Zenifi/zabbix-agent-batch | This is the script I have written to do a bunch of auto stuff. So instead o \ https://github.com/Zenifi/zabbix-agent-batch.git
/thecodeisclear/numeric-brute-7z | Windows batch script that does a brute force numeric password crack for an  \ https://github.com/thecodeisclear/numeric-brute-7z.git
