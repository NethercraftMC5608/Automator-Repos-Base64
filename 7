/nvm-sh/nvm | Node Version Manager - POSIX-compliant bash script to manage multiple activ \ https://github.com/nvm-sh/nvm.git
/kelseyhightower/kubernetes-the-hard-way | Bootstrap Kubernetes the hard way on Google Cloud Platform. No scripts. \ https://github.com/kelseyhightower/kubernetes-the-hard-way.git
/google/zx | A tool for writing better scripts \ https://github.com/google/zx.git
/ariya/phantomjs | Scriptable Headless Browser \ https://github.com/ariya/phantomjs.git
/koalaman/shellcheck | ShellCheck, a static analysis tool for shell scripts \ https://github.com/koalaman/shellcheck.git
/acmesh-official/acme | A pure Unix shell script implementing ACME client protocol \ https://github.com/acmesh-official/acme.sh.git
/hwdsl2/setup-ipsec-vpn | Scripts to build your own IPsec VPN server, with IPsec/L2TP, Cisco IPsec an \ https://github.com/hwdsl2/setup-ipsec-vpn.git
/rwightman/pytorch-image-models | PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, Effic \ https://github.com/rwightman/pytorch-image-models.git
/matryer/xbar | Put the output from any script or program into your macOS Menu Bar (the Bit \ https://github.com/matryer/xbar.git
/JaidedAI/EasyOCR | Ready-to-use OCR with 80+ supported languages and all popular writing scrip \ https://github.com/JaidedAI/EasyOCR.git
/checkly/headless-recorder | Chrome extension that records your browser interactions and generates a Pla \ https://github.com/checkly/headless-recorder.git
/foreversd/forever | A simple CLI tool for ensuring that a given script runs continuously (i.e.  \ https://github.com/foreversd/forever.git
/Sycnex/Windows10Debloater | Script to remove Windows 10 bloatware. \ https://github.com/Sycnex/Windows10Debloater.git
/paperjs/paper | The Swiss Army Knife of Vector Graphics Scripting – Scriptographer ported t \ https://github.com/paperjs/paper.js.git
/trekhleb/learn-python |  Playground and cheatsheet for learning Python. Collection of Python scrip \ https://github.com/trekhleb/learn-python.git
/massgravel/Microsoft-Activation-Scripts | A collection of scripts for activating Microsoft products using HWID / KMS3 \ https://github.com/massgravel/Microsoft-Activation-Scripts.git
/alex000kim/nsfw_data_scraper | Collection of scripts to aggregate image data for the purposes of training  \ https://github.com/alex000kim/nsfw_data_scraper.git
/dimsemenov/Magnific-Popup | Light and responsive lightbox script with focus on performance. \ https://github.com/dimsemenov/Magnific-Popup.git
/aFarkas/html5shiv | This script is the defacto way to enable use of HTML5 sectioning elements i \ https://github.com/aFarkas/html5shiv.git
/PySimpleGUI/PySimpleGUI | Launched in 2018. It's 2022 and PySimpleGUI is actively developed & support \ https://github.com/PySimpleGUI/PySimpleGUI.git
/RetroPie/RetroPie-Setup | Shell script to set up a Raspberry Pi/Odroid/PC with RetroArch emulator and \ https://github.com/RetroPie/RetroPie-Setup.git
/coursera-dl/coursera-dl | Script for downloading Coursera.org videos and naming them. \ https://github.com/coursera-dl/coursera-dl.git
/alexanderepstein/Bash-Snippets | A collection of small bash scripts for heavy terminal users \ https://github.com/alexanderepstein/Bash-Snippets.git
/tinode/chat | Instant messaging platform. Backend in Go. Clients: Swift iOS, Java Android \ https://github.com/tinode/chat.git
/carlospolop/PEASS-ng | PEASS - Privilege Escalation Awesome Scripts SUITE (with colors) \ https://github.com/carlospolop/PEASS-ng.git
/thoughtbot/laptop | A shell script to set up a macOS laptop for web and mobile development. \ https://github.com/thoughtbot/laptop.git
/coding-horror/basic-computer-games | An updated version of the classic "Basic Computer Games" book, with well-wr \ https://github.com/coding-horror/basic-computer-games.git
/hardikvasa/google-images-download | Python Script to download hundreds of images from 'Google Images'. It is a  \ https://github.com/hardikvasa/google-images-download.git
/docker/docker-bench-security | The Docker Bench for Security is a script that checks for dozens of common  \ https://github.com/docker/docker-bench-security.git
/vishnubob/wait-for-it | Pure bash script to test and wait on the availability of a TCP host and por \ https://github.com/vishnubob/wait-for-it.git
/major/MySQLTuner-perl | MySQLTuner is a script written in Perl that will assist you with your MySQL \ https://github.com/major/MySQLTuner-perl.git
/casperjs/casperjs | CasperJS is no longer actively maintained. Navigation scripting and testing \ https://github.com/casperjs/casperjs.git
/fancyapps/fancybox | jQuery lightbox script for displaying images, videos and more. Touch enable \ https://github.com/fancyapps/fancybox.git
/a1studmuffin/SpaceshipGenerator | A Blender script to procedurally generate 3D spaceships \ https://github.com/a1studmuffin/SpaceshipGenerator.git
/BuilderIO/partytown | Relocate resource intensive third-party scripts off of the main thread and  \ https://github.com/BuilderIO/partytown.git
/verlok/vanilla-lazyload | LazyLoad is a lightweight, flexible script that speeds up your website by d \ https://github.com/verlok/vanilla-lazyload.git
/zardus/ctf-tools | Some setup scripts for security research tools. \ https://github.com/zardus/ctf-tools.git
/andreafabrizi/Dropbox-Uploader | Dropbox Uploader is a BASH script which can be used to upload, download, li \ https://github.com/andreafabrizi/Dropbox-Uploader.git
/oldratlee/useful-scripts |  useful scripts for making developer's everyday life easier and happier, i \ https://github.com/oldratlee/useful-scripts.git
/davidmerfield/randomColor | A tiny script for generating attractive colors \ https://github.com/davidmerfield/randomColor.git
/rcmaehl/WhyNotWin11 | Detection Script to help identify why your PC is not Windows 11 Release Rea \ https://github.com/rcmaehl/WhyNotWin11.git
/kentcdodds/cross-env |  Cross platform setting of environment scripts \ https://github.com/kentcdodds/cross-env.git
/donnemartin/dev-setup | macOS development environment setup:  Easy-to-understand instructions with  \ https://github.com/donnemartin/dev-setup.git
/googlearchive/code-prettify | An embeddable script that makes source-code snippets in HTML prettier. \ https://github.com/googlearchive/code-prettify.git
/lokesh/lightbox2 | THE original Lightbox script (v2). \ https://github.com/lokesh/lightbox2.git
/wren-lang/wren | The Wren Programming Language. Wren is a small, fast, class-based concurren \ https://github.com/wren-lang/wren.git
/NobyDa/Script | This project is based on the scripting capabilities of two excellent iOS pr \ https://github.com/NobyDa/Script.git
/cferdinandi/smooth-scroll | A lightweight script to animate scrolling to anchor links. \ https://github.com/cferdinandi/smooth-scroll.git
/Lexikos/AutoHotkey_L | AutoHotkey - macro-creation and automation-oriented scripting utility for W \ https://github.com/Lexikos/AutoHotkey_L.git
/W4RH4WK/Debloat-Windows-10 | A Collection of Scripts Which Disable / Remove Windows 10 Features and Apps \ https://github.com/W4RH4WK/Debloat-Windows-10.git
/dehydrated-io/dehydrated | letsencrypt/acme client implemented as a shell-script – just add water \ https://github.com/dehydrated-io/dehydrated.git
/mwouts/jupytext | Jupyter Notebooks as Markdown Documents, Julia, Python or R scripts \ https://github.com/mwouts/jupytext.git
/jackmoore/autosize | Autosize is a small, stand-alone script to automatically adjust textarea he \ https://github.com/jackmoore/autosize.git
/Leo-G/Data-Science-Wiki | A wiki of  DataScience, Statistics, Maths, R,Python, AI, Machine Learning,  \ https://github.com/Leo-G/Data-Science-Wiki.git
/todotxt/todo | ☑️ A simple and extensible shell script for managing your todo.txt file. \ https://github.com/todotxt/todo.txt-cli.git
/red/red | Red is a next-generation programming language strongly inspired by Rebol, b \ https://github.com/red/red.git
/mysticatea/npm-run-all | A CLI tool to run multiple npm-scripts in parallel or sequential. \ https://github.com/mysticatea/npm-run-all.git
/diafygi/acme-tiny | A tiny script to issue and renew TLS certs from Let's Encrypt \ https://github.com/diafygi/acme-tiny.git
/awesome-lists/awesome-bash | A curated list of delightful Bash scripts and resources. \ https://github.com/awesome-lists/awesome-bash.git
/Disassembler0/Win10-Initial-Setup-Script | PowerShell script for automation of routine tasks done after fresh installa \ https://github.com/Disassembler0/Win10-Initial-Setup-Script.git
/JakeWharton/pidcat | Colored logcat script which only shows log entries for a specific applicati \ https://github.com/JakeWharton/pidcat.git
/rundeck/rundeck | Enable Self-Service Operations: Give specific users access to your existing \ https://github.com/rundeck/rundeck.git
/prisma-labs/graphql-request | Minimal GraphQL client supporting Node and browsers for scripts or simple a \ https://github.com/prisma-labs/graphql-request.git
/akopytov/sysbench | Scriptable database and system performance benchmark \ https://github.com/akopytov/sysbench.git
/corpnewt/gibMacOS | Py2/py3 script that can download macOS components direct from Apple \ https://github.com/corpnewt/gibMacOS.git
/Mr-xn/Penetration_Testing_POC | 渗透测试有关的POC、EXP、脚本、提权、小工具等---About penetration-testing python-script poc get \ https://github.com/Mr-xn/Penetration_Testing_POC.git
/LOLBAS-Project/LOLBAS | Living Off The Land Binaries And Scripts - (LOLBins and LOLScripts) \ https://github.com/LOLBAS-Project/LOLBAS.git
/ohld/igbot |  Free scripts, bots and Python API wrapper. Get free followers with our au \ https://github.com/ohld/igbot.git
/headjs/headjs | The only script in your HEAD. \ https://github.com/headjs/headjs.git
/oblique/create_ap | [NOT MAINTAINED] This script creates a NATed or Bridged WiFi Access Point. \ https://github.com/oblique/create_ap.git
/xwmx/nb | CLI and local web plain text note‑taking, bookmarking, and archiving with l \ https://github.com/xwmx/nb.git
/onqtam/awesome-cmake | A curated list of awesome CMake resources, scripts, modules and examples. \ https://github.com/onqtam/awesome-cmake.git
/v1s1t0r1sh3r3/airgeddon | This is a multi-use bash script for Linux systems to audit wireless network \ https://github.com/v1s1t0r1sh3r3/airgeddon.git
/MatrixTM/MHDDoS | Best DDoS Attack Script  Python3, (Cyber / DDos) Attack With 53 Methods \ https://github.com/MatrixTM/MHDDoS.git
/jenkinsci/pipeline-examples | A collection of examples, tips and tricks and snippets of scripting for the \ https://github.com/jenkinsci/pipeline-examples.git
/michidk/Unity-Script-Collection | A maintained collection of useful & free unity scripts / library's / plugin \ https://github.com/michidk/Unity-Script-Collection.git
/reactjs/react-codemod | React codemod scripts \ https://github.com/reactjs/react-codemod.git
/interconnectit/Search-Replace-DB | This script was made to aid the process of migrating PHP and MySQL based we \ https://github.com/interconnectit/Search-Replace-DB.git
/kasper/phoenix | A lightweight macOS window and app manager scriptable with JavaScript \ https://github.com/kasper/phoenix.git
/yamashi/CyberEngineTweaks | Cyberpunk 2077 tweaks, hacks and scripting framework \ https://github.com/yamashi/CyberEngineTweaks.git
/v2fly/fhs-install-v2ray | Bash script for installing V2Ray in operating systems such as Debian / Cent \ https://github.com/v2fly/fhs-install-v2ray.git
/kellyjonbrazil/jc | CLI tool and python library that converts the output of popular command-lin \ https://github.com/kellyjonbrazil/jc.git
/github/hubot-scripts | DEPRECATED, see https://github.com/github/hubot-scripts/issues/1113 for det \ https://github.com/github/hubot-scripts.git
/scrapinghub/splash | Lightweight, scriptable browser as a service with an HTTP API \ https://github.com/scrapinghub/splash.git
/ct-Open-Source/tuya-convert | A collection of scripts to flash Tuya IoT devices to alternative firmwares \ https://github.com/ct-Open-Source/tuya-convert.git
/googleworkspace/apps-script-samples | Apps Script samples for Google Workspace products. \ https://github.com/googleworkspace/apps-script-samples.git
/abbodi1406/KMS_VL_ALL_AIO | Smart Activation Script \ https://github.com/abbodi1406/KMS_VL_ALL_AIO.git
/google/clasp |  Command Line Apps Script Projects \ https://github.com/google/clasp.git
/addyosmani/basket | A script and resource loader for caching & loading files with localStorage \ https://github.com/addyosmani/basket.js.git
/raycast/script-commands | Script Commands let you tailor Raycast to your needs. Think of them as litt \ https://github.com/raycast/script-commands.git
/adrianscheff/useful-sed | Useful sed scripts & patterns.  \ https://github.com/adrianscheff/useful-sed.git
/ketoo/NoahGameFrame | A fast, scalable, distributed game server engine/framework for C++, include \ https://github.com/ketoo/NoahGameFrame.git
/godotengine/awesome-godot | A curated list of free/libre plugins, scripts and add-ons for Godot \ https://github.com/godotengine/awesome-godot.git
/AveYo/MediaCreationTool | Universal MCT wrapper script for all Windows 10/11 versions from 1507 to 21 \ https://github.com/AveYo/MediaCreationTool.bat.git
/arismelachroinos/lscript | The LAZY script will make your life easier, and of course faster. \ https://github.com/arismelachroinos/lscript.git
/CyberPunkMetalHead/Binance-volatility-trading-bot | This is a fully functioning Binance trading bot that measures the volatilit \ https://github.com/CyberPunkMetalHead/Binance-volatility-trading-bot.git
/inkle/ink | inkle's open source scripting language for writing interactive narrative. \ https://github.com/inkle/ink.git
/microservices-demo/microservices-demo | Deployment scripts & config for Sock Shop \ https://github.com/microservices-demo/microservices-demo.git
/pythonnet/pythonnet | Python for .NET is a package that gives Python programmers nearly seamless  \ https://github.com/pythonnet/pythonnet.git
/fivesheep/chnroutes | scripts help chinese netizen, who uses vpn to combat censorship, by modifyi \ https://github.com/fivesheep/chnroutes.git
/payloadbox/xss-payload-list |  Cross Site Scripting ( XSS ) Vulnerability Payload List \ https://github.com/payloadbox/xss-payload-list.git
/ChrisTitusTech/win10script | This is the Ultimate Windows 10 Script from a creation from multiple debloa \ https://github.com/ChrisTitusTech/win10script.git
/mevdschee/php-crud-api | Single file PHP script that adds a REST API to a SQL database \ https://github.com/mevdschee/php-crud-api.git
/laurentj/slimerjs | A scriptable browser like PhantomJS, based on Firefox \ https://github.com/laurentj/slimerjs.git
/killme2008/aviatorscript | A high performance scripting language hosted on the JVM. \ https://github.com/killme2008/aviatorscript.git
/mileszs/ack | Vim plugin for the Perl module / CLI script 'ack' \ https://github.com/mileszs/ack.vim.git
/testem/testem | Test'em 'Scripts! A test runner that makes Javascript unit testing fun. \ https://github.com/testem/testem.git
/taxigps/xbmc-addons-chinese | Addon scripts, plugins, and skins for XBMC Media Center. Special for chines \ https://github.com/taxigps/xbmc-addons-chinese.git
/pywebio/PyWebIO | Write interactive web app in script way. \ https://github.com/pywebio/PyWebIO.git
/kewlbear/FFmpeg-iOS-build-script | Shell scripts to build FFmpeg for iOS and tvOS \ https://github.com/kewlbear/FFmpeg-iOS-build-script.git
/checkly/puppeteer-examples | Puppeteer example scripts for running Headless Chrome from Node. \ https://github.com/checkly/puppeteer-examples.git
/niespodd/browser-fingerprinting | Analysis of Bot Protection systems with available countermeasures . How to \ https://github.com/niespodd/browser-fingerprinting.git
/containers/podman-compose | a script to run docker-compose.yml using podman \ https://github.com/containers/podman-compose.git
/dwyl/learn-to-send-email-via-google-script-html-no-server | :email: An Example of using an HTML form (e.g: "Contact Us" on a website) t \ https://github.com/dwyl/learn-to-send-email-via-google-script-html-no-server.git
/leon-thomm/Ryven | Flow-based visual scripting for Python \ https://github.com/leon-thomm/Ryven.git
/jeanphix/Ghost | Webkit based scriptable web browser for python.  \ https://github.com/jeanphix/Ghost.py.git
/segmentio/daydream | A chrome extension to record your actions into a nightmare or puppeteer scr \ https://github.com/segmentio/daydream.git
/babashka/babashka | Native, fast starting Clojure interpreter for scripting \ https://github.com/babashka/babashka.git
/d5/tengo | A fast script language for Go \ https://github.com/d5/tengo.git
/IvanMathy/Boop | A scriptable scratchpad for developers. In slow yet steady progress. \ https://github.com/IvanMathy/Boop.git
/leebaird/discover | Custom bash scripts used to automate various penetration testing tasks incl \ https://github.com/leebaird/discover.git
/dinbror/blazy | Hey, be lazy! bLazy.JS is a lightweight pure JavaScript script for lazy loa \ https://github.com/dinbror/blazy.git
/vulnersCom/nmap-vulners | NSE script based on Vulners.com API \ https://github.com/vulnersCom/nmap-vulners.git
/aapatre/Automatic-Udemy-Course-Enroller-GET-PAID-UDEMY-COURSES-for-FREE | Do you want to LEARN NEW STUFF for FREE? Don't worry, with the power of web \ https://github.com/aapatre/Automatic-Udemy-Course-Enroller-GET-PAID-UDEMY-COURSES-for-FREE.git
/rails/jquery-ujs | Ruby on Rails unobtrusive scripting adapter for jQuery \ https://github.com/rails/jquery-ujs.git
/charles2gan/GDA-android-reversing-Tool | GDA is a new fast and powerful decompiler in C++(working without Java VM) f \ https://github.com/charles2gan/GDA-android-reversing-Tool.git
/SuperMonster003/Ant-Forest | 基于 Auto.js 的蚂蚁森林能量自动收取脚本  Auto.js-based ant forest energy auto-collect scri \ https://github.com/SuperMonster003/Ant-Forest.git
/bitfield/script | Making it easy to write shell-like scripts in Go \ https://github.com/bitfield/script.git
/BrentOzarULTD/SQL-Server-First-Responder-Kit | sp_Blitz, sp_BlitzCache, sp_BlitzFirst, sp_BlitzIndex, and other SQL Server \ https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit.git
/github/scripts-to-rule-them-all | Set of boilerplate scripts describing the normalized script pattern that Gi \ https://github.com/github/scripts-to-rule-them-all.git
/johanhaleby/kubetail | Bash script to tail Kubernetes logs from multiple pods at the same time \ https://github.com/johanhaleby/kubetail.git
/Ourpalm/ILRuntime | Pure C# IL Intepreter Runtime, which is fast and reliable for scripting req \ https://github.com/Ourpalm/ILRuntime.git
/SlexAxton/yepnope | A Script Loader For Your Conditional Builds \ https://github.com/SlexAxton/yepnope.js.git
/pystardust/ytfzf | A posix script to find and watch youtube videos from the terminal. (Without \ https://github.com/pystardust/ytfzf.git
/oneinstack/lnmp | LEMP stack/LAMP stack/LNMP stack  installation scripts for CentOS/Redhat De \ https://github.com/oneinstack/lnmp.git
/ChaiScript/ChaiScript | Embedded Scripting Language Designed for C++ \ https://github.com/ChaiScript/ChaiScript.git
/com-lihaoyi/Ammonite | Scala Scripting \ https://github.com/com-lihaoyi/Ammonite.git
/nerdypepper/dijo | scriptable, curses-based, digital habit tracker \ https://github.com/nerdypepper/dijo.git
/immense/Remotely | A remote control and remote scripting solution, built with .NET 5, Blazor,  \ https://github.com/immense/Remotely.git
/GerbenJavado/LinkFinder | A python script that finds endpoints in JavaScript files \ https://github.com/GerbenJavado/LinkFinder.git
/geerlingguy/macos-virtualbox-vm | Instructions and script to help you create a VirtualBox VM running macOS. \ https://github.com/geerlingguy/macos-virtualbox-vm.git
/WSA-Community/WSAGAScript | Scripts to install Google Apps into a WSA image. Plus optional root \ https://github.com/WSA-Community/WSAGAScript.git
/jitsucom/jitsu | Jitsu is an open-source Segment alternative. Fully-scriptable data ingestio \ https://github.com/jitsucom/jitsu.git
/coreybutler/node-windows | Windows support for Node.JS scripts (daemons, eventlog, UAC, etc). \ https://github.com/coreybutler/node-windows.git
/sciter-sdk/go-sciter | Golang bindings of Sciter: the Embeddable HTML/CSS/script engine for modern \ https://github.com/sciter-sdk/go-sciter.git
/godlygeek/tabular | Vim script for text filtering and alignment \ https://github.com/godlygeek/tabular.git
/Roblox/luau | A fast, small, safe, gradually typed embeddable scripting language derived  \ https://github.com/Roblox/luau.git
/awslabs/amazon-redshift-utils | Amazon Redshift Utils contains utilities, scripts and view which are useful \ https://github.com/awslabs/amazon-redshift-utils.git
/redplanetlabs/specter | Clojure(Script)'s missing piece \ https://github.com/redplanetlabs/specter.git
/wee-slack/wee-slack | A WeeChat script for Slack.com. Supports threads and reactions, synchronize \ https://github.com/wee-slack/wee-slack.git
/madrobby/scriptaculous | script.aculo.us is an open-source JavaScript framework for visual effects a \ https://github.com/madrobby/scriptaculous.git
/brigadecore/brigade | Event-driven scripting for Kubernetes \ https://github.com/brigadecore/brigade.git
/jfcoz/postgresqltuner | Simple script to analyse your PostgreSQL database configuration, and give t \ https://github.com/jfcoz/postgresqltuner.git
/feimosi/baguetteBox | :zap: Simple and easy to use lightbox script written in pure JavaScript \ https://github.com/feimosi/baguetteBox.js.git
/damonkohler/sl4a | SL4A brings scripting languages to Android by allowing you to edit and exec \ https://github.com/damonkohler/sl4a.git
/MichalDanielDobrzanski/DeepLearningPython | neuralnetworksanddeeplearning.com integrated scripts for Python 3.5.2 and T \ https://github.com/MichalDanielDobrzanski/DeepLearningPython.git
/drush-ops/drush | Drush is a command-line shell and scripting interface for Drupal, a veritab \ https://github.com/drush-ops/drush.git
/plumatic/schema | Clojure(Script) library for declarative data description and validation \ https://github.com/plumatic/schema.git
/kkkgo/KMS_VL_ALL | KMS_VL_ALL - Smart Activation Script \ https://github.com/kkkgo/KMS_VL_ALL.git
/UnityCommunity/UnityLibrary | :books: Library of all kind of scripts, snippets & shaders for Unity \ https://github.com/UnityCommunity/UnityLibrary.git
/x2on/OpenSSL-for-iPhone | A script for compiling OpenSSL for iOS Devices (iPhone, iPad, iPod Touch, A \ https://github.com/x2on/OpenSSL-for-iPhone.git
/juewuy/ShellClash | One-click deployment and management of Clash services using Shell scripts i \ https://github.com/juewuy/ShellClash.git
/ansistrano/deploy | Ansible role to deploy scripting applications like PHP, Python, Ruby, etc.  \ https://github.com/ansistrano/deploy.git
/actions/github-script | Write workflows scripting the GitHub API in JavaScript \ https://github.com/actions/github-script.git
/jinwyp/one_click_script | 一键安装 trojan v2ray xray. Install v2ray / xray (VLESS) and trojan (trojan-go) \ https://github.com/jinwyp/one_click_script.git
/firehol/blocklist-ipsets | ipsets dynamically updated with firehol's update-ipsets.sh script \ https://github.com/firehol/blocklist-ipsets.git
/facebookarchive/fb | Torch implementation of ResNet from http://arxiv.org/abs/1512.03385 and tra \ https://github.com/facebookarchive/fb.resnet.torch.git
/rjpcomputing/luaforwindows | Lua for Windows is a 'batteries included environment' for the Lua scripting \ https://github.com/rjpcomputing/luaforwindows.git
/redis/redis-doc | Redis documentation source code for markdown and metadata files, conversion \ https://github.com/redis/redis-doc.git
/msanders/snipmate | snipMate.vim aims to be a concise vim script that implements some of TextMa \ https://github.com/msanders/snipmate.vim.git
/JacquesLucke/animation_nodes | Node based visual scripting system designed for motion graphics in Blender. \ https://github.com/JacquesLucke/animation_nodes.git
/yichahucha/surge | Some useful scripts. \ https://github.com/yichahucha/surge.git
/mitsuhiko/pipsi | pip script installer \ https://github.com/mitsuhiko/pipsi.git
/ryanb/nifty-generators | A collection of useful Rails generator scripts. \ https://github.com/ryanb/nifty-generators.git
/rewardone/OSCPRepo | A list of commands, scripts, resources, and more that I have gathered and a \ https://github.com/rewardone/OSCPRepo.git
/greasemonkey/greasemonkey | Greasemonkey is a user script manager for Firefox. \ https://github.com/greasemonkey/greasemonkey.git
/danijar/handout | Turn Python scripts into handouts with Markdown and figures \ https://github.com/danijar/handout.git
/sveinbjornt/Platypus | Create native Mac applications from command line scripts. \ https://github.com/sveinbjornt/Platypus.git
/quericy/one-key-ikev2-vpn | A bash script base on Centos or Ubuntu help you to create IKEV2/L2TP vpn. \ https://github.com/quericy/one-key-ikev2-vpn.git
/filipw/dotnet-script | Run C# scripts from the .NET CLI. \ https://github.com/filipw/dotnet-script.git
/guysoft/OctoPi | Scripts to build OctoPi, a Raspberry PI distro for controlling 3D printers  \ https://github.com/guysoft/OctoPi.git
/ahkscript/awesome-AutoHotkey | A curated list of awesome AutoHotkey libraries, library distributions, scri \ https://github.com/ahkscript/awesome-AutoHotkey.git
/fideloper/Vaprobash | Vagrant Provisioning Bash Scripts \ https://github.com/fideloper/Vaprobash.git
/bobbyiliev/introduction-to-bash-scripting | Free Introduction to Bash Scripting eBook \ https://github.com/bobbyiliev/introduction-to-bash-scripting.git
/p-gen/smenu | smenu started as a lightweight and flexible terminal menu generator, but qu \ https://github.com/p-gen/smenu.git
/ryanmjacobs/c | Compile and execute C "scripts" in one go! \ https://github.com/ryanmjacobs/c.git
/KittyGiraudel/a11y-dialog | A very lightweight and flexible accessible modal dialog script. \ https://github.com/KittyGiraudel/a11y-dialog.git
/cujojs/curl | curl.js is small, fast, extensible module loader that handles AMD, CommonJS \ https://github.com/cujojs/curl.git
/JohnSundell/Marathon | [DEPRECATED] Marathon makes it easy to write, run and manage your Swift scr \ https://github.com/JohnSundell/Marathon.git
/kvz/bash3boilerplate | Templates to write better Bash scripts \ https://github.com/kvz/bash3boilerplate.git
/mara/mara-pipelines | A lightweight opinionated ETL framework, halfway between plain scripts and  \ https://github.com/mara/mara-pipelines.git
/scriban/scriban | A fast, powerful, safe and lightweight scripting language and engine for .N \ https://github.com/scriban/scriban.git
/billw2/rpi-clone | A shell script to clone a booted disk. \ https://github.com/billw2/rpi-clone.git
/munki/macadmin-scripts | Scripts of possible interest to macOS admins \ https://github.com/munki/macadmin-scripts.git
/layabox/LayaAir_Discard | This is old LayaAir veriosn writetten by ActionScript 3.0 ,now LayaAir is u \ https://github.com/layabox/LayaAir_Discard.git
/observing/pre-commit | Automatically installs a git pre-commit script in your git repository which \ https://github.com/observing/pre-commit.git
/garybernhardt/dotfiles | ~grb. Things in here are often interdependent. A lot of stuff relies on scr \ https://github.com/garybernhardt/dotfiles.git
/silinternational/ecs-deploy | Simple shell script for initiating blue-green deployments on Amazon EC2 Con \ https://github.com/silinternational/ecs-deploy.git
/dana-at-cp/backdoor-apk | backdoor-apk is a shell script that simplifies the process of adding a back \ https://github.com/dana-at-cp/backdoor-apk.git
/peewpw/Invoke-PSImage | Encodes a PowerShell script in the pixels of a PNG file and generates a one \ https://github.com/peewpw/Invoke-PSImage.git
/inkle/inky | An editor for ink: inkle's narrative scripting language \ https://github.com/inkle/inky.git
/darkoperator/dnsrecon | DNS Enumeration Script \ https://github.com/darkoperator/dnsrecon.git
/c-smile/sciter-sdk | Sciter is an embeddable HTML/CSS/scripting engine \ https://github.com/c-smile/sciter-sdk.git
/ToxicFrog/Ligaturizer | Programming Fonts with Ligatures added (& a script to add them to other fon \ https://github.com/ToxicFrog/Ligaturizer.git
/polybar/polybar-scripts | This is a community project. We write and collect scripts for polybar! \ https://github.com/polybar/polybar-scripts.git
/extrabacon/python-shell | Run Python scripts from Node.js with simple (but efficient) inter-process c \ https://github.com/extrabacon/python-shell.git
/kboghdady/youTube_ads_4_pi-hole | YouTube script to add the new Ads list for Pi-hole \ https://github.com/kboghdady/youTube_ads_4_pi-hole.git
/Lucifier129/react-lite | An implementation of React v15.x that optimizes for small script size \ https://github.com/Lucifier129/react-lite.git
/msys2/MINGW-packages | Package scripts for MinGW-w64 targets to build under MSYS2.  \ https://github.com/msys2/MINGW-packages.git
/wooey/Wooey | A Django app that creates automatic web UIs for Python scripts. \ https://github.com/wooey/Wooey.git
/minamarkham/formation |  macOS setup script for front-end development \ https://github.com/minamarkham/formation.git
/holgerbrandl/kscript | Scripting enhancements for Kotlin \ https://github.com/holgerbrandl/kscript.git
/21y4d/nmapAutomator | A script that you can run in the background! \ https://github.com/21y4d/nmapAutomator.git
/rueckstiess/mtools | A collection of scripts to set up MongoDB test environments and parse and v \ https://github.com/rueckstiess/mtools.git
/LukeSmithxyz/LARBS | Luke's Auto-Rice Bootstrapping Scripts: Installation Scripts for My Arch Li \ https://github.com/LukeSmithxyz/LARBS.git
/rhaiscript/rhai | Rhai - An embedded scripting language for Rust. \ https://github.com/rhaiscript/rhai.git
/blockchain-etl/ethereum-etl | Python scripts for ETL (extract, transform and load) jobs for Ethereum bloc \ https://github.com/blockchain-etl/ethereum-etl.git
/Bugswriter/notflix | Notflix is a shell script to search and stream torrent. \ https://github.com/Bugswriter/notflix.git
/DbUp/DbUp | DbUp is a .NET library that helps you to deploy changes to SQL Server datab \ https://github.com/DbUp/DbUp.git
/ambrop72/badvpn | NCD scripting language, tun2socks proxifier, P2P VPN \ https://github.com/ambrop72/badvpn.git
/flant/shell-operator | Shell-operator is a tool for running event-driven scripts in a Kubernetes c \ https://github.com/flant/shell-operator.git
/Qihoo360/phptrace | A tracing and troubleshooting tool for PHP scripts. \ https://github.com/Qihoo360/phptrace.git
/PiotrMachowski/Xiaomi-cloud-tokens-extractor | This tool/script retrieves tokens for all devices connected to Xiaomi cloud \ https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor.git
/esc0rtd3w/wifi-hacker | Shell Script For Attacking Wireless Connections Using Built-In Kali Tools.  \ https://github.com/esc0rtd3w/wifi-hacker.git
/RoliSoft/WSL-Distribution-Switcher | Scripts to replace the distribution behind Windows Subsystem for Linux with \ https://github.com/RoliSoft/WSL-Distribution-Switcher.git
/mcordts/cityscapesScripts | README and scripts for the Cityscapes Dataset \ https://github.com/mcordts/cityscapesScripts.git
/Auburn/FastNoiseLite | Fast Portable Noise Library - C# C++ C Java(Script) HLSL \ https://github.com/Auburn/FastNoiseLite.git
/megastep/makeself | A self-extracting archiving tool for Unix systems, in 100% shell script. \ https://github.com/megastep/makeself.git
/lazywinadmin/PowerShell | PowerShell functions and scripts (Azure, Active Directory, SCCM, SCSM, Exch \ https://github.com/lazywinadmin/PowerShell.git
/ptaoussanis/sente | Realtime web comms for Clojure/Script \ https://github.com/ptaoussanis/sente.git
/alexgand/springer_free_books | Python script to download all Springer books released for free during the 2 \ https://github.com/alexgand/springer_free_books.git
/nullsecuritynet/tools | Security and Hacking Tools, Exploits, Proof of Concepts, Shellcodes, Script \ https://github.com/nullsecuritynet/tools.git
/mxcl/swift-sh | Easily script with third-party Swift dependencies. \ https://github.com/mxcl/swift-sh.git
/Unity-Technologies/Graphics | Unity Graphics - Including Scriptable Render Pipeline \ https://github.com/Unity-Technologies/Graphics.git
/rasta-mouse/Sherlock | PowerShell script to quickly find missing software patches for local privil \ https://github.com/rasta-mouse/Sherlock.git
/SamRothCA/Today-Scripts | A widget for running scripts in the Today View in OS X Yosemite's Notificat \ https://github.com/SamRothCA/Today-Scripts.git
/itm4n/PrivescCheck | Privilege Escalation Enumeration Script for Windows \ https://github.com/itm4n/PrivescCheck.git
/mac-cleanup/mac-cleanup-sh | ️ Cleanup script for macOS (DEPRECATED) \ https://github.com/mac-cleanup/mac-cleanup-sh.git
/nahamsec/lazyrecon | This script is intended to automate your reconnaissance process in an organ \ https://github.com/nahamsec/lazyrecon.git
/kellygravelyn/UnityToolbag | Variety of Unity scripts and tools. \ https://github.com/kellygravelyn/UnityToolbag.git
/wonderworks-software/PyFlow | Visual scripting framework for python - https://wonderworks-software.github \ https://github.com/wonderworks-software/PyFlow.git
/mrworf/plexupdate | Plex Update script to simplify the life of Linux Plex Media Server users. \ https://github.com/mrworf/plexupdate.git
/romashamin/Size-Marks-PS | A Photoshop™ script that makes measurement marks \ https://github.com/romashamin/Size-Marks-PS.git
/Cisco-Talos/pyrebox | Python scriptable Reverse Engineering Sandbox, a Virtual Machine instrument \ https://github.com/Cisco-Talos/pyrebox.git
/api0cradle/LOLBAS | Living Off The Land Binaries And Scripts - (LOLBins and LOLScripts) \ https://github.com/api0cradle/LOLBAS.git
/sevagas/macro_pack | macro_pack is a tool by @EmericNasi used to automatize obfuscation and gene \ https://github.com/sevagas/macro_pack.git
/jerrykuku/luci-app-jd-dailybonus | Luci for JD dailybonus Script \ https://github.com/jerrykuku/luci-app-jd-dailybonus.git
/ohoachuck/wwdc-downloader | WWDC 2019 video downloader script written in Swift - no external dependency \ https://github.com/ohoachuck/wwdc-downloader.git
/fossasia/xmario_buildscript | x-mario build script \ https://github.com/fossasia/xmario_buildscript.git
/CadQuery/cadquery | A python parametric CAD scripting framework based on OCCT \ https://github.com/CadQuery/cadquery.git
/ktaranov/sqlserver-kit | Useful links, scripts, tools and best practice for Microsoft SQL Server Dat \ https://github.com/ktaranov/sqlserver-kit.git
/fossasia/open-event-scripts | Scripts collection for the open event project hosted on eventyay.com \ https://github.com/fossasia/open-event-scripts.git
/RosettaCommons/RoseTTAFold | This package contains deep learning models and related scripts for RoseTTAF \ https://github.com/RosettaCommons/RoseTTAFold.git
/AutomatedLab/AutomatedLab | AutomatedLab is a provisioning solution and framework that lets you deploy  \ https://github.com/AutomatedLab/AutomatedLab.git
/CyberPunkMetalHead/Binance-News-Sentiment-Bot | This is a fully functioning Binance trading bot that takes into account the \ https://github.com/CyberPunkMetalHead/Binance-News-Sentiment-Bot.git
/dwisiswant0/awesome-oneliner-bugbounty | A collection of awesome one-liner scripts especially for bug bounty tips. \ https://github.com/dwisiswant0/awesome-oneliner-bugbounty.git
/johnlindquist/kit | Script Kit. Automate Anything. \ https://github.com/johnlindquist/kit.git
/csvoss/onelinerizer | Shamelessly convert any Python 2 script into a terrible single line of code \ https://github.com/csvoss/onelinerizer.git
/jonathanpenn/ui-auto-monkey | UI AutoMonkey is a simple stress testing script for iOS applications that r \ https://github.com/jonathanpenn/ui-auto-monkey.git
/okor/justice | Embeddable script for displaying web page performance metrics. \ https://github.com/okor/justice.git
/tomnomnom/hacks | A collection of hacks and one-off scripts \ https://github.com/tomnomnom/hacks.git
/PistonDevelopers/dyon | A rusty dynamically typed scripting language \ https://github.com/PistonDevelopers/dyon.git
/yi-editor/yi | The Haskell-Scriptable Editor \ https://github.com/yi-editor/yi.git
/multiprocessio/datastation | App to easily query, script, and visualize data from every database, file,  \ https://github.com/multiprocessio/datastation.git
/tdenniston/bish | Bish is a language that compiles to Bash. It's designed to give shell scrip \ https://github.com/tdenniston/bish.git
/Fluorohydride/ygopro | A script engine for "yu-gi-oh!" and sample gui \ https://github.com/Fluorohydride/ygopro.git
/TheFrenchGhosty/TheFrenchGhostys-Ultimate-YouTube-DL-Scripts-Collection | The ultimate collection of scripts for YouTube-DL. \ https://github.com/TheFrenchGhosty/TheFrenchGhostys-Ultimate-YouTube-DL-Scripts-Collection.git
/sjlleo/netflix-verify | 流媒体NetFlix解锁检测脚本 / A script used to determine whether your network can watc \ https://github.com/sjlleo/netflix-verify.git
/glycerine/zygomys | Zygo is a Lisp interpreter written in 100% Go. Central use case: dynamicall \ https://github.com/glycerine/zygomys.git
/dashingsoft/pyarmor | A tool used to obfuscate python scripts, bind obfuscated scripts to fixed m \ https://github.com/dashingsoft/pyarmor.git
/plentz/lol_dba | lol_dba is a small package of rake tasks that scan your application models  \ https://github.com/plentz/lol_dba.git
/plumatic/plumbing | Prismatic's Clojure(Script) utility belt \ https://github.com/plumatic/plumbing.git
/bjango/Bjango-Actions | A collection of Photoshop actions, Photoshop scripts, Hazel rules, macOS wo \ https://github.com/bjango/Bjango-Actions.git
/amoffat/snake | Full Python Scripting in Vim \ https://github.com/amoffat/snake.git
/webpack-contrib/worker-loader | A webpack loader that registers a script as a Web Worker \ https://github.com/webpack-contrib/worker-loader.git
/udhos/update-golang | update-golang is a script to easily fetch and install new Golang releases w \ https://github.com/udhos/update-golang.git
/TaranVH/2nd-keyboard | ALL of Taran's scripts - not just for the 2nd keyboard. \ https://github.com/TaranVH/2nd-keyboard.git
/DerekSelander/LLDB | A collection of LLDB aliases/regexes and Python scripts to aid in your debu \ https://github.com/DerekSelander/LLDB.git
/will8211/unimatrix | Python script to simulate the display from "The Matrix" in terminal. Uses h \ https://github.com/will8211/unimatrix.git
/adwiv/android-fat-aar | Gradle script that allows you to merge and embed dependencies in generted a \ https://github.com/adwiv/android-fat-aar.git
/create-dmg/create-dmg | A shell script to build fancy DMGs \ https://github.com/create-dmg/create-dmg.git
/lmc999/RegionRestrictionCheck | A bash script to check if your VPS's IP is available for various OTT platfo \ https://github.com/lmc999/RegionRestrictionCheck.git
/coelckers/gzdoom | GZDoom is a feature centric port for all Doom engine games, based on ZDoom, \ https://github.com/coelckers/gzdoom.git
/meskarune/i3lock-fancy | i3lock script that takes a screenshot of the desktop, blurs the background  \ https://github.com/meskarune/i3lock-fancy.git
/qiankanglai/LoopScrollRect | These scripts will make your UGUI ScrollRect reusing cells, to improve perf \ https://github.com/qiankanglai/LoopScrollRect.git
/OpnTec/open-spectrometer-python | Open Source Spectrometer Python Scripts \ https://github.com/OpnTec/open-spectrometer-python.git
/huggingface/pytorch-openai-transformer-lm | A PyTorch implementation of OpenAI's finetuned transformer language model  \ https://github.com/huggingface/pytorch-openai-transformer-lm.git
/microsoft/windows-dev-box-setup-scripts | Scripts to simplify setting up a Windows developer box \ https://github.com/microsoft/windows-dev-box-setup-scripts.git
/meganz/MEGAcmd | Command Line Interactive and Scriptable Application to access MEGA \ https://github.com/meganz/MEGAcmd.git
/kingkool68/generate-ssl-certs-for-local-development | A bash script for generating trusted self-signed SSL certs for local develo \ https://github.com/kingkool68/generate-ssl-certs-for-local-development.git
/neurobin/shc | Shell script compiler \ https://github.com/neurobin/shc.git
/cytopia/pwncat | pwncat - netcat on steroids with Firewall, IDS/IPS evasion, bind and revers \ https://github.com/cytopia/pwncat.git
/sezna/nps | NPM Package Scripts -- All the benefits of npm scripts without the cost of  \ https://github.com/sezna/nps.git
/lextm/windowsterminal-shell | Install/uninstall scripts for Windows Terminal context menu items \ https://github.com/lextm/windowsterminal-shell.git
/Lifka/hacking-resources | Hacking resources and cheat sheets. References, tools, scripts, tutorials,  \ https://github.com/Lifka/hacking-resources.git
/Tencent/UnLua | A feature-rich, easy-learning and highly optimized Lua scripting plugin for \ https://github.com/Tencent/UnLua.git
/ptaoussanis/timbre | Pure Clojure/Script logging library \ https://github.com/ptaoussanis/timbre.git
/sourcegraph/webloop | WebLoop: Scriptable, headless WebKit with a Go API. Like PhantomJS, but for \ https://github.com/sourcegraph/webloop.git
/ThakeeNathees/pocketlang | A lightweight, fast embeddable scripting language. \ https://github.com/ThakeeNathees/pocketlang.git
/cfenollosa/bashblog | A single Bash script to create blogs. Download, run, write, done! \ https://github.com/cfenollosa/bashblog.git
/BankSecurity/Red_Team | Some scripts useful for red team activities \ https://github.com/BankSecurity/Red_Team.git
/docker/docker-install | Docker installation script \ https://github.com/docker/docker-install.git
/gorhill/httpswitchboard | Point & click to forbid/allow any class of requests made by your browser. U \ https://github.com/gorhill/httpswitchboard.git
/matthewearl/faceswap | Python script to put facial features from one face onto another \ https://github.com/matthewearl/faceswap.git
/Impedimenta/Suitcase | A flexible command line tool for instantly deploying user interfaces for si \ https://github.com/Impedimenta/Suitcase.git
/HubSpot/sortable | Drop-in script to make tables sortable \ https://github.com/HubSpot/sortable.git
/vygr/ChrysaLisp | Parallel OS, with GUI, Terminal, OO Assembler, Class libraries, C-Script co \ https://github.com/vygr/ChrysaLisp.git
/ScutGame/Scut | Scut is a free, open source, stable game server framework, which support C# \ https://github.com/ScutGame/Scut.git
/kward/shunit2 | shUnit2 is a xUnit based unit test framework for Bourne based shell scripts \ https://github.com/kward/shunit2.git
/phpsysinfo/phpsysinfo | phpSysInfo: a customizable PHP script that displays information about your  \ https://github.com/phpsysinfo/phpsysinfo.git
/im3x/Scriptables | iOS14桌面组件神器（Scriptable）开发框架、教程、精美脚本分享 \ https://github.com/im3x/Scriptables.git
/jwiegley/git-scripts | A bunch of random scripts I've either written, downloaded or clipped from # \ https://github.com/jwiegley/git-scripts.git
/ZZROTDesign/docker-clean | A script that cleans docker containers, images, volumes, and networks.  \ https://github.com/ZZROTDesign/docker-clean.git
/adi1090x/dynamic-wallpaper | A simple bash script to set wallpapers according to current time, using cro \ https://github.com/adi1090x/dynamic-wallpaper.git
/brandon-rhodes/fopnp | Foundations of Python Network Programming (Apress) — scripts and examples \ https://github.com/brandon-rhodes/fopnp.git
/ssl/ezXSS | ezXSS is an easy way for penetration testers and bug bounty hunters to test \ https://github.com/ssl/ezXSS.git
/ivandavidov/minimal | Minimal Linux Live (MLL) is a tiny educational Linux distribution, which is \ https://github.com/ivandavidov/minimal.git
/fscarmen/warp | WARP one-click script. Add an IPv4, IPv6 or dual-stack CloudFlare WARP netw \ https://github.com/fscarmen/warp.git
/pbatard/Fido | A PowerShell script to download Windows ISOs or the UEFI Shell \ https://github.com/pbatard/Fido.git
/Hax4us/Nethunter-In-Termux | This is a script by which you can install Kali nethunter (Kali Linux) in yo \ https://github.com/Hax4us/Nethunter-In-Termux.git
/adon90/pentest_compilation | Compilation of commands, tips and scripts that helped me throughout Vulnhub \ https://github.com/adon90/pentest_compilation.git
/yeoman/grunt-usemin | [UNMAINTAINED] Replaces references to non-optimized scripts or stylesheets  \ https://github.com/yeoman/grunt-usemin.git
/hoothin/UserScripts | Greasemonkey scripts \ https://github.com/hoothin/UserScripts.git
/ufoscout/docker-compose-wait | A simple script to wait for other docker images to be started while using d \ https://github.com/ufoscout/docker-compose-wait.git
/mattn/anko | Scriptable interpreter written in golang \ https://github.com/mattn/anko.git
/harleyQu1nn/AggressorScripts | Collection of Aggressor scripts for Cobalt Strike 3.0+ pulled from multiple \ https://github.com/harleyQu1nn/AggressorScripts.git
/PeterWang512/FALdetector | Code for the paper: Detecting Photoshopped Faces by Scripting Photoshop \ https://github.com/PeterWang512/FALdetector.git
/ferd/recon | Collection of functions and scripts to debug Erlang in production. \ https://github.com/ferd/recon.git
/jolicode/JoliNotif | :computer: Send notifications to your desktop directly from your PHP script \ https://github.com/jolicode/JoliNotif.git
/oleg-shilo/cs-script | C# scripting platform \ https://github.com/oleg-shilo/cs-script.git
/lanyrd/mysql-postgresql-converter | Lanyrd's MySQL to PostgreSQL conversion script \ https://github.com/lanyrd/mysql-postgresql-converter.git
/riptano/ccm | A script to easily create and destroy an Apache Cassandra cluster on localh \ https://github.com/riptano/ccm.git
/mgeeky/Penetration-Testing-Tools | A collection of more than 170+ tools, scripts, cheatsheets and other loots  \ https://github.com/mgeeky/Penetration-Testing-Tools.git
/oooldking/script | Some Linux scripts \ https://github.com/oooldking/script.git
/brandonhilkert/fucking_shell_scripts | The easiest, most common sense configuration management tool... because you \ https://github.com/brandonhilkert/fucking_shell_scripts.git
/pch/welder | ‍Set up your Linux server with plain shell scripts \ https://github.com/pch/welder.git
/shellfire-dev/shellfire | A repository of namespaced, composable shell (bash, sh and dash) function l \ https://github.com/shellfire-dev/shellfire.git
/jordansissel/pleaserun | An attempt to abstract this "init" script madness. \ https://github.com/jordansissel/pleaserun.git
/blacktwin/JBOPS | Just a Bunch Of Plex Scripts \ https://github.com/blacktwin/JBOPS.git
/rtrouton/rtrouton_scripts | Scripts to share \ https://github.com/rtrouton/rtrouton_scripts.git
/taka-no-me/android-cmake | CMake toolchain file and other scripts for the Android NDK \ https://github.com/taka-no-me/android-cmake.git
/NetSPI/MicroBurst | A collection of scripts for assessing Microsoft Azure security \ https://github.com/NetSPI/MicroBurst.git
/visionmedia/deploy | Minimalistic deployment shell script \ https://github.com/visionmedia/deploy.git
/TheLastGimbus/GooglePhotosTakeoutHelper | Script that organizes the Google Takeout archive into one big chronological \ https://github.com/TheLastGimbus/GooglePhotosTakeoutHelper.git
/antipalindrome/Photoshop-Export-Layers-to-Files-Fast | This script allows you to export your layers as individual files at a speed \ https://github.com/antipalindrome/Photoshop-Export-Layers-to-Files-Fast.git
/DamionGans/ubuntu-wsl2-systemd-script | Script to enable systemd support on current Ubuntu WSL2 images [Unsupported \ https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git
/automatic-ripping-machine/automatic-ripping-machine | Automatic Ripping Machine (ARM) Scripts \ https://github.com/automatic-ripping-machine/automatic-ripping-machine.git
/labnol/unsubscribe-gmail | Gmail Unsubscriber is a Google Apps Script for unsubscribing from unwanted  \ https://github.com/labnol/unsubscribe-gmail.git
/arakasi72/rtinst | seedbox installation script for Ubuntu and Debian systems \ https://github.com/arakasi72/rtinst.git
/AutoHotkey/AutoHotkey | AutoHotkey is a powerful and easy to use scripting language for desktop aut \ https://github.com/AutoHotkey/AutoHotkey.git
/kuoruan/shell-scripts | Linux Shell Scripts \ https://github.com/kuoruan/shell-scripts.git
/cpojer/js-codemod | Codemod scripts to transform code to next generation JS \ https://github.com/cpojer/js-codemod.git
/googleworkspace/apps-script-oauth2 | An OAuth2 library for Google Apps Script. \ https://github.com/googleworkspace/apps-script-oauth2.git
/411Hall/JAWS | JAWS - Just Another Windows (Enum) Script \ https://github.com/411Hall/JAWS.git
/confluentinc/demo-scene | Scripts and samples to support Confluent Demos and Talks. ⚠️Might be rough \ https://github.com/confluentinc/demo-scene.git
/pristineio/webrtc-build-scripts | A set of build scripts useful for building WebRTC libraries for Android and \ https://github.com/pristineio/webrtc-build-scripts.git
/cyweb/hammer | Hammer DDos Script - Python 3 \ https://github.com/cyweb/hammer.git
/metosin/reitit | A fast data-driven router for Clojure/Script \ https://github.com/metosin/reitit.git
/luzeadev/winactivate | Easy-to-use Windows HWID/KMS38 Activation Script. \ https://github.com/luzeadev/winactivate.git
/msmhq/msm | An init script for managing Minecraft servers \ https://github.com/msmhq/msm.git
/byt3bl33d3r/SprayingToolkit | Scripts to make password spraying attacks against Lync/S4B, OWA & O365 a lo \ https://github.com/byt3bl33d3r/SprayingToolkit.git
/cpm-cmake/CPM |  CMake's missing package manager. A small CMake script for setup-free, cro \ https://github.com/cpm-cmake/CPM.cmake.git
/microsoft/ClearScript | A library for adding scripting to .NET applications. Supports V8 (Windows,  \ https://github.com/microsoft/ClearScript.git
/msys2/MSYS2-packages | Package scripts for MSYS2.  \ https://github.com/msys2/MSYS2-packages.git
/wagoodman/bashful | Use a yaml file to stitch together commands and bash snippits and run them  \ https://github.com/wagoodman/bashful.git
/paz-sh/paz | An open-source, in-house service platform with a PaaS-like workflow, built  \ https://github.com/paz-sh/paz.git
/wfh45678/radar | 实时风控引擎(Risk Engine)，自定义规则引擎（Rule Script），完美支持中文，适用于反欺诈(Anti-fraud)应用场景，开箱即用 \ https://github.com/wfh45678/radar.git
/cerner/clara-rules | Forward-chaining rules in Clojure(Script) \ https://github.com/cerner/clara-rules.git
/kwin-scripts/kwin-tiling | Tiling script for kwin \ https://github.com/kwin-scripts/kwin-tiling.git
/HarshCasper/Rotten-Scripts | Scripts that will make you go WOW! \ https://github.com/HarshCasper/Rotten-Scripts.git
/fhd/init-script-template | A template for simple System V init scripts \ https://github.com/fhd/init-script-template.git
/jacksondunstan/UnityNativeScripting | Unity Scripting in C++ \ https://github.com/jacksondunstan/UnityNativeScripting.git
/Pulover/PuloversMacroCreator | Automation Utility - Recorder & Script Generator \ https://github.com/Pulover/PuloversMacroCreator.git
/CedArctic/DigiSpark-Scripts | USB Rubber Ducky type scripts written for the DigiSpark. \ https://github.com/CedArctic/DigiSpark-Scripts.git
/harrysolovay/rescripts |  Use the latest react-scripts with custom configurations for Babel, ESLint \ https://github.com/harrysolovay/rescripts.git
/planetjekyll/awesome-jekyll-plugins | A collection of awesome Jekyll plugins (gems, scripts, pasties, etc.) \ https://github.com/planetjekyll/awesome-jekyll-plugins.git
/Julienh/Sharrre | Make your sharing widget! Sharrre is a jQuery plugin that allows you to cre \ https://github.com/Julienh/Sharrre.git
/folke/ultra-runner | ⛰ Ultra fast monorepo script runner and build tool \ https://github.com/folke/ultra-runner.git
/learnbyexample/scripting_course | :notebook: Books, reference guides and resources on Regular Expressions, CL \ https://github.com/learnbyexample/scripting_course.git
/egoist/dum | An npm scripts runner written in Rust. \ https://github.com/egoist/dum.git
/shakacode/bootstrap-loader | Load Bootstrap styles and scripts in your Webpack bundle \ https://github.com/shakacode/bootstrap-loader.git
/webfrogs/xcode_shell | shell script that used to auto-build xcode project \ https://github.com/webfrogs/xcode_shell.git
/contributorpw/google-apps-script-awesome-list | The usual list of links to interesting resources for Google Apps Script \ https://github.com/contributorpw/google-apps-script-awesome-list.git
/simonwagner/mergepbx | script for merging XCode project files in git \ https://github.com/simonwagner/mergepbx.git
/xdtianyu/scripts | scripts for work \ https://github.com/xdtianyu/scripts.git
/pgexperts/pgx_scripts | A collection of useful little scripts for database analysis and administrat \ https://github.com/pgexperts/pgx_scripts.git
/paxtonhare/demo-magic | A handy shell script that enables you to write repeatable demos in a bash e \ https://github.com/paxtonhare/demo-magic.git
/ivanhao/pvetools | proxmox ve tools script(debian9+ can use it).Including email, samba, NFS se \ https://github.com/ivanhao/pvetools.git
/alexcrichton/cc-rs | Rust library for build scripts to compile C/C++ code into a Rust library \ https://github.com/alexcrichton/cc-rs.git
/h5bp/ant-build-script | Ant build script intended for use with HTML5 Boilerplate. You may find some \ https://github.com/h5bp/ant-build-script.git
/microsoft/CSS-Exchange | Exchange Server support tools and scripts \ https://github.com/microsoft/CSS-Exchange.git
/ruanyf/simple-bash-scripts | A collection of simple Bash scripts \ https://github.com/ruanyf/simple-bash-scripts.git
/jayrambhia/Install-OpenCV | shell scripts to install different version of OpenCV in different distribut \ https://github.com/jayrambhia/Install-OpenCV.git
/haydenjames/bench-scripts | A compilation of Linux server benchmarking scripts. \ https://github.com/haydenjames/bench-scripts.git
/react-native-community/jsc-android-buildscripts | Script for building JavaScriptCore for Android (for React Native but not on \ https://github.com/react-native-community/jsc-android-buildscripts.git
/clymb3r/PowerShell | Useful PowerShell scripts \ https://github.com/clymb3r/PowerShell.git
/threatexpress/red-team-scripts | A collection of Red Team focused tools, scripts, and notes \ https://github.com/threatexpress/red-team-scripts.git
/JasonBarnabe/greasyfork | An online repository of user scripts. \ https://github.com/JasonBarnabe/greasyfork.git
/countercept/doublepulsar-detection-script | A python2 script for sweeping a network to find windows systems compromised \ https://github.com/countercept/doublepulsar-detection-script.git
/damonbauer/npm-build-boilerplate | A collection of packages that build a website using npm scripts. \ https://github.com/damonbauer/npm-build-boilerplate.git
/m4ll0k/SecretFinder | SecretFinder - A python script for find sensitive data (apikeys, accesstoke \ https://github.com/m4ll0k/SecretFinder.git
/sleventyeleven/linuxprivchecker | linuxprivchecker.py -- a Linux Privilege Escalation Check Script \ https://github.com/sleventyeleven/linuxprivchecker.git
/iitc-project/ingress-intel-total-conversion | ingress.com/intel total conversion user script with some new features. Shou \ https://github.com/iitc-project/ingress-intel-total-conversion.git
/Supervisor/initscripts | User-contributed OS init scripts for Supervisor \ https://github.com/Supervisor/initscripts.git
/nvie/git-toolbelt | A suite of useful Git commands that aid with scripting or every day command \ https://github.com/nvie/git-toolbelt.git
/hypriot/flash | Command line script to flash SD card images of any kind \ https://github.com/hypriot/flash.git
/ALIILAPRO/warp-plus-cloudflare | Script for getting unlimited GB on Warp+ ( https://1.1.1.1/ ) \ https://github.com/ALIILAPRO/warp-plus-cloudflare.git
/hausec/ADAPE-Script | Active Directory Assessment and Privilege Escalation Script \ https://github.com/hausec/ADAPE-Script.git
/helixarch/debtap | A script for converting .deb packages into Arch Linux packages, focused on  \ https://github.com/helixarch/debtap.git
/MiczFlor/RPi-Jukebox-RFID | A Raspberry Pi jukebox, playing local music, podcasts and web radio, stream \ https://github.com/MiczFlor/RPi-Jukebox-RFID.git
/the0demiurge/CharlesScripts | My awesome scripts for Arch Linux or Ubuntu Gnome latest LTS or MacBook. \ https://github.com/the0demiurge/CharlesScripts.git
/hastagAB/Awesome-Python-Scripts | A Curated list of Awesome Python Scripts that Automate Stuffs.  \ https://github.com/hastagAB/Awesome-Python-Scripts.git
/bang590/JSPatchConvertor | JSPatch Convertor is a tool that converts Objective-C code to JSPatch scrip \ https://github.com/bang590/JSPatchConvertor.git
/meisnate12/Plex-Meta-Manager | Python script to update metadata information for items in plex as well as a \ https://github.com/meisnate12/Plex-Meta-Manager.git
/metosin/malli | Data-Driven Schemas for Clojure/Script. \ https://github.com/metosin/malli.git
/masonr/yet-another-bench-script | YABS - a simple bash script to estimate Linux server performance using fio, \ https://github.com/masonr/yet-another-bench-script.git
/nextcloud/vm | ☁ The Nextcloud VM (virtual machine appliance), Home/SME Server and scrip \ https://github.com/nextcloud/vm.git
/dsixda/Android-Kitchen | A text-based kitchen for Android ROM customization.  Uses shell scripts and \ https://github.com/dsixda/Android-Kitchen.git
/monfresh/laptop | A shell script which sets up a working Ruby development environment on Mac, \ https://github.com/monfresh/laptop.git
/raspberrypi/rpi-eeprom | Installation scripts and binaries for the closed sourced Raspberry Pi 4 EEP \ https://github.com/raspberrypi/rpi-eeprom.git
/kareman/SwiftShell | A Swift framework for shell scripting. \ https://github.com/kareman/SwiftShell.git
/monitoringartist/zabbix-community-repos | :memo: 850+ Zabbix community project links: SW/HW/DB templates, scripts, CL \ https://github.com/monitoringartist/zabbix-community-repos.git
/P3TERX/warp | WARP 一键安装脚本 | Cloudflare WARP Installer | A Bash script that automatically  \ https://github.com/P3TERX/warp.sh.git
/microsoft/MSLab | Azure Stack HCI, Windows 10 and Windows Server rapid lab deployment scripts \ https://github.com/microsoft/MSLab.git
/ninjaaron/replacing-bash-scripting-with-python | Guide on using using python for administrative scripting \ https://github.com/ninjaaron/replacing-bash-scripting-with-python.git
/screetsec/Dracnmap | Dracnmap is an open source program which is using to exploit the network an \ https://github.com/screetsec/Dracnmap.git
/oxfeeefeee/goscript | Go specs implemented as a scripting language in Rust. \ https://github.com/oxfeeefeee/goscript.git
/huggingface/pytorch-pretrained-BigGAN | 🦋A PyTorch implementation of BigGAN with pretrained weights and conversion  \ https://github.com/huggingface/pytorch-pretrained-BigGAN.git
/smallmuou/ios-icon-generator | This script is use to generate iOS/macOS/watchOS app icons more easier. \ https://github.com/smallmuou/ios-icon-generator.git
/adamn/python-webkit2png | Python script that takes screenshots (browsershots) using webkit \ https://github.com/adamn/python-webkit2png.git
/vincentcox/bypass-firewalls-by-DNS-history | Firewall bypass script based on DNS history records. This script will searc \ https://github.com/vincentcox/bypass-firewalls-by-DNS-history.git
/neugram/ng | scripting language integrated with Go \ https://github.com/neugram/ng.git
/Incenteev/ParameterHandler | Composer script handling your ignored parameter file \ https://github.com/Incenteev/ParameterHandler.git
/godlikepanos/anki-3d-engine | AnKi 3D Engine - Vulkan backend, modern renderer, scripting, physics and mo \ https://github.com/godlikepanos/anki-3d-engine.git
/MCCTeam/Minecraft-Console-Client | Lightweight console for Minecraft chat and automated scripts \ https://github.com/MCCTeam/Minecraft-Console-Client.git
/nahamsec/bbht | A script to set up a quick Ubuntu 17.10 x64 box with tools I use.  \ https://github.com/nahamsec/bbht.git
/roboryantron/Unite2017 | Sample project for Game Architecture with Scriptable Objects from Unite Aus \ https://github.com/roboryantron/Unite2017.git
/matsumotory/ngx_mruby | ngx_mruby - A Fast and Memory-Efficient Web Server Extension Mechanism Usin \ https://github.com/matsumotory/ngx_mruby.git
/dakshshah96/local-cert-generator |  A set of scripts to quickly generate a HTTPS certificate for your local d \ https://github.com/dakshshah96/local-cert-generator.git
/filamentgroup/responsive-carousel | A jQuery-based script for responsive carousels that work with mouse, touch, \ https://github.com/filamentgroup/responsive-carousel.git
/lobuhi/byp4xx | Pyhton script for HTTP 40X responses bypassing. Features: Verb tampering, h \ https://github.com/lobuhi/byp4xx.git
/RoverWire/virtualhost | Bash Script to easy create or delete apache virtual hosts on ubuntu \ https://github.com/RoverWire/virtualhost.git
/goberoi/faceit | A script to make it easy to swap faces in videos using the faceswap library \ https://github.com/goberoi/faceit.git
/BlackFan/client-side-prototype-pollution | Prototype Pollution and useful Script Gadgets \ https://github.com/BlackFan/client-side-prototype-pollution.git
/basherpm/basher | A package manager for shell scripts. \ https://github.com/basherpm/basher.git
/LukeSmithxyz/emailwiz | Script that installs/configures a Dovecot, Postfix, Spam Assassin, OpenDKIM \ https://github.com/LukeSmithxyz/emailwiz.git
/saltstack/salt-bootstrap | Generic Salt Bootstrap Script \ https://github.com/saltstack/salt-bootstrap.git
/avinashkranjan/Amazing-Python-Scripts |  Curated collection of Amazing Python scripts from Basics to Advance with  \ https://github.com/avinashkranjan/Amazing-Python-Scripts.git
/StevenSLXie/Tutorials-for-Web-Developers | Tutorials for web developers including bash scripting, Linux commands, Mong \ https://github.com/StevenSLXie/Tutorials-for-Web-Developers.git
/jfahrenkrug/WWDC-Downloader | Script to download the sample code for all WWDC 2018 sessions. \ https://github.com/jfahrenkrug/WWDC-Downloader.git
/averagesecurityguy/scripts | Scripts I use during pentest engagements. \ https://github.com/averagesecurityguy/scripts.git
/testdouble/scripty | Because no one should be shell-scripting inside a JSON file. \ https://github.com/testdouble/scripty.git
/stark/Color-Scripts | User contributed color scripts  \ https://github.com/stark/Color-Scripts.git
/marcelotduarte/cx_Freeze | Create standalone executables from Python scripts, with the same performanc \ https://github.com/marcelotduarte/cx_Freeze.git
/plotly/dash-recipes | A collection of scripts and examples created while answering questions from \ https://github.com/plotly/dash-recipes.git
/tokyoneon/Chimera | Chimera is a PowerShell obfuscation script designed to bypass AMSI and comm \ https://github.com/tokyoneon/Chimera.git
/libretro/common-shaders | Collection of commonly used Cg shaders. These shaders are usable by either  \ https://github.com/libretro/common-shaders.git
/mattm/simple-neural-network | A simple Python script showing how the backpropagation algorithm works. \ https://github.com/mattm/simple-neural-network.git
/jeckman/YouTube-Downloader | PHP script for downloading videos from youtube; also parsing youtube feed i \ https://github.com/jeckman/YouTube-Downloader.git
/robertfoss/audio_shop | Your friendly neighbourhood script for mangling images or video using audio \ https://github.com/robertfoss/audio_shop.git
/electron-userland/electron-webpack | Scripts and configurations to compile Electron applications using webpack \ https://github.com/electron-userland/electron-webpack.git
/xcp-ng/xcp | Entry point for issues and wiki. Also contains some scripts and sources. \ https://github.com/xcp-ng/xcp.git
/dbohdan/embedded-scripting-languages | A list of embedded scripting languages \ https://github.com/dbohdan/embedded-scripting-languages.git
/Ha3MrX/DDos-Attack | DDos-Attack Is A Python script online Attack \ https://github.com/Ha3MrX/DDos-Attack.git
/IAmBlackHacker/Facebook-BruteForce | Bruteforce attack on Facebook account using python script \ https://github.com/IAmBlackHacker/Facebook-BruteForce.git
/emmericp/MoonGen | MoonGen is a fully scriptable high-speed packet generator built on DPDK and \ https://github.com/emmericp/MoonGen.git
/Shougo/vimfiler | :file_folder: Powerful file explorer implemented by Vim script \ https://github.com/Shougo/vimfiler.vim.git
/rdp/ffmpeg-windows-build-helpers | Helper script for cross compiling some media tools for windows, like custom \ https://github.com/rdp/ffmpeg-windows-build-helpers.git
/lambdalisue/fern |  General purpose asynchronous tree viewer written in Pure Vim script \ https://github.com/lambdalisue/fern.vim.git
/adoptium/temurin-build | Eclipse Temurin™ build scripts - common across all releases/versions \ https://github.com/adoptium/temurin-build.git
/MaxMEllon/vim-jsx-pretty | :flashlight: [Vim script] JSX and TSX syntax pretty highlighting for vim. \ https://github.com/MaxMEllon/vim-jsx-pretty.git
/vprusso/youtube_tutorials | Collection of scripts corresponding to LucidProgramming YouTube tutorials \ https://github.com/vprusso/youtube_tutorials.git
/MasterScrat/Chatistics |  Python scripts to parse Messenger, Hangouts, WhatsApp and Telegram chat l \ https://github.com/MasterScrat/Chatistics.git
/babashka/sci | Configurable Clojure interpreter suitable for scripting and Clojure DSLs. \ https://github.com/babashka/sci.git
/corpnewt/GenSMBIOS | Py script that uses acidanthera's macserial to generate SMBIOS and optional \ https://github.com/corpnewt/GenSMBIOS.git
/ruyadorno/ntl | Node Task List: Interactive cli to list and run package.json scripts \ https://github.com/ruyadorno/ntl.git
/animosity22/homescripts | My Scripts for Plex / Emby with Dropbox and rclone \ https://github.com/animosity22/homescripts.git
/rdeepak2002/reddit-place-script-2022 | Script to draw an image onto r/place (https://www.reddit.com/r/place/) \ https://github.com/rdeepak2002/reddit-place-script-2022.git
/defuse/swatd | Run a script when one or more sensors fail. \ https://github.com/defuse/swatd.git
/andrewning/sortphotos | SortPhotos is a Python script that organizes photos and videos into folders \ https://github.com/andrewning/sortphotos.git
/cldrn/nmap-nse-scripts | My collection of nmap NSE scripts \ https://github.com/cldrn/nmap-nse-scripts.git
/jenssegers/php-proxy | A PHP proxy script with https and post support \ https://github.com/jenssegers/php-proxy.git
/lingtjien/Grid-Tiling-Kwin | A kwin script that automatically tiles windows \ https://github.com/lingtjien/Grid-Tiling-Kwin.git
/MicrosoftDocs/visualstudio-docs | This repo is the home of the official Visual Studio, Visual Studio for Mac, \ https://github.com/MicrosoftDocs/visualstudio-docs.git
/jjmartres/Zabbix | A great collection of Zabbix scripts and templates \ https://github.com/jjmartres/Zabbix.git
/the-xentropy/xencrypt | A PowerShell script anti-virus evasion tool \ https://github.com/the-xentropy/xencrypt.git
/clojure-emacs/clojure-mode | Emacs support for the Clojure(Script) programming language \ https://github.com/clojure-emacs/clojure-mode.git
/1N3/PrivEsc | A collection of Windows, Linux and MySQL privilege escalation scripts and e \ https://github.com/1N3/PrivEsc.git
/riobard/bash-powerline | Powerline-style Bash prompt in pure Bash script. See also https://github.co \ https://github.com/riobard/bash-powerline.git
/subtleGradient/Appify-UI | Create the simplest possible Mac OS X apps. Uses HTML5 for the UI. Supports \ https://github.com/subtleGradient/Appify-UI.git
/bomberstudios/sketch-commands | A collection of script commands for Sketch.app \ https://github.com/bomberstudios/sketch-commands.git
/aurora/rmate | Remote TextMate 2 implemented as shell script \ https://github.com/aurora/rmate.git
/kentcdodds/kcd-scripts | CLI toolbox for common scripts for my projects \ https://github.com/kentcdodds/kcd-scripts.git
/ghidraninja/ghidra_scripts | Scripts for the Ghidra software reverse engineering suite. \ https://github.com/ghidraninja/ghidra_scripts.git
/jhaddix/domain | Setup script for Regon-ng \ https://github.com/jhaddix/domain.git
/sibears/IDAGolangHelper | Set of IDA Pro scripts for parsing GoLang types information stored in compi \ https://github.com/sibears/IDAGolangHelper.git
/crosire/scripthookvdotnet | An ASI plugin for Grand Theft Auto V, which allows running scripts written  \ https://github.com/crosire/scripthookvdotnet.git
/mmin18/WaxPatch | Dynamically load a lua script to change the behavior of your iOS applicatio \ https://github.com/mmin18/WaxPatch.git
/cokebar/gfwlist2dnsmasq | A shell script which convert gfwlist into dnsmasq rules. Python version: ht \ https://github.com/cokebar/gfwlist2dnsmasq.git
/turicas/brasil | Backend do Brasil.IO (para código dos scripts de coleta de dados, veja o li \ https://github.com/turicas/brasil.io.git
/packt-cli/Packt-Publishing-Free-Learning | Scripts that automatically claim and download  free daily eBooks from https \ https://github.com/packt-cli/Packt-Publishing-Free-Learning.git
/0xdea/frida-scripts | A collection of my Frida.re instrumentation scripts to facilitate reverse e \ https://github.com/0xdea/frida-scripts.git
/Peng-YM/QuanX | Scripts for QX, Loon, Surge \ https://github.com/Peng-YM/QuanX.git
/random-robbie/My-Shodan-Scripts | Collection of Scripts for shodan searching stuff. \ https://github.com/random-robbie/My-Shodan-Scripts.git
/gh2o/digitalocean-debian-to-arch | Script to convert a Debian installation on DigitalOcean to Arch Linux \ https://github.com/gh2o/digitalocean-debian-to-arch.git
/tsulej/GenerateMe | Processing scripts used to generative glitch / art / design \ https://github.com/tsulej/GenerateMe.git
/ruslo/polly |  :wrench: Collection of CMake toolchain files and scripts for cross-platfor \ https://github.com/ruslo/polly.git
/philcook/brew-php-switcher | Brew PHP switcher is a simple shell script to switch your apache and CLI qu \ https://github.com/philcook/brew-php-switcher.git
/microsoft/MixedRealityToolkit | The MixedRealityToolkit is a collection of scripts and components intended  \ https://github.com/microsoft/MixedRealityToolkit.git
/openedx/configuration | A collection of edx configuration scripts and utilities that edx.org uses t \ https://github.com/openedx/configuration.git
/CTeX-org/ctex-kit | Macro Packages and Scripts for Chinese TeX users \ https://github.com/CTeX-org/ctex-kit.git
/bugy/script-server | Web UI for your scripts with execution management \ https://github.com/bugy/script-server.git
/Lozy/danted | Fast script for installing & configing Danted--Socks5 Proxy Server. \ https://github.com/Lozy/danted.git
/tdamdouni/Pythonista | Collection of Python Scripts written for Pythonista iOS App  \ https://github.com/tdamdouni/Pythonista.git
/jenkinsci/jenkins-scripts | Scripts in Groovy, shell, Ruby, Python, whatever for managing/interacting w \ https://github.com/jenkinsci/jenkins-scripts.git
/keithamus/npm-scripts-example | An example of how to use NPM scripts over Grunt/Gulp & Friends. http://blog \ https://github.com/keithamus/npm-scripts-example.git
/OfficeDev/Office-IT-Pro-Deployment-Scripts |  A collection of useful PowerShell scripts to make deploying Office 2016 an \ https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts.git
/RamblingCookieMonster/PowerShell | Various PowerShell functions and scripts \ https://github.com/RamblingCookieMonster/PowerShell.git
/coursehero/slacktee | slacktee is a bash script that works like tee command. Instead of writing t \ https://github.com/coursehero/slacktee.git
/LeDragoX/Win-10-Smart-Debloat-Tools | These scripts will Customize, Debloat and Improve Privacy/Performance and S \ https://github.com/LeDragoX/Win-10-Smart-Debloat-Tools.git
/labnol/apps-script-starter | Setup a local development environment inside Visual Studio Code and build G \ https://github.com/labnol/apps-script-starter.git
/swisskyrepo/GraphQLmap | GraphQLmap is a scripting engine to interact with a graphql endpoint for pe \ https://github.com/swisskyrepo/GraphQLmap.git
/jakoch/awesome-composer |  :sunglasses: A curated awesome list for Composer, Packagist, Satis, Plugin \ https://github.com/jakoch/awesome-composer.git
/offensive-security/kali-arm-build-scripts | Kali Linux ARM build scripts \ https://github.com/offensive-security/kali-arm-build-scripts.git
/ralyodio/node-startup | Startup script for Linux-based systems for running node app when rebooting  \ https://github.com/ralyodio/node-startup.git
/google/macops | Utilities, tools, and scripts for managing and tracking a fleet of Macintos \ https://github.com/google/macops.git
/lucee/Lucee | Lucee Server is a dynamic, Java based (JSR-223), tag and scripting language \ https://github.com/lucee/Lucee.git
/MFDGaming/ubuntu-in-termux | This is a script by which you can install Ubuntu in your termux application \ https://github.com/MFDGaming/ubuntu-in-termux.git
/dotnetcore/FlubuCore | A cross platform build and deployment automation system for building projec \ https://github.com/dotnetcore/FlubuCore.git
/deajan/osync | A robust two way (bidirectional) file sync script based on rsync with fault \ https://github.com/deajan/osync.git
/unity-atoms/unity-atoms | ⚛️ Tiny modular pieces utilizing the power of Scriptable Objects \ https://github.com/unity-atoms/unity-atoms.git
/julesontheroad/NSC_BUILDER | Nintendo Switch Cleaner and Builder. A batchfile, python and html script ba \ https://github.com/julesontheroad/NSC_BUILDER.git
/OmerYa/Invisi-Shell | Hide your Powershell script in plain sight. Bypass all Powershell security  \ https://github.com/OmerYa/Invisi-Shell.git
/anti-ddos/Anti-DDOS |  Anti DDOS | Bash Script Project  \ https://github.com/anti-ddos/Anti-DDOS.git
/AndronixApp/AndronixOrigin | This is the official repository for the back end of the Andronix app . Her \ https://github.com/AndronixApp/AndronixOrigin.git
/SoptikHa2/desed | Debugger for Sed: demystify and debug your sed scripts, from comfort of you \ https://github.com/SoptikHa2/desed.git
/ttscoff/Slogger | Social logging script for Day One \ https://github.com/ttscoff/Slogger.git
/prabirshrestha/asyncomplete | async completion in pure vim script for vim8 and neovim \ https://github.com/prabirshrestha/asyncomplete.vim.git
/microsoftgraph/powershell-intune-samples | This repository of PowerShell sample scripts show how to access Intune serv \ https://github.com/microsoftgraph/powershell-intune-samples.git
/rust-shell-script/rust_cmd_lib | Common rust command-line macros and utilities, to write shell-script like t \ https://github.com/rust-shell-script/rust_cmd_lib.git
/oleg-shilo/wixsharp | Framework for building a complete MSI or WiX source code by using script fi \ https://github.com/oleg-shilo/wixsharp.git
/illuz/leetcode | (229 / 280) [中文|English] Solutions and notes of LEETCODE using C++/Java/Pyt \ https://github.com/illuz/leetcode.git
/npocmaka/batch | batch script utils and examples by npocmaka -  \ https://github.com/npocmaka/batch.scripts.git
/pmb6tz/windows-desktop-switcher | An AutoHotKey script for Windows that lets a user change virtual desktops b \ https://github.com/pmb6tz/windows-desktop-switcher.git
/samrocketman/gitlab-mirrors | A set of scripts adding the ability of managing remote mirrors to GitLab. \ https://github.com/samrocketman/gitlab-mirrors.git
/howardabrams/dot-files | My Emacs initialization code and standard scripts I use for client and serv \ https://github.com/howardabrams/dot-files.git
/WeBankFinTech/Scriptis | Scriptis is for interactive data analysis with script development(SQL, Pysp \ https://github.com/WeBankFinTech/Scriptis.git
/pH7Software/pH7-Social-Dating-CMS |  pH7Builder (formerly pH7CMS) :couple: is a Professional & Open Source Soc \ https://github.com/pH7Software/pH7-Social-Dating-CMS.git
/StarshipEngineer/OpenVPN-Setup | Shell script to set up Raspberry Pi (TM) as an OpenVPN server \ https://github.com/StarshipEngineer/OpenVPN-Setup.git
/praydog/REFramework | Scripting platform, modding framework and VR support for all RE Engine game \ https://github.com/praydog/REFramework.git
/pixelb/scripts | scripts from pixelbeat.org \ https://github.com/pixelb/scripts.git
/unixorn/git-extra-commands | A collection of git utilities and useful extra git scripts, packaged for ea \ https://github.com/unixorn/git-extra-commands.git
/corbindavenport/creative-cloud-linux | PlayOnLinux install script for Adobe Creative Cloud \ https://github.com/corbindavenport/creative-cloud-linux.git
/yboetz/motd | Collection of 'message of the day' scripts \ https://github.com/yboetz/motd.git
/mattiasgeniar/php-exploit-scripts | A collection of PHP exploit scripts, found when investigating hacked server \ https://github.com/mattiasgeniar/php-exploit-scripts.git
/lmorg/murex | Bash-like shell and scripting environment with advanced features designed f \ https://github.com/lmorg/murex.git
/PaulTaykalo/swift-scripts | Some useful scripts for swift developers \ https://github.com/PaulTaykalo/swift-scripts.git
/manojmj92/subtitle-downloader | Python script to automatically download subtitles for any movie/tv series e \ https://github.com/manojmj92/subtitle-downloader.git
/Yenthe666/InstallScript | Odoo install script \ https://github.com/Yenthe666/InstallScript.git
/epsylon/xsser | Cross Site "Scripter" (aka XSSer) is an automatic -framework- to detect, ex \ https://github.com/epsylon/xsser.git
/darold/ora2pg | Ora2Pg is a free tool used to migrate an Oracle database to a PostgreSQL co \ https://github.com/darold/ora2pg.git
/atom-community/atom-script | :runner: Run ( scripts | selections | source ) in Atom \ https://github.com/atom-community/atom-script.git
/lexiross/fattest-cat | Script to find fattest cat currently up for adoption at SF SPCA \ https://github.com/lexiross/fattest-cat.git
/l0ss/Grouper | A PowerShell script for helping to find vulnerable settings in AD Group Pol \ https://github.com/l0ss/Grouper.git
/Brooooooklyn/canvas | High performance skia binding to Node.js. Zero system dependencies and pure \ https://github.com/Brooooooklyn/canvas.git
/emposha/PHP-Shell-Detector | Web Shell Detector – is a php script that helps you find and identify php/c \ https://github.com/emposha/PHP-Shell-Detector.git
/craigz28/firmwalker | Script for searching the extracted firmware file system for goodies! \ https://github.com/craigz28/firmwalker.git
/boxcutter/windows | Virtual machine templates for Windows written in legacy JSON and Batch Scri \ https://github.com/boxcutter/windows.git
/newsdev/ai2html | A script for Adobe Illustrator that converts your Illustrator artwork into  \ https://github.com/newsdev/ai2html.git
/summerblue/laravel-ubuntu-init | A shell script for setting up Laravel Production environment on Ubuntu 14.0 \ https://github.com/summerblue/laravel-ubuntu-init.git
/jonkemp/gulp-useref | Parse build blocks in HTML files to replace references to non-optimized scr \ https://github.com/jonkemp/gulp-useref.git
/AsteroidOS/asteroid | Build script for AsteroidOS, an open-source operating system for smartwatch \ https://github.com/AsteroidOS/asteroid.git
/andrey-pohilko/registry-cli | Scripts for easy manipulation of docker-registry from command line (and fro \ https://github.com/andrey-pohilko/registry-cli.git
/smarr/latex-to-html5 | Scripts for Latex to HTML5 conversion \ https://github.com/smarr/latex-to-html5.git
/avivace/dotfiles | i3 + Plasma: using the i3 window manager on the top of KDE Plasma and other \ https://github.com/avivace/dotfiles.git
/alliedmodders/sourcemod | SourceMod - Source Engine Scripting and Administration \ https://github.com/alliedmodders/sourcemod.git
/killswitch-GUI/CobaltStrike-ToolKit | Some useful scripts for CobaltStrike  \ https://github.com/killswitch-GUI/CobaltStrike-ToolKit.git
/aaronchi/jrails | jRails is a drop-in jQuery replacement for Prototype/script.aculo.us on Rai \ https://github.com/aaronchi/jrails.git
/poljar/weechat-matrix | Weechat Matrix protocol script written in python \ https://github.com/poljar/weechat-matrix.git
/TebbaaX/Katana | python script for Google Dorking \ https://github.com/TebbaaX/Katana.git
/viccherubini/get-shit-done | Small script to configure your hosts file so you don't get distracted durin \ https://github.com/viccherubini/get-shit-done.git
/corpnewt/USBMap | Python script for mapping USB ports in macOS and creating a custom injector \ https://github.com/corpnewt/USBMap.git
/stormshadow07/HackTheWorld | An Python Script For Generating Payloads that Bypasses All Antivirus so far \ https://github.com/stormshadow07/HackTheWorld.git
/murarth/ketos | Lisp dialect scripting and extension language for Rust programs \ https://github.com/murarth/ketos.git
/unvell/ReoGrid | Fast and powerful .NET spreadsheet component, support data format, freeze,  \ https://github.com/unvell/ReoGrid.git
/GideonSenku/Scriptable | A iOS app named Scriptable's scripts \ https://github.com/GideonSenku/Scriptable.git
/n-st/nench | VPS benchmark script — based on the popular bench.sh, plus CPU and ioping t \ https://github.com/n-st/nench.git
/dannysteenman/aws-toolbox | A Collection of Awesome Tools and Scripts for Cloud Engineers \ https://github.com/dannysteenman/aws-toolbox.git
/tihanyin/PSSW100AVB | A list of useful Powershell scripts with 100% AV bypass (At the time of pub \ https://github.com/tihanyin/PSSW100AVB.git
/typicode/pegasus | Load JSON while still loading other scripts \ https://github.com/typicode/pegasus.git
/adi1090x/termux-style | Simple script to change color-schemes and fonts for Termux. \ https://github.com/adi1090x/termux-style.git
/Pseudonium/Obsidian_to_Anki | Script to add flashcards from text/markdown files to Anki \ https://github.com/Pseudonium/Obsidian_to_Anki.git
/J2TEAM/awesome-AutoIt | :star: A curated list of awesome UDFs, example scripts, tools and useful re \ https://github.com/J2TEAM/awesome-AutoIt.git
/jmcerrejon/PiKISS | PiKISS for Raspberry Pi: A bunch of scripts with menu to make your life eas \ https://github.com/jmcerrejon/PiKISS.git
/viljoviitanen/setup-simple-pptp-vpn | This is a very old repo, and a script that used to work years ago. Please f \ https://github.com/viljoviitanen/setup-simple-pptp-vpn.git
/vendasta/setup-new-computer-script | This script will help with the quick setup and installation of tools and ap \ https://github.com/vendasta/setup-new-computer-script.git
/burnettk/delete-docker-registry-image | If you are running a private v2 docker registry, and you are storing your d \ https://github.com/burnettk/delete-docker-registry-image.git
/iheanyi/bandcamp-dl | Simple python script to download Bandcamp albums \ https://github.com/iheanyi/bandcamp-dl.git
/cferdinandi/gumshoe | A simple vanilla JS scrollspy script. \ https://github.com/cferdinandi/gumshoe.git
/ralish/bash-script-template | A best practices Bash script template with several useful functions \ https://github.com/ralish/bash-script-template.git
/bigskysoftware/_hyperscript | a small scripting language for the web \ https://github.com/bigskysoftware/_hyperscript.git
/jlamarche/iOS-OpenGLES-Stuff | Various scripts, utils, and code examples for OpenGL ES programming for iOS \ https://github.com/jlamarche/iOS-OpenGLES-Stuff.git
/swagkarna/Defeat-Defender-V1 | Powerful batch script to dismantle complete windows defender protection and \ https://github.com/swagkarna/Defeat-Defender-V1.2.git
/elbywan/yett | A small webpage library to control the execution of (third party) scripts \ https://github.com/elbywan/yett.git
/bestswifter/macbootstrap | A bootstrap script for new Mac \ https://github.com/bestswifter/macbootstrap.git
/getfatday/keytool-importkeypair | A shell script to import key/certificate pairs into an existing Java keysto \ https://github.com/getfatday/keytool-importkeypair.git
/QuickBox/QB | QuickBox is much more than a ‘seedbox installer script’, it is a simplistic \ https://github.com/QuickBox/QB.git
/googlevr/tilt-brush-toolkit | Scripts and assets that help you use Tilt Brush data in your creative proje \ https://github.com/googlevr/tilt-brush-toolkit.git
/Tkd-Alex/Twitch-Channel-Points-Miner-v2 | A simple script that will watch a stream for you and earn the channel point \ https://github.com/Tkd-Alex/Twitch-Channel-Points-Miner-v2.git
/earwig/git-repo-updater | A console script that allows you to easily update multiple git repositories \ https://github.com/earwig/git-repo-updater.git
/MysticRyuujin/guac-install | Script for installing Guacamole on Ubuntu \ https://github.com/MysticRyuujin/guac-install.git
/pageauc/speed-camera | A Unix, Windows, Raspberry Pi Object Speed Camera using python, opencv, vid \ https://github.com/pageauc/speed-camera.git
/lamw/vmware-scripts | Various scripts for VMware based solutions \ https://github.com/lamw/vmware-scripts.git
/Piker-Alpha/ssdtPRGen | Script to generate a SSDT for Power Management \ https://github.com/Piker-Alpha/ssdtPRGen.sh.git
/smurfix/flask-script | Flask extension to help writing external scripts for Flask applications \ https://github.com/smurfix/flask-script.git
/peewpw/Invoke-WCMDump | PowerShell Script to Dump Windows Credentials from the Credential Manager \ https://github.com/peewpw/Invoke-WCMDump.git
/Mr-Un1k0d3r/RedTeamPowershellScripts | Various PowerShell scripts that may be useful during red team exercise \ https://github.com/Mr-Un1k0d3r/RedTeamPowershellScripts.git
/huacnlee/init | ⚙️ Batch scripts for Rails production environment install on Ubuntu Server. \ https://github.com/huacnlee/init.d.git
/lukebuehler/CShell | A simple, yet powerful, C# scripting IDE and REPL \ https://github.com/lukebuehler/CShell.git
/bhdresh/CVE-2017-0199 | Exploit toolkit CVE-2017-0199 - v4.0 is a handy python script which provide \ https://github.com/bhdresh/CVE-2017-0199.git
/lemnos/theme | A script which lets you set your $terminal theme. \ https://github.com/lemnos/theme.sh.git
/OpenUserJS/OpenUserJS | The home of FOSS user scripts. \ https://github.com/OpenUserJS/OpenUserJS.org.git
/picodotdev/alis | Arch Linux Install Script (or alis, also known as the Arch Linux executable \ https://github.com/picodotdev/alis.git
/JohnSundell/ShellOut | Easily run shell commands from a Swift script or command line tool \ https://github.com/JohnSundell/ShellOut.git
/Unity-Technologies/UnityPlayground | A collection of simple scripts to create 2D physics game, intended for givi \ https://github.com/Unity-Technologies/UnityPlayground.git
/mangoszero/server | Mangos ZERO is a server for World of Warcraft. The server serves full world \ https://github.com/mangoszero/server.git
/mzeryck/Weather-Cal | This is a Scriptable widget that lets you display, position, and format mul \ https://github.com/mzeryck/Weather-Cal.git
/swoodford/aws | A collection of bash shell scripts for automating various tasks with Amazon \ https://github.com/swoodford/aws.git
/bluscreenofjeff/AggressorScripts | Aggressor scripts for use with Cobalt Strike 3.0+ \ https://github.com/bluscreenofjeff/AggressorScripts.git
/lambdaji/tf_repos | TensorFlow Script \ https://github.com/lambdaji/tf_repos.git
/hannob/bashcheck | test script for shellshocker and related vulnerabilities \ https://github.com/hannob/bashcheck.git
/virtio-win/virtio-win-pkg-scripts | Scripts for packaging virtio-win drivers \ https://github.com/virtio-win/virtio-win-pkg-scripts.git
/nikhilk/scriptsharp | Script# Project - a C# to JavaScript compiler, to power your HTML5 and Node \ https://github.com/nikhilk/scriptsharp.git
/GianlucaGuarini/Tocca | Super lightweight script (~1kb) to detect via Javascript events like 'tap'  \ https://github.com/GianlucaGuarini/Tocca.js.git
/nathom/streamrip | A scriptable music downloader for Qobuz, Tidal, SoundCloud, and Deezer \ https://github.com/nathom/streamrip.git
/adafruit/Adafruit_Learning_System_Guides | Programs and scripts to display "inline" in Adafruit Learning System guides \ https://github.com/adafruit/Adafruit_Learning_System_Guides.git
/S3cur3Th1sSh1t/Creds | Some usefull Scripts and Executables for Pentest & Forensics \ https://github.com/S3cur3Th1sSh1t/Creds.git
/Taxel/PlexTraktSync | A python script that syncs the movies, shows and ratings between trakt and  \ https://github.com/Taxel/PlexTraktSync.git
/glenpike/npm-g_nosudo | A shell script which will fix the problem where you want to stop using sudo \ https://github.com/glenpike/npm-g_nosudo.git
/PyroTek3/PowerShell-AD-Recon | PowerShell Scripts I find useful \ https://github.com/PyroTek3/PowerShell-AD-Recon.git
/shirok/Gauche | Scheme Scripting Engine \ https://github.com/shirok/Gauche.git
/Transmode/gradle-docker | A Gradle plugin to build Docker images from the build script. \ https://github.com/Transmode/gradle-docker.git
/cyberark/ACLight | A script for advanced discovery of Privileged Accounts - includes Shadow Ad \ https://github.com/cyberark/ACLight.git
/enigma0x3/Generate-Macro | This Powershell script will generate a malicious Microsoft Office document  \ https://github.com/enigma0x3/Generate-Macro.git
/RyanZim/awesome-npm-scripts | Everything awesome related to npm scripts and using npm as a build tool. \ https://github.com/RyanZim/awesome-npm-scripts.git
/Mr-Un1k0d3r/RedTeamCSharpScripts | C# Script used for Red Team \ https://github.com/Mr-Un1k0d3r/RedTeamCSharpScripts.git
/arnaud-lb/php-memory-profiler | Memory profiler for PHP. Helps finding memory leaks in PHP scripts. \ https://github.com/arnaud-lb/php-memory-profiler.git
/benoror/better-npm-run | ‍♂️ Better NPM scripts runner \ https://github.com/benoror/better-npm-run.git
/robbeofficial/spotifyripper | small ripper script for spotify (rips playlists to mp3 and includes ID3 tag \ https://github.com/robbeofficial/spotifyripper.git
/uhlik/bpy | blender python scripts \ https://github.com/uhlik/bpy.git
/snwh/ubuntu-post-install | A set of post-installation shell scripts for Ubuntu \ https://github.com/snwh/ubuntu-post-install.git
/lynaghk/c2 | Declarative data visualization in Clojure(Script). \ https://github.com/lynaghk/c2.git
/Vimjas/vint | Fast and Highly Extensible Vim script Language Lint implemented in Python. \ https://github.com/Vimjas/vint.git
/K-S-V/Scripts | Collection of my scripts \ https://github.com/K-S-V/Scripts.git
/maaaaz/impacket-examples-windows | The great impacket example scripts compiled for Windows \ https://github.com/maaaaz/impacket-examples-windows.git
/denysdovhan/learnyoubash | Learn you how to write your first bash script \ https://github.com/denysdovhan/learnyoubash.git
/rkadlec/ubuntu-ranking-dataset-creator | A script that creates train, valid and test datasets for the ranking task f \ https://github.com/rkadlec/ubuntu-ranking-dataset-creator.git
/Hopson97/open-builder | Open  "Minecraft-like" game with multiplayer support and Lua scripting supp \ https://github.com/Hopson97/open-builder.git
/dompling/Scriptable | scriptable widget \ https://github.com/dompling/Scriptable.git
/beanshell/beanshell | Beanshell scripting language \ https://github.com/beanshell/beanshell.git
/jamessan/vim-gnupg | This script implements transparent editing of gpg encrypted files. \ https://github.com/jamessan/vim-gnupg.git
/influxdata/flux | Flux is a lightweight scripting language for querying databases (like Influ \ https://github.com/influxdata/flux.git
/DanielEverland/ScriptableObject-Architecture | Makes using Scriptable Objects as a fundamental part of your architecture i \ https://github.com/DanielEverland/ScriptableObject-Architecture.git
/AonCyberLabs/PadBuster | Automated script for performing Padding Oracle attacks \ https://github.com/AonCyberLabs/PadBuster.git
/stank58/Powershell-Scripts | Helpful list of powershell scripts I have found/created \ https://github.com/stank58/Powershell-Scripts.git
/kblin/ncbi-genome-download | Scripts to download genomes from the NCBI FTP servers \ https://github.com/kblin/ncbi-genome-download.git
/corpnewt/MountEFI |  An even more robust edition of my previous MountEFI scripts \ https://github.com/corpnewt/MountEFI.git
/emgram769/lighthouse | A simple scriptable popup dialog to run on X. \ https://github.com/emgram769/lighthouse.git
/Cilex/Cilex | Cilex a lightweight framework for creating PHP CLI scripts inspired by Sile \ https://github.com/Cilex/Cilex.git
/SusmithKrishnan/torghost | TorGhost is an anonymization script. TorGhost redirects all internet traffi \ https://github.com/SusmithKrishnan/torghost.git
/technosophos/dashing | A Dash Generator Script for Any HTML \ https://github.com/technosophos/dashing.git
/RealHacker/python-gems | Beautifully constructed python scripts \ https://github.com/RealHacker/python-gems.git
/unofficial-unifi/unifi-pfsense | A script that installs the UniFi Controller software on pfSense and other F \ https://github.com/unofficial-unifi/unifi-pfsense.git
/ktap/ktap | A lightweight script-based dynamic tracing tool for Linux \ https://github.com/ktap/ktap.git
/jurassiscripts/velociraptor | The npm-style script runner for Deno \ https://github.com/jurassiscripts/velociraptor.git
/daveaglick/Scripty | Tools to let you use Roslyn-powered C# scripts for code generation \ https://github.com/daveaglick/Scripty.git
/d0nkeys/redteam | Red Team Scripts by d0nkeys (ex SnadoTeam) \ https://github.com/d0nkeys/redteam.git
/lamerman/shellpy | A tool for convenient shell scripting in python \ https://github.com/lamerman/shellpy.git
/DBDiff/DBDiff | Compare MySQL databases & automatically create schema & data change scripts \ https://github.com/DBDiff/DBDiff.git
/browserstate/ajaxify | Ajaxify your entire website instantly with this simple drop-in script using \ https://github.com/browserstate/ajaxify.git
/ionic-team/ionic-app-scripts | App Build Scripts for Ionic Projects \ https://github.com/ionic-team/ionic-app-scripts.git
/mgeeky/cobalt-arsenal | My collection of battle-tested Aggressor Scripts for Cobalt Strike 4.0+ \ https://github.com/mgeeky/cobalt-arsenal.git
/pallupz/covid-vaccine-booking | This very basic script can be used to automate some steps on Co-WIN Platfor \ https://github.com/pallupz/covid-vaccine-booking.git
/countercept/python-exe-unpacker | A helper script for unpacking and decompiling EXEs compiled from python cod \ https://github.com/countercept/python-exe-unpacker.git
/med0x2e/GadgetToJScript | A tool for generating .NET serialized gadgets that can trigger .NET assembl \ https://github.com/med0x2e/GadgetToJScript.git
/mspnp/reference-architectures | templates and scripts for deploying Azure Reference Architectures \ https://github.com/mspnp/reference-architectures.git
/maddiestone/IDAPythonEmbeddedToolkit | IDA Python Embedded Toolkit -- IDAPython scripts for automating analysis of \ https://github.com/maddiestone/IDAPythonEmbeddedToolkit.git
/Matt-Fontes/SendScriptWhatsApp | Script para enviar o Roteiro do filme Shrek, linha por linha, no WhatsApp \ https://github.com/Matt-Fontes/SendScriptWhatsApp.git
/michaeljsmith/vim-indent-object | Vim plugin that defines a new text object representing lines of code at the \ https://github.com/michaeljsmith/vim-indent-object.git
/yyuueexxiinngg/some-scripts | Some random scripts \ https://github.com/yyuueexxiinngg/some-scripts.git
/stevejenkins/unifi-linux-utils | Helpful Linux / Unix scripts for admins of Ubiquiti (UBNT) UniFi wireless p \ https://github.com/stevejenkins/unifi-linux-utils.git
/nsmfoo/antivmdetection | Script to create templates to use with VirtualBox to make vm detection hard \ https://github.com/nsmfoo/antivmdetection.git
/GianlucaGuarini/Vague | Vague.js is an experimental script that allows you to blur any kind of html \ https://github.com/GianlucaGuarini/Vague.js.git
/cjacobwade/HelpfulScripts | A collection of random, useful scripts \ https://github.com/cjacobwade/HelpfulScripts.git
/OpenRTMFP/Cumulus | CumulusServer is a complete open source and cross-platform RTMFP server ext \ https://github.com/OpenRTMFP/Cumulus.git
/zaproxy/community-scripts | A collection of ZAP scripts provided by the community - pull requests very  \ https://github.com/zaproxy/community-scripts.git
/0xdeadbeefJERKY/Office-DDE-Payloads | Collection of scripts and templates to generate Office documents embedded w \ https://github.com/0xdeadbeefJERKY/Office-DDE-Payloads.git
/josephkingstone/cobalt_strike_extension_kit | Attempting to be an all in one repo for others' userful aggressor scripts a \ https://github.com/josephkingstone/cobalt_strike_extension_kit.git
/BashSupport/BashSupport | Bash and shell script language support for JetBrains IDEs. Please refer to  \ https://github.com/BashSupport/BashSupport.git
/frizb/Windows-Privilege-Escalation | Windows Privilege Escalation Techniques and Scripts \ https://github.com/frizb/Windows-Privilege-Escalation.git
/mallocator/Elasticsearch-Exporter | A small script to export data from one Elasticsearch cluster into another. \ https://github.com/mallocator/Elasticsearch-Exporter.git
/gcesarmza/curl-android-ios | Static libcurl to be used in Android and iOS apps. Build scripts included.  \ https://github.com/gcesarmza/curl-android-ios.git
/zapty/forever-service | Provision node script as a service via forever, allowing it to automaticall \ https://github.com/zapty/forever-service.git
/geeks-r-us/anbox-playstore-installer | Install script that automates installation of googles playstore in anbox \ https://github.com/geeks-r-us/anbox-playstore-installer.git
/jonathanio/update-systemd-resolved | Helper script for OpenVPN to directly update the DNS settings of a link thr \ https://github.com/jonathanio/update-systemd-resolved.git
/Yuliang-Liu/Curve-Text-Detector | This repository provides train＆test code, dataset, det.&rec. annotation, ev \ https://github.com/Yuliang-Liu/Curve-Text-Detector.git
/godotengine/godot-cpp | C++ bindings for the Godot script API \ https://github.com/godotengine/godot-cpp.git
/tteck/Proxmox | Proxmox Helper Scripts \ https://github.com/tteck/Proxmox.git
/jhlau/doc2vec | Python scripts for training/testing paragraph vectors \ https://github.com/jhlau/doc2vec.git
/panique/php-login-minimal | An extremely minimal login / register script in pure PHP. \ https://github.com/panique/php-login-minimal.git
/vicenteguerra/git-deploy | Php Script for Auto-Pull in server (Using WebHook from GitLab, GitHub and B \ https://github.com/vicenteguerra/git-deploy.git
/caseychu/spotify-backup | A Python script that exports all of your Spotify playlists. \ https://github.com/caseychu/spotify-backup.git
/opendtrace/toolkit | The DTrace Toolkit: A set of scripts for use with DTrace on various systems \ https://github.com/opendtrace/toolkit.git
/yyx990803/register-service-worker | A script to simplify service worker registration with hooks for common even \ https://github.com/yyx990803/register-service-worker.git
/vyos/vyos-build | VyOS image build scripts \ https://github.com/vyos/vyos-build.git
/cloudsec/brootkit | Lightweight rootkit implemented by bash shell scripts v0.10 \ https://github.com/cloudsec/brootkit.git
/numical/script-ext-html-webpack-plugin | Enhances html-webpack-plugin functionality with different deployment option \ https://github.com/numical/script-ext-html-webpack-plugin.git
/trick77/ipset-blacklist | A bash script to ban large numbers of IP addresses published in blacklists. \ https://github.com/trick77/ipset-blacklist.git
/GoogleCloudPlatform/bigquery-utils | Useful scripts, udfs, views, and other utilities for migration and data war \ https://github.com/GoogleCloudPlatform/bigquery-utils.git
/DanielKeep/cargo-script | Cargo script subcommand \ https://github.com/DanielKeep/cargo-script.git
/bigwhite/experiments | Personal code, scripts and config files for experiments \ https://github.com/bigwhite/experiments.git
/eth-p/bat-extras | Bash scripts that integrate bat with various command line tools. \ https://github.com/eth-p/bat-extras.git
/BishopFox/spoofcheck | Simple script that checks a domain for email protections \ https://github.com/BishopFox/spoofcheck.git
/ethanhs/python-wasm | Build scripts and configuration for building CPython for Emscripten \ https://github.com/ethanhs/python-wasm.git
/Sophia-Community/SophiApp | :zap: The most powerful open source tweaker for fine-tuning Windows 10 & Wi \ https://github.com/Sophia-Community/SophiApp.git
/nccgroup/nmap-nse-vulnerability-scripts | NMAP Vulnerability Scanning Scripts \ https://github.com/nccgroup/nmap-nse-vulnerability-scripts.git
/nebula-plugins/gradle-lint-plugin | A pluggable and configurable linter tool for identifying and reporting on p \ https://github.com/nebula-plugins/gradle-lint-plugin.git
/tirthajyoti/Stats-Maths-with-Python | General statistics, mathematical programming, and numerical/scientific comp \ https://github.com/tirthajyoti/Stats-Maths-with-Python.git
/sensepost/kwetza | Python script to inject existing Android applications with a Meterpreter pa \ https://github.com/sensepost/kwetza.git
/Har-Kuun/OneClickDesktop | A one-click script that installs a remote desktop environment on a Linux se \ https://github.com/Har-Kuun/OneClickDesktop.git
/apolloconfig/apollo-build-scripts | Apollo Quick Start Build Scripts \ https://github.com/apolloconfig/apollo-build-scripts.git
/evilbutcher/Quantumult_X | 一些有意思的脚本 Scripts for Quantumult X, Loon, Surge \ https://github.com/evilbutcher/Quantumult_X.git
/ObEngine/ObEngine | 2D Game Engine with Lua Scripting made on top of SFML ! \ https://github.com/ObEngine/ObEngine.git
/RaymiiOrg/bash-http-monitoring | HTTP(s) monitoring webpage via shell script \ https://github.com/RaymiiOrg/bash-http-monitoring.git
/UnityTechnologies/ATerribleKingdom | Scripting the Timeline for games in creative ways. Includes a small RTS gam \ https://github.com/UnityTechnologies/ATerribleKingdom.git
/metosin/spec-tools | Clojure(Script) tools for clojure.spec \ https://github.com/metosin/spec-tools.git
/microsoft/DNS-Challenge | This repo contains the scripts, models, and required files for the Deep Noi \ https://github.com/microsoft/DNS-Challenge.git
/google/palette | Script for generating colour palettes for use with graphs, charts and carto \ https://github.com/google/palette.js.git
/BBVA/kapow | Kapow! If you can script it, you can HTTP it. \ https://github.com/BBVA/kapow.git
/0x4D31/fatt | FATT /fingerprintAllTheThings - a pyshark based script for extracting netwo \ https://github.com/0x4D31/fatt.git
/na--/ebook-tools | Shell scripts for organizing and managing ebook collections \ https://github.com/na--/ebook-tools.git
/m3n0sd0n4ld/uDork | uDork is a script written in Bash Scripting that uses advanced Google searc \ https://github.com/m3n0sd0n4ld/uDork.git
/0vercl0k/stuffz | Basically a script thrift shop \ https://github.com/0vercl0k/stuffz.git
/maaaaz/webscreenshot | A simple script to screenshot a list of websites \ https://github.com/maaaaz/webscreenshot.git
/labbots/google-drive-upload | Bash scripts to upload files to google drive \ https://github.com/labbots/google-drive-upload.git
/Jsitech/JShielder | Hardening Script for Linux Servers/ Secure LAMP-LEMP Deployer/ CIS Benchmar \ https://github.com/Jsitech/JShielder.git
/rbignon/doctoshotgun | Script to automatically book a vaccine slot on Doctolib in the next seven d \ https://github.com/rbignon/doctoshotgun.git
/ArmisSecurity/blueborne | PoC scripts demonstrating the BlueBorne vulnerabilities \ https://github.com/ArmisSecurity/blueborne.git
/yu4u/convnet-drawer | Python script for illustrating Convolutional Neural Networks (CNN) using Ke \ https://github.com/yu4u/convnet-drawer.git
/nnja/new-computer | An extremely opinionated and highly personalized script to set up a new Mac \ https://github.com/nnja/new-computer.git
/emyl/vagrant-triggers | Allow the definition of arbitrary scripts that will run on the host before  \ https://github.com/emyl/vagrant-triggers.git
/leonteale/pentestpackage | a package of Pentest scripts I have made or  commonly use \ https://github.com/leonteale/pentestpackage.git
/aguslr/multibootusb | A collection of GRUB files and scripts that will allow you to create a pend \ https://github.com/aguslr/multibootusb.git
/yonaskolb/Beak | A command line interface for your Swift scripts \ https://github.com/yonaskolb/Beak.git
/padolsey-archive/jquery | jQuery Lint is a simple script you can download and use with jQuery. It wor \ https://github.com/padolsey-archive/jquery.lint--old.git
/harshibar/common-intern | 🤖 A selenium script to automatically apply to software engineering internsh \ https://github.com/harshibar/common-intern.git
/TheWeirdDev/Bluetooth_Headset_Battery_Level | A python script to get battery level from Bluetooth headsets \ https://github.com/TheWeirdDev/Bluetooth_Headset_Battery_Level.git
/wilkerlucio/pathom | Pathom is a Clojure(script) engine for processing EQL requests. \ https://github.com/wilkerlucio/pathom.git
/scaron/prettyphoto | prettyPhoto is a jQuery based lightbox clone. Not only does it support imag \ https://github.com/scaron/prettyphoto.git
/agarciadom/ipwebcam-gst | Simple shell script for using IP Webcam as a V4L2 webcam / sound source \ https://github.com/agarciadom/ipwebcam-gst.git
/n8henrie/pycookiecheat | Borrow cookies from your browser's authenticated session for use in Python  \ https://github.com/n8henrie/pycookiecheat.git
/plyint/encpass | Lightweight solution for using encrypted passwords in shell scripts \ https://github.com/plyint/encpass.sh.git
/alicelieutier/smoothScroll | A teeny tiny smooth scroll script with ease-in-out effect and no jQuery. \ https://github.com/alicelieutier/smoothScroll.git
/The-OpenROAD-Project/OpenLane | OpenLane is an automated RTL to GDSII flow based on several components incl \ https://github.com/The-OpenROAD-Project/OpenLane.git
/cmhughes/latexindent | Perl script to add indentation (leading horizontal space) to LaTeX files. I \ https://github.com/cmhughes/latexindent.pl.git
/kristopolous/TickTick | JSON in your Bash scripts \ https://github.com/kristopolous/TickTick.git
/perusio/nginx_ensite | A script to enable or disable a site in nginx. \ https://github.com/perusio/nginx_ensite.git
/jmcantrell/bashful | A collection of modules to simplify writing bash scripts. \ https://github.com/jmcantrell/bashful.git
/sitespeedio/browsertime | Your browser, your page, your scripts! \ https://github.com/sitespeedio/browsertime.git
/szieke/ScriptCommunicator_serial-terminal | Scriptable cross-platform data terminal which supports: serial port, UDP, T \ https://github.com/szieke/ScriptCommunicator_serial-terminal.git
/thsmi/sieve | Sieve Script Editor \ https://github.com/thsmi/sieve.git
/canix1/ADACLScanner | Repo for ADACLScan.ps1 - Your number one script for ACL's in Active Directo \ https://github.com/canix1/ADACLScanner.git
/Raikia/UhOh365 | A script that can see if an email address is valid in Office365 (user/email \ https://github.com/Raikia/UhOh365.git
/live-keys/livekeys | Livekeys - Automation Platform with support for live scripting. \ https://github.com/live-keys/livekeys.git
/jdhitsolutions/PSScriptTools | :wrench: :hammer: A set of PowerShell functions you might use to enhance yo \ https://github.com/jdhitsolutions/PSScriptTools.git
/edubart/otclient | An alternative tibia client for otserv written in C++11 and Lua, made with  \ https://github.com/edubart/otclient.git
/dapphp/securimage | PHP CAPTCHA Script \ https://github.com/dapphp/securimage.git
/MSEndpointMgr/ConfigMgr | Microsoft Endpoint Configuration Manager scripts and tools \ https://github.com/MSEndpointMgr/ConfigMgr.git
/simonthum/git-sync | Safe and simple one-script git synchronization \ https://github.com/simonthum/git-sync.git
/jobertabma/virtual-host-discovery | A script to enumerate virtual hosts on a server. \ https://github.com/jobertabma/virtual-host-discovery.git
/bigbluebutton/bbb-install | BASH script to install BigBlueButton in 30 minutes. \ https://github.com/bigbluebutton/bbb-install.git
/iros/patternfills | A collection of svg patterns and build scripts that allow utilizing them in \ https://github.com/iros/patternfills.git
/jeremyclark13/automatic-theme-plugin-update | Self hosted plugin and theme update scripts \ https://github.com/jeremyclark13/automatic-theme-plugin-update.git
/ayufan-rock64/linux-build | Rock64 Linux build scripts, tools and instructions \ https://github.com/ayufan-rock64/linux-build.git
/xwmx/bash-boilerplate | A collection of Bash scripts for creating safe and useful command line prog \ https://github.com/xwmx/bash-boilerplate.git
/eworm-de/routeros-scripts | a collection of scripts for MikroTik RouterOS \ https://github.com/eworm-de/routeros-scripts.git
/0xsauby/yasuo | A ruby script that scans for vulnerable & exploitable 3rd-party web applica \ https://github.com/0xsauby/yasuo.git
/emacs-php/php-mode | A powerful and flexible Emacs major mode for editing PHP scripts \ https://github.com/emacs-php/php-mode.git
/mig1984/bashible | Simple bash DSL framework for writing shell scripts safe and agile. \ https://github.com/mig1984/bashible.git
/alpinelinux/aports | [MIRROR] Alpine packages build scripts \ https://github.com/alpinelinux/aports.git
/libretro/glsl-shaders | This repo is for glsl shaders converted by hand from libretro's common-shad \ https://github.com/libretro/glsl-shaders.git
/fsantini/KoboCloud | A set of scripts to synchronize a kobo reader with popular cloud services \ https://github.com/fsantini/KoboCloud.git
/markus-perl/ffmpeg-build-script | The FFmpeg build script provides an easy way to build a static FFmpeg on OS \ https://github.com/markus-perl/ffmpeg-build-script.git
/andrewdavey/cassette | Manages .NET web application assets (scripts, css and templates) \ https://github.com/andrewdavey/cassette.git
/davetron5000/optparse-plus | Start your command line scripts off right in Ruby \ https://github.com/davetron5000/optparse-plus.git
/auth0/nginx-jwt | Lua script for Nginx that performs reverse proxy auth using JWT's \ https://github.com/auth0/nginx-jwt.git
/awslabs/aws-security-automation | Collection of scripts and resources for DevSecOps and Automated Incident Re \ https://github.com/awslabs/aws-security-automation.git
/ovh/venom |  Manage and run your integration tests with efficiency - Venom run executo \ https://github.com/ovh/venom.git
/Jinnrry/RobotHelper | 安卓游戏自动化脚本框架|Automated script for Android games \ https://github.com/Jinnrry/RobotHelper.git
/derekantrican/GAS-ICS-Sync | A Google Apps Script for syncing ICS/ICAL files faster than the current Goo \ https://github.com/derekantrican/GAS-ICS-Sync.git
/chilcote/outset | Automatically process packages, profiles, and scripts during boot, login, o \ https://github.com/chilcote/outset.git
/Naategh/PyCk | A collection of useful Python hacking scripts for beginners \ https://github.com/Naategh/PyCk.git
/Mudlet/Mudlet | ⚔️ A cross-platform, open source, and super fast MUD client with scripting  \ https://github.com/Mudlet/Mudlet.git
/vgel/summarize | A python script for summarizing articles using nltk \ https://github.com/vgel/summarize.py.git
/TheRemote/Ubuntu-Server-raspi4-unofficial | Ubuntu Server 18.04.4 Raspberry Pi 4 Image + Build Script (unofficial) \ https://github.com/TheRemote/Ubuntu-Server-raspi4-unofficial.git
/g0tmi1k/os-scripts | Personal Collection of Operating Systems Scripts \ https://github.com/g0tmi1k/os-scripts.git
/phracker/HopperScripts | Python Scripts for use with Hopper Disassembler \ https://github.com/phracker/HopperScripts.git
/AnasAboureada/Penetration-Testing-Study-Notes | Penetration Testing notes, resources and scripts \ https://github.com/AnasAboureada/Penetration-Testing-Study-Notes.git
/Nefelim4ag/systemd-swap | Script for creating hybrid swap space from zram swaps, swap files and swap  \ https://github.com/Nefelim4ag/systemd-swap.git
/Drovosek01/adobe-packager | Script that allows to download portable installers of different versions Ad \ https://github.com/Drovosek01/adobe-packager.git
/DeppWang/youdaonote-pull |  一个一键导出 / 备份「有道云笔记」所有笔记的 Python 脚本。 A Python script to export/backup all t \ https://github.com/DeppWang/youdaonote-pull.git
/njanakiev/blender-scripting | Introduction to blender scripting \ https://github.com/njanakiev/blender-scripting.git
/JasonGiedymin/nginx-init-ubuntu | Tried and true Nginx init script - got enhancements? Send a pull! \ https://github.com/JasonGiedymin/nginx-init-ubuntu.git
/ropnop/windapsearch | Python script to enumerate users, groups and computers from a Windows domai \ https://github.com/ropnop/windapsearch.git
/masuidrive/miyamoto | Google Apps Scriptで書かれたSlack用勤怠管理Botの「みやもとさん」 \ https://github.com/masuidrive/miyamoto.git
/Ha3MrX/Gemail-Hack | python script for Hack gmail account brute force \ https://github.com/Ha3MrX/Gemail-Hack.git
/jadonk/bonescript | Scripting tools for BeagleBone and PocketBeagle \ https://github.com/jadonk/bonescript.git
/bahamas10/bash-style-guide | A style guide for writing safe, predictable, and portable bash scripts (not \ https://github.com/bahamas10/bash-style-guide.git
/termux/termux-api-package | Termux package containing scripts to call functionality in Termux:API. \ https://github.com/termux/termux-api-package.git
/astorm/pestle | A collection of command line scripts for Magento 2 code generation, and a P \ https://github.com/astorm/pestle.git
/OpenMediaVault-Plugin-Developers/installScript | script that installs omv-extras and openmediavault if not installed already \ https://github.com/OpenMediaVault-Plugin-Developers/installScript.git
/gousiosg/github-mirror | Scripts to mirror Github in a cloudy fashion \ https://github.com/gousiosg/github-mirror.git
/binhex/arch-delugevpn | Docker build script for Arch Linux base with Deluge, Privoxy and OpenVPN \ https://github.com/binhex/arch-delugevpn.git
/voku/anti-xss | ㊙️ AntiXSS | Protection against Cross-site scripting (XSS) via PHP \ https://github.com/voku/anti-xss.git
/Looooong/Unity-SRP-VXGI | Voxel-based Global Illumination using Unity Scriptable Render Pipeline \ https://github.com/Looooong/Unity-SRP-VXGI.git
/inforion/idapython-cheatsheet | Scripts and cheatsheets for IDAPython \ https://github.com/inforion/idapython-cheatsheet.git
/dersvenhesse/awesome-scriptable | A curated list of awesome Scriptable scripts and widgets. \ https://github.com/dersvenhesse/awesome-scriptable.git
/vtereshkov/umka-lang | Umka: a statically typed embeddable scripting language \ https://github.com/vtereshkov/umka-lang.git
/Ventto/mons | POSIX Shell script to quickly manage monitors on X \ https://github.com/Ventto/mons.git
/scheib/chromium-latest-linux | Scripts to download and run the latest Linux build of Chromium.  A substitu \ https://github.com/scheib/chromium-latest-linux.git
/pimlie/ubuntu-mainline-kernel | Bash script for Ubuntu (and derivatives) to easily (un)install kernels from \ https://github.com/pimlie/ubuntu-mainline-kernel.sh.git
/ywolf/F-NAScan | Scanning a network asset information script \ https://github.com/ywolf/F-NAScan.git
/kuitos/import-html-entry | import html and take over the exports from the scripts \ https://github.com/kuitos/import-html-entry.git
/amazon-archives/aws-waf-sample | This repository contains example scripts and sets of rules for the AWS WAF  \ https://github.com/amazon-archives/aws-waf-sample.git
/lework/kainstall | Use shell scripts to install kubernetes(k8s) high availability clusters and \ https://github.com/lework/kainstall.git
/Lembed/Awesome-arduino | A curated list of awesome Arduino hardwares, libraries and softwares with u \ https://github.com/Lembed/Awesome-arduino.git
/Glorf/recipenlg | Set of scripts and notebooks used to produce results visible in RecipeNLG p \ https://github.com/Glorf/recipenlg.git
/Hackplayers/4nonimizer | A bash script for anonymizing the public IP used to browsing Internet, mana \ https://github.com/Hackplayers/4nonimizer.git
/maldevel/PenTestKit | Tools, scripts and tips useful during Penetration Testing engagements. \ https://github.com/maldevel/PenTestKit.git
/f-prime/HTTPLang | A scripting langauge to do HTTP routines.  \ https://github.com/f-prime/HTTPLang.git
/dollarshaveclub/cloudworker | Run Cloudflare Worker scripts locally \ https://github.com/dollarshaveclub/cloudworker.git
/deltaflyer4747/Xiaomi_Yi | Xiaomi Yi Camera settings via python (PC) script \ https://github.com/deltaflyer4747/Xiaomi_Yi.git
/dafthack/MSOLSpray | A password spraying tool for Microsoft Online accounts (Azure/O365). The sc \ https://github.com/dafthack/MSOLSpray.git
/egbertbouman/youtube-comment-downloader | Simple script for downloading Youtube comments without using the Youtube AP \ https://github.com/egbertbouman/youtube-comment-downloader.git
/starhawking/python-terrascript | Create Terraform files using Python scripts. \ https://github.com/starhawking/python-terrascript.git
/chvancooten/BugBountyScanner | A Bash script and Docker image for Bug Bounty reconnaissance. Intended for  \ https://github.com/chvancooten/BugBountyScanner.git
/infochimps-labs/wukong | Ruby on Hadoop: Efficient, effective Hadoop streaming & bulk data processin \ https://github.com/infochimps-labs/wukong.git
/python-geeks/Automation-scripts | Repo for creating awesome automation scripts to make my panda lazier \ https://github.com/python-geeks/Automation-scripts.git
/roboryantron/UnityEditorJunkie | Editor scripts to make working with the Unity Editor better. \ https://github.com/roboryantron/UnityEditorJunkie.git
/anirudhajith/process-wallpaper | Shell and python scripts that set the desktop wallpaper to a word cloud of  \ https://github.com/anirudhajith/process-wallpaper.git
/git-for-windows/build-extra | Additional files and scripts to help build Git for Windows on MSYS2. \ https://github.com/git-for-windows/build-extra.git
/stamparm/fetch-some-proxies | Simple Python script for fetching "some" (usable) proxies \ https://github.com/stamparm/fetch-some-proxies.git
/vscode-shellcheck/vscode-shellcheck | Integrates ShellCheck into VS Code, a linter for Shell scripts. \ https://github.com/vscode-shellcheck/vscode-shellcheck.git
/Falldog/pyconcrete | Protect your python script, encrypt it as .pye and decrypt when import it \ https://github.com/Falldog/pyconcrete.git
/bamarni/symfony-console-autocomplete | Shell autocompletion for Symfony Console based scripts \ https://github.com/bamarni/symfony-console-autocomplete.git
/jobertabma/ground-control | A collection of scripts that run on my web server. Mainly for debugging SSR \ https://github.com/jobertabma/ground-control.git
/TheAMM/mpv_thumbnail_script | A Lua script to show preview thumbnails in mpv's OSC seekbar, sans external \ https://github.com/TheAMM/mpv_thumbnail_script.git
/FlechazoPh/QLDependency | 青龙面板全依赖一键安装脚本 / Qinglong Pannel Dependency Install Scripts. \ https://github.com/FlechazoPh/QLDependency.git
/maddox/magick-installer | ImageMagick installer script because macports sucks \ https://github.com/maddox/magick-installer.git
/Stereobit/dragend | dragend JS – a touch ready, full responsive, content swipe script \ https://github.com/Stereobit/dragend.git
/CensoredUsername/unrpyc | A ren'py script decompiler \ https://github.com/CensoredUsername/unrpyc.git
/TobiasPankner/Teams-Auto-Joiner | Python script to automatically join Microsoft Teams meetings. \ https://github.com/TobiasPankner/Teams-Auto-Joiner.git
/LindseyB/starwars-dot-gif | Python script to generate gifs from star wars \ https://github.com/LindseyB/starwars-dot-gif.git
/gluon/AbletonLive9_RemoteScripts | Unofficial repository for Ableton Live 9 MIDI Remote Scripts by Julien Bayl \ https://github.com/gluon/AbletonLive9_RemoteScripts.git
/upyun/slardar | Updating your upstream list and run lua scripts without reloading Nginx. \ https://github.com/upyun/slardar.git
/graniet/chromebackdoor | Chromebackdoor is a PoC of pentest tool, this tool use a MITB technique for \ https://github.com/graniet/chromebackdoor.git
/ChrisTruncer/PenTestScripts | Scripts that are useful for me on pen tests \ https://github.com/ChrisTruncer/PenTestScripts.git
/cotowali/cotowali | A statically typed scripting language that transpile into POSIX sh \ https://github.com/cotowali/cotowali.git
/twostraws/Brisk | A proof of concept scripting library for Swift \ https://github.com/twostraws/Brisk.git
/YoavRamon/awesome-kaldi | This is a list of features, scripts, blogs and resources for better using K \ https://github.com/YoavRamon/awesome-kaldi.git
