/PuerkitoBio/goquery.git | A little like that j-thing, only in Go. \ https://github.com/PuerkitoBio/goquery.git
/EZLippi/Tinyhttpd.git | Tinyhttpd J. David Blackstone1999 500  Http Server.. \ https://github.com/EZLippi/Tinyhttpd.git
/cappuccino/cappuccino.git | Web Application Framework in JavaScript and Objective-J \ https://github.com/cappuccino/cappuccino.git
/Dujltqzv/Some-Many-Books.git | .. \ https://github.com/Dujltqzv/Some-Many-Books.git
/djhworld/simple-computer.git | the scott CPU from "But How Do It Know?" by J. Clark Scott \ https://github.com/djhworld/simple-computer.git
/lTbgykio/Books-Free-Books.git | .. \ https://github.com/lTbgykio/Books-Free-Books.git
/brunobar79/J-I-C.git | J I C is a Javascript Image Compressor using HTML5 Canvas & File API that a.. \ https://github.com/brunobar79/J-I-C.git
/quickfix-j/quickfixj.git | QuickFIX/J is a full featured messaging engine for the FIX protocol. - This.. \ https://github.com/quickfix-j/quickfixj.git
/DennisMitchell/jellylanguage.git | Jelly is a recreational programming language inspired by J. \ https://github.com/DennisMitchell/jellylanguage.git
/mysql/mysql-connector-j.git | MySQL Connector/J \ https://github.com/mysql/mysql-connector-j.git
/HanochShi/Supplements-ComputerNetworking-ATopDownApproach-7th-ed.git | supplements material of Computer Networking: A Top-Down Approach, 7th ed. (.. \ https://github.com/HanochShi/Supplements-ComputerNetworking-ATopDownApproach-7th-ed.git
/wala/WALA.git | T.J. Watson Libraries for Analysis, with frontends for Java, Android, and J.. \ https://github.com/wala/WALA.git
/mkusner/wmd.git | Word Mover's Distance from Matthew J Kusner's paper "From Word Embeddings t.. \ https://github.com/mkusner/wmd.git
/lkuza2/java-speech-api.git | The J.A.R.V.I.S. Speech API is designed to be simple and efficient, using t.. \ https://github.com/lkuza2/java-speech-api.git
/jsoftware/jsource.git | J engine source mirror \ https://github.com/jsoftware/jsource.git
/markjprice/cs10dotnet6.git | Repository for the Packt Publishing book titled "C# 10 and .NET 6 - Modern .. \ https://github.com/markjprice/cs10dotnet6.git
/markjprice/cs9dotnet5.git | Repository for the Packt Publishing book titled "C# 9 and .NET 5 - Modern C.. \ https://github.com/markjprice/cs9dotnet5.git
/n1nj4sec/pr0cks.git | python script setting up a transparent proxy to forward all TCP and DNS tra.. \ https://github.com/n1nj4sec/pr0cks.git
/mightydeveloper/Deep-Compression-PyTorch.git | PyTorch implementation of 'Deep Compression: Compressing Deep Neural Networ.. \ https://github.com/mightydeveloper/Deep-Compression-PyTorch.git
/mariadb-corporation/mariadb-connector-j.git | MariaDB Connector/J is used to connect applications developed in Java to Ma.. \ https://github.com/mariadb-corporation/mariadb-connector-j.git
/DeepGenX/CodeGenX.git | Code Generation using GPT-J! \ https://github.com/DeepGenX/CodeGenX.git
/dchest/siphash.git | Go implementation of SipHash-2-4, a fast short-input PRF created by Jean-Ph.. \ https://github.com/dchest/siphash.git
/jbarham/cdb.git | Pure Go implementation of D. J. Bernstein's cdb constant database library. \ https://github.com/jbarham/cdb.git
/vicgalle/gpt-j-api.git | API for the GPT-J language model . Including a FastAPI backend and a strea.. \ https://github.com/vicgalle/gpt-j-api.git
/marcamos/jet.git | Its (j)ust (e)leventy and (t)ailwind OK, and a few other things; its st.. \ https://github.com/marcamos/jet.git
/markjprice/cs8dotnetcore3.git | Repository for the Packt Publishing book titled "C# 8.0 and .NET Core 3.0" .. \ https://github.com/markjprice/cs8dotnetcore3.git
/square/pylink.git | Python Library for device debugging/programming via J-Link \ https://github.com/square/pylink.git
/jmtomczak/vae_vampprior.git | Code for the paper "VAE with a VampPrior", J.M. Tomczak & M. Welling \ https://github.com/jmtomczak/vae_vampprior.git
/ValyriaTear/ValyriaTear.git | Open Source J-RPG (Based on the Hero of Allacrost engine) \ https://github.com/ValyriaTear/ValyriaTear.git
/shaohua0116/Multiview2Novelview.git | An official TensorFlow implementation of "Multi-view to Novel view: Synthes.. \ https://github.com/shaohua0116/Multiview2Novelview.git
/Sorosliu1029/Jike-Metro.git | :metro:   SDK \ https://github.com/Sorosliu1029/Jike-Metro.git
/liberalisman/iOS-Interview-Question-Answer.git |  J-Knight  \ https://github.com/liberalisman/iOS-Interview-Question-Answer.git
/Allen-Tildesley/examples.git | Fortran and Python examples to accompany the book "Computer Simulation of L.. \ https://github.com/Allen-Tildesley/examples.git
/fabienbaradel/object_level_visual_reasoning.git | Pytorch Implementation of "Object level Visual Reasoning in Videos", F. Bar.. \ https://github.com/fabienbaradel/object_level_visual_reasoning.git
/shuochsu/DeepVideoDeblurring.git | S. Su, M. Delbracio, J. Wang, G. Sapiro, W. Heidrich, O. Wang. Deep Video D.. \ https://github.com/shuochsu/DeepVideoDeblurring.git
/GRAND-Lab/ARGA.git | This is a TensorFlow implementation of the Adversarially Regularized Graph .. \ https://github.com/GRAND-Lab/ARGA.git
/pjones/effrb.git | Source code for the book Effective Ruby by Peter J. Jones. \ https://github.com/pjones/effrb.git
/sam007961/FastMassSpring.git | Interactive cloth simulator using the method described in the SIGGRAPH pape.. \ https://github.com/sam007961/FastMassSpring.git
/semiosis/prompts.git | A free and open-source curation of prompts for OpenAI's GPT-3/Codex, Eleuth.. \ https://github.com/semiosis/prompts.git
/lejon/TSne.jl.git | Julia port of L.J.P. van der Maaten and G.E. Hintons T-SNE visualisation te.. \ https://github.com/lejon/TSne.jl.git
/manwar/perlweeklychallenge-club.git | Knowledge base for The Weekly Challenge club members using Perl, Raku, Ada,.. \ https://github.com/manwar/perlweeklychallenge-club.git
/Simon-Hohberg/Viola-Jones.git | Python implementation of the face detection algorithm by Paul Viola and Mic.. \ https://github.com/Simon-Hohberg/Viola-Jones.git
/hliyan/jarvis.git | J.A.R.V.I.S - Just Another Rudimentary Verbal Instruction Shell \ https://github.com/hliyan/jarvis.git
/shaohua0116/MMAML-Classification.git | An official PyTorch implementation of Multimodal Model-Agnostic Meta-Learn.. \ https://github.com/shaohua0116/MMAML-Classification.git
/adafruit/Adafruit_Adalink.git | Python wrapper for Segger's J-Link Commander & STMicro STLink V2 to flash v.. \ https://github.com/adafruit/Adafruit_Adalink.git
/dredwardhyde/gpt-neo-fine-tuning-example.git | Fine-Tune EleutherAI GPT-Neo And GPT-J-6B To Generate Netflix Movie Descrip.. \ https://github.com/dredwardhyde/gpt-neo-fine-tuning-example.git
/tcloaa/Deep-Portfolio-Theory.git | Autoencoder framework for portfolio selection (paper published by J. B. Hea.. \ https://github.com/tcloaa/Deep-Portfolio-Theory.git
/JapanExchangeGroup/J-Quants-Tutorial.git | J-Quants-Tutorial \ https://github.com/JapanExchangeGroup/J-Quants-Tutorial.git
/volkerp/fitCurves.git | Python implementation of Philip J. Schneider's "Algorithm for Automatically.. \ https://github.com/volkerp/fitCurves.git
/stevenliu216/Lidar-Odometry-and-Mapping.git | Lidar Odometry and Mapping (J.Zhang et.al). EECS/NAVARCH 568 (Mobile Roboti.. \ https://github.com/stevenliu216/Lidar-Odometry-and-Mapping.git
/wassgha/MirrorOS.git | MirrorOS is an interface for smart mirrors and transparent screens with a J.. \ https://github.com/wassgha/MirrorOS.git
/shaohua0116/demo2program.git | An official TensorFlow implementation of "Neural Program Synthesis from Div.. \ https://github.com/shaohua0116/demo2program.git
/robjhyndman/fpp2-package.git | All data sets required for the examples and exercises in the book "Forecast.. \ https://github.com/robjhyndman/fpp2-package.git
/jvm-graphics-labs/modern-jogl-examples.git | Examples ported in JOGL from "Learning Modern 3D Graphic Programming" by J... \ https://github.com/jvm-graphics-labs/modern-jogl-examples.git
/XIVN1987/MCUProg.git | MCU programmer for J-LINK and DAPLink, using Keil MDK's *.FLM Flashing Algo.. \ https://github.com/XIVN1987/MCUProg.git
/QSFT/Mensa.git | Mensa is a generic, flexible, enhanced, and efficient Java implementation o.. \ https://github.com/QSFT/Mensa.git
/AckslD/nvim-revJ.lua.git | Nvim-plugin for doing the opposite of join-line (J) of arguments written in.. \ https://github.com/AckslD/nvim-revJ.lua.git
/gpeyre/2015-SIGGRAPH-convolutional-ot.git | J. Solomon, F. de Goes, G. Peyr, M. Cuturi, A. Butscher, A. Nguyen, T. Du,.. \ https://github.com/gpeyre/2015-SIGGRAPH-convolutional-ot.git
/riscv/riscv-j-extension.git | Working Draft of the RISC-V J Extension Specification \ https://github.com/riscv/riscv-j-extension.git
/yuxianghao/Alternating-minimization-algorithms-for-hybrid-precoding-in-millimeter-wave-MIMO-systems.git | Simulation codes for "Alternating minimization algorithms for hybrid precod.. \ https://github.com/yuxianghao/Alternating-minimization-algorithms-for-hybrid-precoding-in-millimeter-wave-MIMO-systems.git
/whymarrh/jeopardy-parser.git | Extracts clues from the J! Archive website. \ https://github.com/whymarrh/jeopardy-parser.git
/the-ethan-hunt/B.E.N.J.I..git | B.E.N.J.I.- The Impossible Missions Force's digital assistant \ https://github.com/the-ethan-hunt/B.E.N.J.I..git
/AndyTaylorTweet/Pi-Star_DV_Dash.git | Pi-Star DV Dashboard (Based on works by Hans-J. Barthen (DL5DI) and Kim Hue.. \ https://github.com/AndyTaylorTweet/Pi-Star_DV_Dash.git
/michaelfeathers/jop.git | a gem to add J language array commands to Ruby \ https://github.com/michaelfeathers/jop.git
/dynamicslab/databook_matlab.git | Matlab files with demo code intended as a companion to the book "Data-Drive.. \ https://github.com/dynamicslab/databook_matlab.git
/TheProtaganist/gpt-j.git | A GPT-J API to use with python3 to generate text, blogs, code, and more \ https://github.com/TheProtaganist/gpt-j.git
/codereport/LeetCode.git | Solutions to LeetCode problems in C++, Python, Haskell, APL, Java, Ruby, Ru.. \ https://github.com/codereport/LeetCode.git
/sing-group/deep-learning-colonoscopy.git | Review in Deep Learning for Polyp Detection and Classification in Colonosco.. \ https://github.com/sing-group/deep-learning-colonoscopy.git
/FreebieStock/php-nudity-detector.git | Detect if an image is likely to have porhographic content by counting skin .. \ https://github.com/FreebieStock/php-nudity-detector.git
/Lkruitwagen/solar-pv-global-inventory.git | Repository for machine learning and remote sensing pipeline described in Kr.. \ https://github.com/Lkruitwagen/solar-pv-global-inventory.git
/basveeling/keras-gcnn.git | Roto-reflection equivariant CNNs for Keras as presented in B. S. Veeling, J.. \ https://github.com/basveeling/keras-gcnn.git
/jmtomczak/vae_vpflows.git | Code in PyTorch for the convex combination linear IAF and the Householder F.. \ https://github.com/jmtomczak/vae_vpflows.git
/robjhyndman/fpp3package.git | All data sets required for the examples and exercises in the book "Forecast.. \ https://github.com/robjhyndman/fpp3package.git
/daemontools/daemontools.git | D. J. Bernstein's daemontools \ https://github.com/daemontools/daemontools.git
/markjprice/cs7dotnetcore2.git | Repository for the Packt Publishing book titled "C# 7.1 and .NET Core 2.0" .. \ https://github.com/markjprice/cs7dotnetcore2.git
/Egyras/HeishaMon.git | Panasonic Aquarea air-water H and J series protocol decrypt \ https://github.com/Egyras/HeishaMon.git
/joanbruna/GNN_community.git | Implementation of the paper "Community Detection with Graph Neural Networks.. \ https://github.com/joanbruna/GNN_community.git
/jfahrenkrug/Raphuccino.git | A Cappuccino & Objective-J wrapper for the awesome RaphaelJS vector graphic.. \ https://github.com/jfahrenkrug/Raphuccino.git
/qf6101/topwords.git | Implementation of paper: Deng K, Bol P K, Li K J, et al. On the unsupervise.. \ https://github.com/qf6101/topwords.git
/mlochbaum/ILanguage.git | An interpreter for a J-inspired language \ https://github.com/mlochbaum/ILanguage.git
/mr7495/COVID-CTset.git | Large Covid-19 CT scans dataset from the paper: https://doi.org/10.1016/j.b.. \ https://github.com/mr7495/COVID-CTset.git
/coderplay/concurrent.git | An attempt to implements j.u.c whereby other alogrithms \ https://github.com/coderplay/concurrent.git
/wasidennis/ObjectFlow.git | Implemenation of the paper: "Video Segmentation via Object Flow", Y.-H. Tsa.. \ https://github.com/wasidennis/ObjectFlow.git
/HybridRobotics/MPC-CBF.git | "Safety-Critical Model Predictive Control with Discrete-Time Control Barrie.. \ https://github.com/HybridRobotics/MPC-CBF.git
/esanchezros/quickfixj-spring-boot-starter.git | Spring Boot Starter for QuickFIX/J \ https://github.com/esanchezros/quickfixj-spring-boot-starter.git
/soundcloud/normailize.git | Normalize emails like J.oh.n+sneaky@gmail.com into john@gmail.com \ https://github.com/soundcloud/normailize.git
/topfunky/cappuccino-couchdb.git | A class for working with CouchDB documents from Cappuccino/Objective-J \ https://github.com/topfunky/cappuccino-couchdb.git
/headius/jo.git | Implementation of key Go (lang) features for (J)Ruby \ https://github.com/headius/jo.git
/UZ-SLAMLab/DefSLAM.git | DefSLAM: Tracking and Mapping of Deforming Scenes from Monocular Sequences... \ https://github.com/UZ-SLAMLab/DefSLAM.git
/zjwang11/irvsp.git | Please cite this code: J. Gao, Q. Wu, C. Persson, Z. Wang, Irvsp: To obtain.. \ https://github.com/zjwang11/irvsp.git
/e0r/stm32f103c8t6-jlink.git | C8T6JLINKFW:J-Link STLink V2 compiled Jun 26 2017 10:34:41 \ https://github.com/e0r/stm32f103c8t6-jlink.git
/ece-cohort/Computer-Networking-A-Top-Down-Approach-7th-Edition.git | Material of Computer Networking: A Top-Down Approach, 7th ed. (By J.F. Kuro.. \ https://github.com/ece-cohort/Computer-Networking-A-Top-Down-Approach-7th-Edition.git
/XIVN1987/RTTView.git | SEGGER-RTT Client for J-LINK and DAPLink \ https://github.com/XIVN1987/RTTView.git
/malkomalko/Cappuccino.tmbundle.git | Textmate Bundle for Cappuccino / Objective-J \ https://github.com/malkomalko/Cappuccino.tmbundle.git
/dylewsky/Data_Driven_Science_Python_Demos.git | IPython notebooks with demo code intended as a companion to the book "Data-.. \ https://github.com/dylewsky/Data_Driven_Science_Python_Demos.git
/juxtin/clj-bob.git | The J-Bob proof assistant from The Little Prover in Clojure \ https://github.com/juxtin/clj-bob.git
/Misaka0x2730/RailLink.git | Compact isolated version of J-Link v9. \ https://github.com/Misaka0x2730/RailLink.git
/arrmansa/Basic-UI-for-GPT-J-6B-with-low-vram.git | A repository to run gpt-j-6b on low vram machines (4.2 gb minimum vram for .. \ https://github.com/arrmansa/Basic-UI-for-GPT-J-6B-with-low-vram.git
/kriskowal/tengwarjs.git | A Tengwar (J.R.R.Tolkiens Elvish alphabet) transcriber for ES5 and HTML5 \ https://github.com/kriskowal/tengwarjs.git
/rubyworks/tapout.git | TAP-Y/J Test Harness \ https://github.com/rubyworks/tapout.git
/OptiMaL-PSE-Lab/DeepDock.git | Code related to : O. Mendez-Lucio, M. Ahmad, E.A. del Rio-Chanona, J.K. Weg.. \ https://github.com/OptiMaL-PSE-Lab/DeepDock.git
/IanAWatson/Lilly-Medchem-Rules.git | Implementation of Lilly Medchem Rules - J Med Chem 2012 \ https://github.com/IanAWatson/Lilly-Medchem-Rules.git
/superboubek/QMVC.git | QMVC - Mean value coordinates for quad cages in 3D, reference implementatio.. \ https://github.com/superboubek/QMVC.git
/manjunath5496/AWS-Books.git | "Building software for the cloud requires developing stateless applications.. \ https://github.com/manjunath5496/AWS-Books.git
/zserge/odetoj.git | Rewrite of Arthur Whitney's one-page J interpreter in Rust \ https://github.com/zserge/odetoj.git
/technohippy/rails_on_gae.git | Rails plugin to make rails apps work on GAE/J \ https://github.com/technohippy/rails_on_gae.git
/deezer/w2v_reco_hyperparameters_matter.git | Repository  to reproduce results of "Word2vec applied to Recommendation: Hy.. \ https://github.com/deezer/w2v_reco_hyperparameters_matter.git
/minimaxir/gpt-j-6b-experiments.git | Test prompts for GPT-J-6B and the resulting AI-generated texts \ https://github.com/minimaxir/gpt-j-6b-experiments.git
/AlberTTreblA/ConfigurationSoftwareRuntimeSystem.git |       Qt1. Qt2. .. \ https://github.com/AlberTTreblA/ConfigurationSoftwareRuntimeSystem.git
/Alatius/latin-macronizer.git | Script to automatically mark long vowels in Latin texts. Also optionally pe.. \ https://github.com/Alatius/latin-macronizer.git
/apache/qpid-broker-j.git | Mirror of Apache Qpid Broker-J \ https://github.com/apache/qpid-broker-j.git
/austinsarner/RunKit.git | Animated layout system using Objective-J and Foundation \ https://github.com/austinsarner/RunKit.git
/AckslD/nvim-trevJ.lua.git | Nvim-plugin for doing the opposite of join-line (J) of arguments, powered b.. \ https://github.com/AckslD/nvim-trevJ.lua.git
/matthelb/concorde.git | Concorde is a computer code for the symmetric traveling salesman problem (T.. \ https://github.com/matthelb/concorde.git
/qichaoliu/CNN_Enhanced_GCN.git | Q. Liu, L. Xiao, J. Yang and Z. Wei, "CNN-Enhanced Graph Convolutional Netw.. \ https://github.com/qichaoliu/CNN_Enhanced_GCN.git
/Rogue24/JPBasicPrincipleKit.git | MJiOS \ https://github.com/Rogue24/JPBasicPrincipleKit.git
/Apress/beg-android-games-3ed.git | Source code for 'Beginning Android Games, Third Edition' by Mario Zechner, .. \ https://github.com/Apress/beg-android-games-3ed.git
/mr7495/COVID-CT-Code.git | Fully automated code for Covid-19 detection from CT scans from paper: https.. \ https://github.com/mr7495/COVID-CT-Code.git
/rotoshine/passport-kakao.git | passport.j kakao module \ https://github.com/rotoshine/passport-kakao.git
/jonghough/jlearn.git | Machine Learning Library, written in J \ https://github.com/jonghough/jlearn.git
/AutoML-Research/AutoSF.git | Y. Zhang, Q. Yao, J. Kwok. Bilinear Scoring Function Search for Knowledge G.. \ https://github.com/AutoML-Research/AutoSF.git
/jramoyo/quickfix-messenger.git | Front-end messaging application built on-top of the QuickFIX/J engine \ https://github.com/jramoyo/quickfix-messenger.git
/qzhang95/HSID-CNN.git | Q. Yuan, Q. Zhang, J. Li, H. Shen, and L. Zhang, "Hyperspectral Image Denoi.. \ https://github.com/qzhang95/HSID-CNN.git
/qmarcou/IGoR.git | IGoR is a C++ software designed to infer V(D)J recombination related proces.. \ https://github.com/qmarcou/IGoR.git
/Apress/learn-data-analysis-w-python.git | Source code for 'Learn Data Analysis with Python; by A.J. Henley and Dave W.. \ https://github.com/Apress/learn-data-analysis-w-python.git
/mikessh/migmap.git | HTS-compatible wrapper for IgBlast V-(D)-J mapping tool \ https://github.com/mikessh/migmap.git
/radimspetlik/hr-cnn.git | HR-CNN - Spetlik, R., Franc, V., Cech, J. and Matas, J. (2018) Visual Heart.. \ https://github.com/radimspetlik/hr-cnn.git
/dtrott/fuse4j.git | Re-factor of Fuse-J to support Mac OS X and fork into the background. \ https://github.com/dtrott/fuse4j.git
/qzhang95/PSTCR.git | Q. Zhang, Q. Yuan, J. Li, Z. Li, H. Shen, and L. Zhang, "Thick Cloud and Cl.. \ https://github.com/qzhang95/PSTCR.git
/martin-saurer/jkernel.git | Jupyter Notebook / J Integration \ https://github.com/martin-saurer/jkernel.git
/codereport/jsource.git | J Language Source Code. Livestream links  \ https://github.com/codereport/jsource.git
/dynamicslab/dominant-balance.git | Methods and code for J. L. Callaham, J. N. Kutz, B. W. Brunton, and S. L. B.. \ https://github.com/dynamicslab/dominant-balance.git
/mathiasverraes/jdump.git | J!Dump is a very easy to use debugging extension for Joomla developers and .. \ https://github.com/mathiasverraes/jdump.git
/jakobsj/AIRToolsII.git | The AIR Tools II toolbox for MATLAB accompanies the publication "AIR Tools .. \ https://github.com/jakobsj/AIRToolsII.git
/bburns/arda.git | Maps of J. R. R. Tolkien's Middle Earth using DEM (Digital Elevation Model).. \ https://github.com/bburns/arda.git
/theGrue/jeopardy.git | Play real Jeopardy! games from J-Archive with up to three friends, with the.. \ https://github.com/theGrue/jeopardy.git
/zellio/j-mode.git | Emacs major mode for editing J code. \ https://github.com/zellio/j-mode.git
/iocane/unbox.git | GPL licensed J interpreter \ https://github.com/iocane/unbox.git
/elastic/jarvis.git | Logstash's ChatOps bot, J.A.R.V.I.S. \ https://github.com/elastic/jarvis.git
/remogatto/ffi-inliner.git | Mix C in (J)Ruby and gulp it on the fly! \ https://github.com/remogatto/ffi-inliner.git
/wliusjtu/Robust-Color-Guided-Depth-Map-Restoration.git | Liu, W., Chen, X., Yang, J., & Wu, Q. (2017). Robust color guided depth map.. \ https://github.com/wliusjtu/Robust-Color-Guided-Depth-Map-Restoration.git
/Aalto-CFD/DLBFoam.git | DLBFoam: An open-source dynamic load balancing model for fast reacting flow.. \ https://github.com/Aalto-CFD/DLBFoam.git
/hrsetyono/woocommerce-ongkir.git | Indonesian Shipping Cost (Ongkos Kirim) plugin for WooCommerce. Support JNE.. \ https://github.com/hrsetyono/woocommerce-ongkir.git
/bakerjd99/jacks.git | Consolidated J language code referenced in my blog Analyze the Data not the.. \ https://github.com/bakerjd99/jacks.git
/microsoft/Icebreaker.git | This is the demo code associated with the paper: W. Gong , S. Tschiatschek,.. \ https://github.com/microsoft/Icebreaker.git
/TianGL/CNN-MI-BCI.git | CNN-SAE program for MI-BCI classification. (Based on "Tabar et al-2016-J Ne.. \ https://github.com/TianGL/CNN-MI-BCI.git
/drwuHUST/TLBCI.git | Matlab source code of the paper "D. Wu, X. Jiang, R. Peng, W. Kong, J. Huan.. \ https://github.com/drwuHUST/TLBCI.git
/NVlabs/SNN.git | Matlab code implementation the modified Non Local Means and Bilateral filte.. \ https://github.com/NVlabs/SNN.git
/mahmoudBens/Nomenclature-des-medicaments-en-algerie.git | La nomenclature des mdicaments en Algrie est une collection de donnes co.. \ https://github.com/mahmoudBens/Nomenclature-des-medicaments-en-algerie.git
/abh/djbdns.git | D. J. Bernsteins DNS servers \ https://github.com/abh/djbdns.git
/QuentinAndre/John-Rust-1987-Python.git | Recreation of the "Optimal Replacement of GMC Bus Engines" paper by J. Rust.. \ https://github.com/QuentinAndre/John-Rust-1987-Python.git
/adafruit/Adafruit_nRF51822_Flasher.git | Wrapper for the Segger J-Link or STLink/V2 (via OpenOCD) to flash nRF51822 .. \ https://github.com/adafruit/Adafruit_nRF51822_Flasher.git
/riazn/bms038_analysis.git | Code and additional processed data for manuscript "Tumor and Microenvironme.. \ https://github.com/riazn/bms038_analysis.git
/houchengbin/OpenANE.git | OpenANE: the first Open source framework specialized in Attributed Network .. \ https://github.com/houchengbin/OpenANE.git
/jheinly/streaming_connected_component_discovery.git | This is the code that corresponds to the paper: J. Heinly, J.L. Schnberger.. \ https://github.com/jheinly/streaming_connected_component_discovery.git
/statnmap/user2020_rspatial_tutorial.git | Course material for useR! 2020 Rspatial tutorial by S. Rochette, D. Scott, .. \ https://github.com/statnmap/user2020_rspatial_tutorial.git
/oliverlietz/bd-j.git | free open source tools and documentation around Blu-ray Discs and BD-J \ https://github.com/oliverlietz/bd-j.git
/DLColumbia/DL_forFinance.git | This git repository is based on the work of J.Heaton, N.Polson and J.Witte .. \ https://github.com/DLColumbia/DL_forFinance.git
/JavaIsJavaScript/OCPP-2.0-CP-Simulator.git | OCPP 2.0 Charge Point Simulator | From: https://github.com/nenecmrf/OCPP-J-.. \ https://github.com/JavaIsJavaScript/OCPP-2.0-CP-Simulator.git
/JBZoo-CCK/JBlank.git | J!Blank is Joomla CMS blank template for developers \ https://github.com/JBZoo-CCK/JBlank.git
/eevans/twissandra-j.git | Twissandra-J is an example project, created to learn and demonstrate how to.. \ https://github.com/eevans/twissandra-j.git
/farismismar/Q-Learning-Power-Control.git | Code for the following publication:  F. B. Mismar, J. Choi, and B. L. Evans.. \ https://github.com/farismismar/Q-Learning-Power-Control.git
/shreelock/gbvs.git | Implementation of Graph Based Visual Saliency algorithm by J. Harel, C. Koc.. \ https://github.com/shreelock/gbvs.git
/kkapitan/homebridge-homesung.git | A Homebridge plugin for Samsung SmartTV H and J models with the pairing pro.. \ https://github.com/kkapitan/homebridge-homesung.git
/fabienbaradel/cophy.git | "CoPhy: Counterfactual Learning of Physical Dynamics", F. Baradel, N. Never.. \ https://github.com/fabienbaradel/cophy.git
/theaudience/URL-Shortener.git | Simple URL Shortener for iOS and Mac. Supports cli.gs, redir.ec, bit.ly, j... \ https://github.com/theaudience/URL-Shortener.git
/huaweicloud/trace_generation_rnn.git | This repository contains code for the paper: Bergsma S., Zeyl T., Senderovi.. \ https://github.com/huaweicloud/trace_generation_rnn.git
/FrozenFlame97/NFL-Roster01.git | Baltimore Ravens,BAL QB,Ryan Mallett,28,2011,84,63,85,97,79,20,0.8,2 QB,Joe.. \ https://github.com/FrozenFlame97/NFL-Roster01.git
/blttkgl/DLBFoam-1.0.git | DLBFoam: An open-source dynamic load balancing model for fast reacting flow.. \ https://github.com/blttkgl/DLBFoam-1.0.git
/alanjeffares/elements-of-statistical-learning.git | Documenting my progress as I work through The Elements of Statistical Learn.. \ https://github.com/alanjeffares/elements-of-statistical-learning.git
/danini/multi-h.git | The C++ implementation of Multi-H algorithm, which is a multi-plane fitting.. \ https://github.com/danini/multi-h.git
/apache/qpid-proton-j.git | Mirror of Apache Qpid Proton-J \ https://github.com/apache/qpid-proton-j.git
/apla/atom-jscad.git | Previewing (J)SCAD 3D models inside Atom. \ https://github.com/apla/atom-jscad.git
/ApsaraDB/galaxyglue.git | GalaxyGlue is an extension to MySQL Connector/J 8.0. \ https://github.com/ApsaraDB/galaxyglue.git
/RacecarJ/installRACECARJ.git | Install the ROS stack,  MIT RACECAR Packages, and hardware support on RACEC.. \ https://github.com/RacecarJ/installRACECARJ.git
/StanWarford/pep9.git | Pep/9 assembler and simulator for the textbook Computer Systems, J. Stanley.. \ https://github.com/StanWarford/pep9.git
/Octal450/J-Runner-with-Extras.git | Source code to J-Runner with Extras! Requires the proper support files, pac.. \ https://github.com/Octal450/J-Runner-with-Extras.git
/jlawyerorg/j-lawyer-org.git | Main project containing all submodules for building an entire j-lawyer.org .. \ https://github.com/jlawyerorg/j-lawyer-org.git
/gfrubi/clases-python-cientifico.git | Clases sobre computacin cientfica con Python, usando IPython notebooks. V.. \ https://github.com/gfrubi/clases-python-cientifico.git
/Apophenic/ELM327-OBD-Simulator.git | An OBD2 compliant simulator adhering to the SAE standard J/1979. \ https://github.com/Apophenic/ELM327-OBD-Simulator.git
/interregna/arraylanguage-companies.git | A List of companies that use Array Languages (J, K, APL, q) \ https://github.com/interregna/arraylanguage-companies.git
/keybase/python-salsa20.git | Bindings for the NaCL implementation of Salsa20 and XSalsa20 by D. J. Berns.. \ https://github.com/keybase/python-salsa20.git
/jvani/jarchive-clues.git | Web crawler to collect Jeopardy! clues from https://j-archive.com \ https://github.com/jvani/jarchive-clues.git
/fabienbaradel/glimpse_clouds.git | Pytorch implementation of the paper "Glimpse Clouds: Human Activity Recogni.. \ https://github.com/fabienbaradel/glimpse_clouds.git
/osirislab/xnippet.git | A little tool to execute functions without debugging an entire executable. .. \ https://github.com/osirislab/xnippet.git
/eigenpi/CS2-CPP.git | Minimum-cost maximum-flow. This is a "ported to C++" version of the famous .. \ https://github.com/eigenpi/CS2-CPP.git
/shumpei/jdb.js.git | jdb.js is a framework that helps coding with Indexed Database API (IDB). As.. \ https://github.com/shumpei/jdb.js.git
/smarthomej/addons.git | SmartHome/J addons for openHAB \ https://github.com/smarthomej/addons.git
/Apress/python-graphics.git | Source code for 'Python Graphics' by B.J. Korites \ https://github.com/Apress/python-graphics.git
/jacobwilliams/PowellOpt.git | Optimization algorithms by M.J.D. Powell \ https://github.com/jacobwilliams/PowellOpt.git
/open-jike/jike-sdk.git |  Jike SDK for Node.js / Deno / browser \ https://github.com/open-jike/jike-sdk.git
/FIXimulator/FIXimulator.git | FIXimulator is a Java based FIX trading application built on the open sourc.. \ https://github.com/FIXimulator/FIXimulator.git
/nanki/vim-objj.git | Vim Completion for Objective-J and Cappuccino \ https://github.com/nanki/vim-objj.git
/Apress/beg-artificial-intelligence-w-raspberry-pi.git | Source code for 'Beginning Artificial Intelligence with the Raspberry Pi' b.. \ https://github.com/Apress/beg-artificial-intelligence-w-raspberry-pi.git
/ShudaLi/rgbd_simulation.git | Main reference:Handa, A., Whelan, T., Mcdonald, J., & Davison, A. J. (2014).. \ https://github.com/ShudaLi/rgbd_simulation.git
/manjunath5496/Exam-Study-Material.git | "Develop a passion for learning. If you do, you will never cease to grow." .. \ https://github.com/manjunath5496/Exam-Study-Material.git
/dhoer/docker-flyway.git | Dockerized flyway command-line tool with MySQL (Connector/J) JDBC Driver \ https://github.com/dhoer/docker-flyway.git
/jbarham/primegen.git | Port of D. J. Bernstein's primegen prime number generator to Go \ https://github.com/jbarham/primegen.git
/XIVN1987/DAPCmdr.git | J-LINK Commander like tool for JLink and DAPLink, adding HardFault diagnosi.. \ https://github.com/XIVN1987/DAPCmdr.git
/ioanabica/Counterfactual-Recurrent-Network.git | Code for ICLR 2020 paper: "Estimating counterfactual treatment outcomes ove.. \ https://github.com/ioanabica/Counterfactual-Recurrent-Network.git
/mattjquinn/jcompiler.git | a compiler for the J programming language \ https://github.com/mattjquinn/jcompiler.git
/tartiflop/ojgl.git | An Objective-J wrapper for WebGL \ https://github.com/tartiflop/ojgl.git
/semperos/rankle.git | ALPHA Experiments with data rank and tables in Clojure, inspired by J and Q \ https://github.com/semperos/rankle.git
/luser-dr00g/inca.git | an APL-style array calculator/interpreter in C based on the J-incunabulum, .. \ https://github.com/luser-dr00g/inca.git
/MarkipTheMudkip/in-class-project-2.git | According to all known laws of aviation,     there is no way a bee should b.. \ https://github.com/MarkipTheMudkip/in-class-project-2.git
/tels7ar/resume.git | Resume for Philip J. Hollenback, made of magical Markdown! \ https://github.com/tels7ar/resume.git
/jsoftware/jandroid.git | J for Android \ https://github.com/jsoftware/jandroid.git
/markjprice/cs7dotnetcore.git | Repository for the Packt Publishing book titled "C# 7 and .NET Core" by Mar.. \ https://github.com/markjprice/cs7dotnetcore.git
/jsomers/j-jeopardy.git | A playable version of the j-archive \ https://github.com/jsomers/j-jeopardy.git
/cappuccino/FacebookKit.git | Objective-J Facebook Connect Framework \ https://github.com/cappuccino/FacebookKit.git
/amari/UIKit.git | Port of Apple's UIKit to Cappuccino. Designed for Mobile App development wi.. \ https://github.com/amari/UIKit.git
/JayHeng/imxrt-tool-flash-algo.git | Build tool (IAR, Keil, J-Link) flash algo for i.MXRT | i.MXRTflash.. \ https://github.com/JayHeng/imxrt-tool-flash-algo.git
/ExploreASL/ExploreASL.git | ExploreASL: releases can be found in the main branch or within the releases.. \ https://github.com/ExploreASL/ExploreASL.git
/YingjieYin/Directional-Deep-Embedding-and-Appearance-Learning-for-Fast-Video-Object-Segmentation.git | We propose a directional deep embedding and appearance learning (DDEAL) met.. \ https://github.com/YingjieYin/Directional-Deep-Embedding-and-Appearance-Learning-for-Fast-Video-Object-Segmentation.git
/joomlagerman/joomla.git | The J!German translation team provides German translation for Joomla! \ https://github.com/joomlagerman/joomla.git
/jblang/bbcbasic-z80.git | R.T. Russell's BBC BASIC for Z80, with additional features by J.B. Langston \ https://github.com/jblang/bbcbasic-z80.git
/mathieuaubry/paintingTo3D.git | Painting-to-3D Model Alignment Via Discriminative Visual Elements; M. Aubry.. \ https://github.com/mathieuaubry/paintingTo3D.git
/dinosaure/hxd.git | J'ai plus mal  la tte maintenant \ https://github.com/dinosaure/hxd.git
/tlrobinson/cappruby.git | A proof-of-concept Ruby implementation on top of JavaScript and the Objecti.. \ https://github.com/tlrobinson/cappruby.git
/LongTengDao/j-toml.git | A Node.js implementation of TOML written by LongTengDao. Belong to "Plan J".. \ https://github.com/LongTengDao/j-toml.git
/JvanKatwijk/sdr-j-fm.git | sdr-j fm software \ https://github.com/JvanKatwijk/sdr-j-fm.git
/Apress/pro-html5-with-css-js-multimedia.git | Source code for 'Pro HTML5 with CSS, JavaScript, and Multimedia' by Mark J... \ https://github.com/Apress/pro-html5-with-css-js-multimedia.git
/Ghamry0x1/reliable-transport-protocol.git | Implementing a Reliable Transport Protocol (from J.F. Kurose), using Altern.. \ https://github.com/Ghamry0x1/reliable-transport-protocol.git
/rev22/curve255js.git | Javascript implementation of Curve25519, the elliptic cryptography function.. \ https://github.com/rev22/curve255js.git
/vidjil/vidjil.git | Vidjil -- High-throughput Analysis of V(D)J Immune Repertoire (mirror, plea.. \ https://github.com/vidjil/vidjil.git
/mattn/GooglePlusCommander.git | keybinds for Google+. you can use j/k to scroll, and type 'c' to comment, '.. \ https://github.com/mattn/GooglePlusCommander.git
/JamieHeather/stitchr.git | Stitchr - a Python script to stitch together coding TCR nucleotide sequence.. \ https://github.com/JamieHeather/stitchr.git
/Francesco149/TempleOSGit.git | archive of HOPPY,J OS,LoseThos, SparrowOS,TempleOS exported as formatted pl.. \ https://github.com/Francesco149/TempleOSGit.git
/FourPhonon/FourPhonon.git | Our paper has been accepted at Comput Phys Commun and is available online: .. \ https://github.com/FourPhonon/FourPhonon.git
/jfahrenkrug/CPVideoKit.git | Cappuccino & Objective-J wrapper for the YouTube and Vimeo JavaScript API \ https://github.com/jfahrenkrug/CPVideoKit.git
/vozonsarker/Help-me-get-rid-of-unhumans.git | /* JS */ gapi.loaded_0(function(_){var window=this; var ha,ia,ja,ma,sa,na,t.. \ https://github.com/vozonsarker/Help-me-get-rid-of-unhumans.git
/j-core/jcore-cpu.git | J-Core J2/J32 5 stage pipeline CPU core \ https://github.com/j-core/jcore-cpu.git
/seb-m/jpake.git | Small-subgroup confinement issue in the OpenSSL and OpenSSH implementations.. \ https://github.com/seb-m/jpake.git
/openlanguageprofiles/olp-en-cefrj.git | Open Language Profiles  English profile datasets from CEFR-J \ https://github.com/openlanguageprofiles/olp-en-cefrj.git
/djpine/python-scieng-public.git | Python programs and data files for "Introduction to Python for Science and .. \ https://github.com/djpine/python-scieng-public.git
/Apress/beginning-bazel.git | Source Code for 'Beginning Bazel' by P.J. McNerney \ https://github.com/Apress/beginning-bazel.git
/lloda/ra-ra.git | A C++20 array / expression template library with some J/APL features \ https://github.com/lloda/ra-ra.git
/nondanee/Jike-Bus.git |    SDK for Node.js \ https://github.com/nondanee/Jike-Bus.git
/deepfold/NIPS2017.git | Code for Boomsma W, Frellsen J (2017) Spherical convolutions and their appl.. \ https://github.com/deepfold/NIPS2017.git
/gpeyre/2014-SISC-BregmanOT.git | J-D. Benamou, G. Carlier, M. Cuturi, L. Nenna, G. Peyr. Iterative Bregman .. \ https://github.com/gpeyre/2014-SISC-BregmanOT.git
/parthrbhatt/pyShortUrl.git | URL Shortening lib written in Python. pyShortUrl currently supports url sho.. \ https://github.com/parthrbhatt/pyShortUrl.git
/cappuccino/ojunit.git | OJUnit - Original unit testing framework for Objective-J. Soon to be deprec.. \ https://github.com/cappuccino/ojunit.git
/jonas-schievink/jaylink.git | A Rust library for talking to J-Link USB devices \ https://github.com/jonas-schievink/jaylink.git
/bojanpotocnik/segger-rtt-viewer.git | Python tool for connecting to J-Link RTT Client \ https://github.com/bojanpotocnik/segger-rtt-viewer.git
/tangentstorm/j-talks.git | talks about the j programming language \ https://github.com/tangentstorm/j-talks.git
/RitaAndAurora/ddrm-jfsebastian.git | J.F. Sebastian is a tool that provides new ways to control Deckard's Dream .. \ https://github.com/RitaAndAurora/ddrm-jfsebastian.git
/gpeyre/2014-JMIV-SlicedTransport.git | N. Bonneel, J. Rabin, G. Peyr, H. Pfister. Sliced and Radon Wasserstein Ba.. \ https://github.com/gpeyre/2014-JMIV-SlicedTransport.git
/HC-2016/weighted_DCNN_IQA.git | A tensorflow implementation of the network in "Bosse S, Maniry D, Mller K .. \ https://github.com/HC-2016/weighted_DCNN_IQA.git
/Allen-Tildesley/corrections.git | Corrections to the text of the book "Computer Simulation of Liquids" by Mic.. \ https://github.com/Allen-Tildesley/corrections.git
/gliese1337/vitter-sample.git | Implementation of J. S. Vitter's Method D for sequential random sampling. \ https://github.com/gliese1337/vitter-sample.git
/jsulam/ml-ista.git | Demo for Multi-Layer ISTA and Multi-Layer FISTA algorithms for convolutiona.. \ https://github.com/jsulam/ml-ista.git
/LiuJieShane/UARA.git | J. Liu, X. Tao and J. Lu, "Mobility-Aware Centralized Reinforcement Learnin.. \ https://github.com/LiuJieShane/UARA.git
/imfing/CEIQ.git | :art: Code for "No-Reference Quality Assessment of Contrast-Distorted Image.. \ https://github.com/imfing/CEIQ.git
/eileenrmartin/FiberOpticEarthquakes.git | Scripts and data to recreate figures from the paper "Fiber-optic network ob.. \ https://github.com/eileenrmartin/FiberOpticEarthquakes.git
/GotelliLab/EcoSimR.git | Repository for EcoSimR, by Gotelli, N.J. , Hart E. M. and A.M. Ellison. 201.. \ https://github.com/GotelliLab/EcoSimR.git
/StanWarford/pep8.git | Pep/8 assembler and simulator for the textbook Computer Systems, J. Stanley.. \ https://github.com/StanWarford/pep8.git
/mr7495/covid19.git | Covid-19 and Pneumonia detection from X-ray Images from the paper: https://.. \ https://github.com/mr7495/covid19.git
/sammychl/ng-image-compress.git | compress jpeg or png files using angularjs on client side - using HTML5 Can.. \ https://github.com/sammychl/ng-image-compress.git
/simoneparisotto/TDV-for-image-denoising.git | This is a companion software for the submission: "Higher-Order Total Direct.. \ https://github.com/simoneparisotto/TDV-for-image-denoising.git
/XanderJC/medkit-learn.git | The Medkit-Learn(ing) Environment: Medical Decision Modelling through Simul.. \ https://github.com/XanderJC/medkit-learn.git
/joenali/waterfall.git | waterfall         }         $("body").addClass("noscroll");         c.show(.. \ https://github.com/joenali/waterfall.git
/propublica/data-nicar-2019.git | Nicar ML/NLP workshop by J Kao \ https://github.com/propublica/data-nicar-2019.git
/JaimeJGJG/JARVIS-Python.git | Assistente virtual J.A.R.V.I.S com reconhecimento de voz offline \ https://github.com/JaimeJGJG/JARVIS-Python.git
/gcalmettes/bootstrap-tools.git | Python code for basic bootstrap resampling statistics (paper J Physiol. 201.. \ https://github.com/gcalmettes/bootstrap-tools.git
/gvellut/jncep.git | Simple command-line tool to generate EPUB files for J-Novel Club pre-pub no.. \ https://github.com/gvellut/jncep.git
/jeroenvanbaar/MoralStrategiesFMRI.git | Code accompanying the manuscript: Van Baar, J., Chang, L., & Sanfey, A.G. (.. \ https://github.com/jeroenvanbaar/MoralStrategiesFMRI.git
/EmbodiedVision/emfusion.git | Code for the paper "EM-Fusion: Dynamic Object-Level SLAM With Probabilistic.. \ https://github.com/EmbodiedVision/emfusion.git
/deezer/fastgae.git | Source code from the article "FastGAE: Scalable Graph Autoencoders with Sto.. \ https://github.com/deezer/fastgae.git
/wangx1996/Fast-Ground-Segmentation-Based-on-JPC.git | An implementation on "Shen Z, Liang H, Lin L, Wang Z, Huang W, Yu J. Fast G.. \ https://github.com/wangx1996/Fast-Ground-Segmentation-Based-on-JPC.git
/theletterjwithadot/Ultimate-Config-for-L4D2.git | The Ultimate Left 4 Dead 2 Config (autoexec) by J.  \ https://github.com/theletterjwithadot/Ultimate-Config-for-L4D2.git
/jwdinius/prince-computer-vision.git | work-through of Computer Vision: Models, Learning, and Inference by Simon J.. \ https://github.com/jwdinius/prince-computer-vision.git
/craigsapp/bach-370-chorales.git | 370 Four-part Chorales by J.S. Bach in the Humdrum file format. \ https://github.com/craigsapp/bach-370-chorales.git
/spring-haru/wooldridge.git | A Python package containing 111 data sets of Introductory Econometrics: A M.. \ https://github.com/spring-haru/wooldridge.git
/bhuztez/85.git | Though the Chinese should adore APL, it's FORTRAN they put their money on. .. \ https://github.com/bhuztez/85.git
/mlmarenchino/forecasting.git | An attempt to translate "Forecasting: Principles and Practice" by Rob J Hyn.. \ https://github.com/mlmarenchino/forecasting.git
/chenhongge/treeVerification.git | [NeurIPS 2019] H. Chen*, H. Zhang*, S. Si, Y. Li, D. Boning and C.-J. Hsieh.. \ https://github.com/chenhongge/treeVerification.git
/Louis-T/fernandez-polygon-decomposition.git | An algorithm to decompose polygons with holes from "A practical algorithm f.. \ https://github.com/Louis-T/fernandez-polygon-decomposition.git
/AutoML-Research/S2E.git | Q. Yao, H. Yang, B. Han, G. Niu, J. Kwok. Searching to Exploit Memorization.. \ https://github.com/AutoML-Research/S2E.git
/deepopo/CLF.git | A reproduction of "CLF: Zhang J , Yu P S . Integrated anchor and social lin.. \ https://github.com/deepopo/CLF.git
/RuedigerMoeller/j-text-utils.git | Automatically exported from code.google.com/p/j-text-utils \ https://github.com/RuedigerMoeller/j-text-utils.git
/tsrobinson/10EconometricTheorems.git | Guide to fundamental econometric theorems listed by J. Wooldridge \ https://github.com/tsrobinson/10EconometricTheorems.git
/abo-abo/helm-j-cheatsheet.git | Quick J reference for Emacs \ https://github.com/abo-abo/helm-j-cheatsheet.git
/takuti/incremental-sgd.git | Incremental matrix factorization with incremental SGD algorithm [J. Vinagre.. \ https://github.com/takuti/incremental-sgd.git
/luiscarlosgph/t-Student-Mixture-Models.git | Implementation of the paper: 'Robust mixture modelling using the t distribu.. \ https://github.com/luiscarlosgph/t-Student-Mixture-Models.git
/mrkkrj/TrianglePP.git | C++ wrapper for the original J.P Shevchuk's "Triangle" package  \ https://github.com/mrkkrj/TrianglePP.git
/J-Gravity/j-gravity.git | The official repo for J-Gravity, a project built by students from 42 Fremon.. \ https://github.com/J-Gravity/j-gravity.git
/kwathen/ClinicalTrialSimulation.git | This repo consists of all the R code examples for the simulating adaptive c.. \ https://github.com/kwathen/ClinicalTrialSimulation.git
/quile/Womble.git | Objective-J ORM and Web Framework loosely based on WebObjects/EOF \ https://github.com/quile/Womble.git
/charleywu/gridsearch.git | Wu, C. M., Schulz, E., Speekenbrink, M., Nelson, J. D., & Meder, B. (2018)... \ https://github.com/charleywu/gridsearch.git
/ZhipengPan/polar-coded-SCMA.git | Matlab simulation code for uplink polar coded SCMA system. "Z. Pan, E. Li, .. \ https://github.com/ZhipengPan/polar-coded-SCMA.git
/brunokim/damicore-python.git | damicore-python -- Data-Mining of Code Repositories (DAMICORE) -- is a impl.. \ https://github.com/brunokim/damicore-python.git
/farismismar/Deep-Q-Learning-SON-Perf-Improvement.git | Code for the following publication:  F. B. Mismar, J. Choi, and B. L. Evans.. \ https://github.com/farismismar/Deep-Q-Learning-SON-Perf-Improvement.git
/chaoliu18/RPLVC.git | Project page for the paper: "Liu C, Sun H, Katto J, et al.Learned Video Com.. \ https://github.com/chaoliu18/RPLVC.git
/DosWorld/smallmake.git | Public domain MAKE tool for DOS 16-bit (real mode) and 8086/88 CPU. Designe.. \ https://github.com/DosWorld/smallmake.git
/RendySetiawan/TEST.git | var parent=document.getElementsByTagName("html")[0]; var _body = document.g.. \ https://github.com/RendySetiawan/TEST.git
/jheinly/sfm_duplicate_structure_correction.git | This is the code that corresponds to the paper: J. Heinly, E. Dunn, and J.M.. \ https://github.com/jheinly/sfm_duplicate_structure_correction.git
/Justme0/CLIB.git | The Standard C Library source code used in Visual C++ by P.J. Plauger \ https://github.com/Justme0/CLIB.git
/tetramerFreqs/Binning.git | Scripts required to calculate tetramer frequencies and create input files f.. \ https://github.com/tetramerFreqs/Binning.git
/WagnerLabPapers/Waskom_JNeurosci_2014.git | Analysis repository for Waskom et al., (2014) J Neurosci \ https://github.com/WagnerLabPapers/Waskom_JNeurosci_2014.git
/higham/njhigham-bib.git | BibTeX bibliography for papers, books, EPrints, articles, etc. of Nicholas .. \ https://github.com/higham/njhigham-bib.git
/ymnk/lift-gae-jdo.git | An example of using JDO on Lifweb over GAE/J \ https://github.com/ymnk/lift-gae-jdo.git
/XanderJC/scalable-birl.git | Scalable Bayesian Inverse Reinforcement Learning (ICLR 2021) by Alex J. Cha.. \ https://github.com/XanderJC/scalable-birl.git
/fkluger/vp-linkage.git | Implementation of J-Linkage and T-Linkage for vanishing point estimation. \ https://github.com/fkluger/vp-linkage.git
/tortlab/phase-amplitude-coupling.git | Matlab routines for computing the Modulation Index and Comodulogram, as des.. \ https://github.com/tortlab/phase-amplitude-coupling.git
/MichaelB7/pgn-extract.git | Chess utility to extract data/games from a pgn file by David J. Barnes  \ https://github.com/MichaelB7/pgn-extract.git
/j-core/jcore-soc.git | J-Core SoC Base Platfrom. Top level for FPGA platforms, pulls in CPU, BootR.. \ https://github.com/j-core/jcore-soc.git
/atsushieno/fluidsynth-midi-service.git | Android MIDI Device Service for Android Fluidsynth. Deprecated. See fluidsy.. \ https://github.com/atsushieno/fluidsynth-midi-service.git
/pacificbay/sar.git | Lucid SAR - a parabolic SAR indicator, written in Pine Script, based on sec.. \ https://github.com/pacificbay/sar.git
/Fescron/universal-jlink-adapter.git | 20 pin SWD/JTAG J-Link to 10 pin (0.1" and 0.05") reconfigurable Cortex-M h.. \ https://github.com/Fescron/universal-jlink-adapter.git
/Pascal-J/type-system-j.git | adds an optional type system to J language \ https://github.com/Pascal-J/type-system-j.git
/jerrygaoLondon/RPDNN.git | This repository contains code for the paper "RP-DNN: A Tweet level propagat.. \ https://github.com/jerrygaoLondon/RPDNN.git
/wanttobeno/Tinyhttpd.git | CHttp ServerJ. David Blackstone1999 500 HTTPHttp Serv.. \ https://github.com/wanttobeno/Tinyhttpd.git
/Spirit-of-Oberon/ProjectOberonV4.git | All source texts from book "PROJECT OBERON, The Design of an Operating syst.. \ https://github.com/Spirit-of-Oberon/ProjectOberonV4.git
/chadaeun/weat_replication.git |  replication of Word Embedding Association Test(WEAT), which is suggested i.. \ https://github.com/chadaeun/weat_replication.git
/ishu3101/shortn.git | A command line application written in python that lets you shorten url usin.. \ https://github.com/ishu3101/shortn.git
/ignaciorlando/glaucoma-hemodynamics.git |  This code corresponds to our MICCAI 2018 paper on retinal hemodynamics sim.. \ https://github.com/ignaciorlando/glaucoma-hemodynamics.git
/Shaobinggao/Multi-illuminant-based-color-constancy.git | Combining bottom-up and top-down visual mechanisms for color  constancy und.. \ https://github.com/Shaobinggao/Multi-illuminant-based-color-constancy.git
/alephcomputer/xulu-plus-public.git | the j \ https://github.com/alephcomputer/xulu-plus-public.git
/polwork/Hyperspectral-Image-Denoising-via-Sparse-Representation-and-Low-Rank-Constraint.git | Zhao Y Q, Yang J. Hyperspectral image denoising via sparse representation a.. \ https://github.com/polwork/Hyperspectral-Image-Denoising-via-Sparse-Representation-and-Low-Rank-Constraint.git
/Apress/cpp-20-recipes.git | Source Code for 'C++20 Recipes' by Bruce Sutherland and J. Burton Browning \ https://github.com/Apress/cpp-20-recipes.git
/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book.git | Here you will be able yo find the different datasets mentioned in the third.. \ https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book.git
/trevorbernard/curve25519-java.git | Java port of Matthijs van Duin's implementation of Daniel J Bernstein's Cur.. \ https://github.com/trevorbernard/curve25519-java.git
/vmchale/coronavirus.git | covid-19 data in J \ https://github.com/vmchale/coronavirus.git
/haohsuan2918/DQN_RC_DSA_IOT2019.git | Deep Reinforcement Learning (DRL) based Dynamic Spectrum Access (DSA) using.. \ https://github.com/haohsuan2918/DQN_RC_DSA_IOT2019.git
/lone-wolf-akela/WSGantiAnima1.git | RJ \ https://github.com/lone-wolf-akela/WSGantiAnima1.git
/chuanjing/j-vue-password.git | vue.js vue password j-vue-password javascript html css  \ https://github.com/chuanjing/j-vue-password.git
/bimunlp/introduction-to-computer-science.git | Harvard University CS50, Instructor: David J.Malan, 2017/fall \ https://github.com/bimunlp/introduction-to-computer-science.git
/qzhang95/SSGN.git |  Q. Zhang, Q. Yuan, J. Li, X. Liu, H. Shen, and L. Zhang, "Hybrid Noise Rem.. \ https://github.com/qzhang95/SSGN.git
/utcsilab/deep-jsense.git | Code for Deep J-Sense: Accelerated MRI Reconstruction via Unrolled Alternat.. \ https://github.com/utcsilab/deep-jsense.git
/WilDoane/TDD-JavaScript-Demo.git | This is a programming exercise designed using an approach to instruction th.. \ https://github.com/WilDoane/TDD-JavaScript-Demo.git
/davidmatthews1uvm/2019-IROS.git | Code for D. Matthews, S. Kriegman, C. Cappelle and J. Bongard, "Word2vec to.. \ https://github.com/davidmatthews1uvm/2019-IROS.git
/ThreeNG/linuxfoundation.org.git | linuxfoundation http://feeds2.feedburner.com/Command-line-fu http://steve-j.. \ https://github.com/ThreeNG/linuxfoundation.org.git
/kreem007/-kreem07.git | Adahpxson:1ue8Rv5a Carinfkwob:AX08h4RV Cammiexogzh:kdT2P07u Brittaniengsrn:.. \ https://github.com/kreem007/-kreem07.git
/studiawan/data-compression.git | Source code collections from Data Compression Book by M. Nelson and J.L. Ga.. \ https://github.com/studiawan/data-compression.git
/pilhuhn/hawkfx.git | Hawkular explorer written in (J)Ruby with a JavaFX frontend. \ https://github.com/pilhuhn/hawkfx.git
/pablobarbera/NYU-AD-160J.git | Recitation materials for the NYU-Abu Dhabi course "Social Media and Politic.. \ https://github.com/pablobarbera/NYU-AD-160J.git
/dynamicslab/langevin-regression.git | Code for "Nonlinear stochastic modeling with Langevin regression" J. L. Cal.. \ https://github.com/dynamicslab/langevin-regression.git
/modelica-3rdparty/SystemDynamics.git | Free library for modeling according to the principles of system dynamics of.. \ https://github.com/modelica-3rdparty/SystemDynamics.git
/j-core/j-core-ice40.git | J-core SOC for ice40 FPGA \ https://github.com/j-core/j-core-ice40.git
/Chosko/img-face-detection.git | Implementation of the Robust Real-Time Face Detection of Paul Viola and Mic.. \ https://github.com/Chosko/img-face-detection.git
/mlochbaum/JtoLaTeX.git | Write LaTeX-formatted documents using J evaluation \ https://github.com/mlochbaum/JtoLaTeX.git
/ibid-11962/jkrowling-official-website.git | A fan preservation of J.K. Rowling's interactive flash website (2004-2012) \ https://github.com/ibid-11962/jkrowling-official-website.git
/gloggi/qualix.git | Webapp zur Erfassung und Verwaltung von qualifikationsrelevanten Beobachtun.. \ https://github.com/gloggi/qualix.git
/ejhumphrey/dl4mir-dissertation.git | Humphrey, E. J. "An Exploration of Deep Learning in Music Informatics." (20.. \ https://github.com/ejhumphrey/dl4mir-dissertation.git
/Limegrass/Wanicchou.git | WIP Online J-J Dictionary Android App with Anki Support - Essentially archi.. \ https://github.com/Limegrass/Wanicchou.git
/erikhom/aida.git | Code for the Adaptive Image Deconvolution Algorithm (AIDA) of Hom et al. (2.. \ https://github.com/erikhom/aida.git
/jbovee/j-archive-parser.git | Using Python to parse jeopardy answers and info about them from pages on j-.. \ https://github.com/jbovee/j-archive-parser.git
/moble/spherical.git | Evaluate and transform D matrices, 3-j symbols, and (scalar or spin-weighte.. \ https://github.com/moble/spherical.git
/qichaoliu/MSSG-UNet.git | Q. Liu, L. Xiao, J. Yang and Z. Wei, "Multilevel Superpixel Structured Grap.. \ https://github.com/qichaoliu/MSSG-UNet.git
/emitanaka/SydneyThesisTemplate.git | Rmarkdown thesis template adapted from Rob J Hyndman for University of Sydn.. \ https://github.com/emitanaka/SydneyThesisTemplate.git
/tymc7/impeachment-timeline.git | Timeline of events that lead to the impeachment of Donald J. Trump  \ https://github.com/tymc7/impeachment-timeline.git
/vogdb/neural-systems-modeling-exercises.git | Exercises of the book Tutorial on Neural Systems Modeling by Thomas J. Anas.. \ https://github.com/vogdb/neural-systems-modeling-exercises.git
/ZZQzzq/SG-FCN.git | M.J. Sun, Z.Q. Zhou, Q. H. Hu, and Z. Wang, SG-FCN: A Motion and Memory-Bas.. \ https://github.com/ZZQzzq/SG-FCN.git
/pbl64k/gpif-idris.git | Translation of Agda code in A. Lh and J. P. Magalhes *Generic Programming.. \ https://github.com/pbl64k/gpif-idris.git
/sofyansitorus/Woongkir.git | WooCommerce shipping rates calculator for Indonesia domestic and internatio.. \ https://github.com/sofyansitorus/Woongkir.git
/jmaces/robust-nets.git | Official implementation of the paper "Solving Inverse Problems With Deep Ne.. \ https://github.com/jmaces/robust-nets.git
/smidm/Singular-Value-Decomposition.git | Quick singular value decomposition as described by: A. McAdams, A. Selle, R.. \ https://github.com/smidm/Singular-Value-Decomposition.git
/CAPRDZV/Capsulepaper.git |  Hinton  Matrix capsules with EM routing - Hinton, G. E., Sabour, S. .. \ https://github.com/CAPRDZV/Capsulepaper.git
/Forexware/quickfixs.git | A Scala wrapper for Quickfix/J \ https://github.com/Forexware/quickfixs.git
/physical-computation/sunflower-embedded-system-emulator.git | Sunflower Full-System Hardware Emulator and Physical System Simulator for S.. \ https://github.com/physical-computation/sunflower-embedded-system-emulator.git
/PHSix/faster.nvim.git | A neovim plugin to accelerate j or k moving. \ https://github.com/PHSix/faster.nvim.git
/repseqio/repseqio.git | Utils for manipulations with RepSeq data. First step: utils to build V/D/J/.. \ https://github.com/repseqio/repseqio.git
/wangfeng22/CIHC-2019.git |    nsF5 UERD J-UNIWARD () \ https://github.com/wangfeng22/CIHC-2019.git
/jmandel/ansible-ccda.git | Automated installer for Direct J-RI + SMART reDirect, to support secure e-m.. \ https://github.com/jmandel/ansible-ccda.git
/markjprice/cs11dotnet7.git | Repository for the Packt Publishing book titled "C# 11 and .NET 7 - Modern .. \ https://github.com/markjprice/cs11dotnet7.git
/tanzby/ParametricCurve.git | Implement of Philip J. Schneider's "An Algorithm for Automatically Fitting .. \ https://github.com/tanzby/ParametricCurve.git
/daemonPainter/Matlab-ICP.git | A compilation of Matlab scripts and function to compute Iterative Closest P.. \ https://github.com/daemonPainter/Matlab-ICP.git
/inkandswitch/interactive-shape-recognition.git | Implementaion of "A Simple Approach to Recognise Geometric Shapes Interacti.. \ https://github.com/inkandswitch/interactive-shape-recognition.git
/KarthikJRao/MICA_AMMA_PGP-2.git | AMMA Hands on Exercises, Assignments, Class Exercises [Karthik J Rao 201601.. \ https://github.com/KarthikJRao/MICA_AMMA_PGP-2.git
/jesuschristsuperstar/php_ncurses.git | This library is a refactor of J Randolph Smith's 2007 nDialog class. Fully .. \ https://github.com/jesuschristsuperstar/php_ncurses.git
/grahamoverby/Godot-Open-Dialogue-Expansion.git | This is my branch of J.Sena's project Godot Open Dialogue, a JSON-based non.. \ https://github.com/grahamoverby/Godot-Open-Dialogue-Expansion.git
/vaseline555/Algorithms-for-Optimization-Python.git | Unofficial implementation in Python porting of the book "Algorithms for Opt.. \ https://github.com/vaseline555/Algorithms-for-Optimization-Python.git
/JoseRZapata/MultiFeatureBeatTracking.git | Matlab implementation of the: J.R. Zapata, M. Davies and E. Gmez, "Multi-f.. \ https://github.com/JoseRZapata/MultiFeatureBeatTracking.git
/stefaniafresca/POD-DL-ROM.git | Source code for POD-DL-ROM: enhancing deep learning-based reduced order mod.. \ https://github.com/stefaniafresca/POD-DL-ROM.git
/iTenis/iTennis-Lopts.git | [1]PXEEFI/UEFI [2]PXE [3] [4]Bond [5.. \ https://github.com/iTenis/iTennis-Lopts.git
/mrcarlberg/objj-runtime.git | Runtime for Objective-J language \ https://github.com/mrcarlberg/objj-runtime.git
/Pascal-J/Jfire.git | Arrayfire bindings for J language \ https://github.com/Pascal-J/Jfire.git
/cappuccino/objjc.git | JavaScript and Objective-J compiler \ https://github.com/cappuccino/objjc.git
/warner/python-jpake.git | J-PAKE password-authenticated key exchange (pure-python library) \ https://github.com/warner/python-jpake.git
/lewisli/QUSS.git | Companion code for Scheidt, C,  Li, L, and Caers, J. K.  Quantifying Uncert.. \ https://github.com/lewisli/QUSS.git
/ojmakhura/hdbscan.git | This is an implementation of the hdbscan algorithm RICARDO J. G. B. CAMPELL.. \ https://github.com/ojmakhura/hdbscan.git
/jueyang/know-your-tools.git | Familiarize yourself with GitHub and CLI and be happy. (CUNY-J teaching 201.. \ https://github.com/jueyang/know-your-tools.git
/spullara/gpt-j-6b.git | Dockerfile and web server for running GPT-J-6B on AWS GPU instances \ https://github.com/spullara/gpt-j-6b.git
/cappuccino/objective-j-package.git | Objective-J CommonJS package, for source code visit http://github.com/280no.. \ https://github.com/cappuccino/objective-j-package.git
/mstashev/Jarvis.git | Building a J.A.R.V.I.S.-like app with applescript \ https://github.com/mstashev/Jarvis.git
/malyn/sg-cdb.git | Java version of D.J. Bernstein's constant database (cdb) library. \ https://github.com/malyn/sg-cdb.git
/shoya140/MEMELogger-iOS-developers.git | Sensor logging application on J!NS MEME for Developers \ https://github.com/shoya140/MEMELogger-iOS-developers.git
/Fei0906/InSAR-Time-Series-Analysis-Fitting.git | Code and test data for the paper: Liu, F., Elliott, J. R., Craig, T. J., Ho.. \ https://github.com/Fei0906/InSAR-Time-Series-Analysis-Fitting.git
/ncsu-statistics/applied-regression-with-R.git | Linear Models With R and Extending the Linear Model with R: Generalized Lin.. \ https://github.com/ncsu-statistics/applied-regression-with-R.git
/WalrusRPG/WalrusRPG.git | A cross-platform J-RPG engine \ https://github.com/WalrusRPG/WalrusRPG.git
/manjunath5496/999-Computer-Books.git | "Programmers are not to be measured by their ingenuity and their logic but .. \ https://github.com/manjunath5496/999-Computer-Books.git
/Valexandre/zones_meteo.git | Comment j'ai quantifi les ingalits de traitement mtorologiques entre V.. \ https://github.com/Valexandre/zones_meteo.git
/ahmed-rashed/FerreiraCodes_Improved.git | Improved version of the codes accompanying the book "A. J. M. Ferreira, MAT.. \ https://github.com/ahmed-rashed/FerreiraCodes_Improved.git
/StanWarford/pep9suite.git | Pep9Suite is a suite of software for the Pep/9 virtual machine described in.. \ https://github.com/StanWarford/pep9suite.git
/patrickleboutillier/jcscpu-hmc.git | Hybrid implementation, using SN74HC chips and Arduinos, of the computer des.. \ https://github.com/patrickleboutillier/jcscpu-hmc.git
/Shadowfiend/ojspec.git | An RSpec-like BDD library for unit testing Objective-J \ https://github.com/Shadowfiend/ojspec.git
/VincentToups/jkmeans.git | An implementation of the clustering algorithm k-means in J. \ https://github.com/VincentToups/jkmeans.git
/haya14busa/vim-signjk-motion.git | :shoe: j/k motion with Hit-A-Hint  \ https://github.com/haya14busa/vim-signjk-motion.git
/rasbt/Hbind.git | Calculates hydrogen-bond interaction tables for protein-small molecule comp.. \ https://github.com/rasbt/Hbind.git
/steve71/MAX31856.git | Raspberry Pi Python Library for new MAX31856 (Precision Thermocouple to Dig.. \ https://github.com/steve71/MAX31856.git
/Computational-Discovery-on-Jupyter/Computational-Discovery-on-Jupyter.git | Computational Discovery on Jupyter Open Educational Resource by Neil J. Cal.. \ https://github.com/Computational-Discovery-on-Jupyter/Computational-Discovery-on-Jupyter.git
/inajob/toICN.git | ChordWiki, U-FRET, .me, J-Total Music! InstaChordICN.. \ https://github.com/inajob/toICN.git
/GitWR/Depth_Map_Upsampling_TOF.git | This is a matlab implementation of J.Park's work "High Quality Depth Map Up.. \ https://github.com/GitWR/Depth_Map_Upsampling_TOF.git
/davisml/chinchilla.git | Chinchilla is a modern web server framework based on Objective-J \ https://github.com/davisml/chinchilla.git
/Philliec459/Jupyter-Notebooks_for-Characterization-of-a-New-Open-Source-Carbonate-Reservoir-Benchmarking-Case-St.git | We have used the new hierarchical carbonate reservoir benchmarking case stu.. \ https://github.com/Philliec459/Jupyter-Notebooks_for-Characterization-of-a-New-Open-Source-Carbonate-Reservoir-Benchmarking-Case-St.git
/duff/vim-bufonly.git | Christian J. Robinson's plugin to unload all buffers but the current one. \ https://github.com/duff/vim-bufonly.git
/somePythonProgrammer/JARVIS.git | J.A.R.V.I.S is an AI personal assistant made in python. (It works offline!) \ https://github.com/somePythonProgrammer/JARVIS.git
/hezw2016/CDN_MRF.git | Testing code for CDN_MRF: Z. He, S. Tang, J. Yang, Y. Cao, M. Y. Yang, and .. \ https://github.com/hezw2016/CDN_MRF.git
/HlG4399/FRSVT.git | I implemented the fllowing article by Matlab.Refrence:Oh T H, Matsushita Y,.. \ https://github.com/HlG4399/FRSVT.git
/kohsuke/jinterop-proxy.git | Type-safe proxy for J-Interop \ https://github.com/kohsuke/jinterop-proxy.git
/g-ar/jsim.git | simulations in J \ https://github.com/g-ar/jsim.git
/afaerber/jlink.git | Tools for interfacing with Segger J-Link OB on Renesas RX62N Demonstration .. \ https://github.com/afaerber/jlink.git
/oskar-j/awesome-auto-ml.git | Awesome list of AutoML frameworks - curated by @oskar-j \ https://github.com/oskar-j/awesome-auto-ml.git
/nanshiki/DOSVAXJ3.git | DOSBox AX, J-3100,DOS/V  \ https://github.com/nanshiki/DOSVAXJ3.git
/doublec/jsj.git | J Interpreter written in JavaScript \ https://github.com/doublec/jsj.git
/hamsteri15/COVID19.git | Input files for reproducing simulations in https://doi.org/10.1016/j.ssci.2.. \ https://github.com/hamsteri15/COVID19.git
/MatthewBarker/hash-string.git | A string hashing function based on Daniel J. Bernstein's popular 'times 33'.. \ https://github.com/MatthewBarker/hash-string.git
/vmchale/j-hs.git | Call J from Haskell \ https://github.com/vmchale/j-hs.git
/peportier/jelm.git | Extreme Learning Machine in J \ https://github.com/peportier/jelm.git
/sordina/japl.git | Font for turning J into APL \ https://github.com/sordina/japl.git
/Vanka0051/speech_enhancement.git | speech enhancement using DNN: [1] Xu, Y., Du, J., Dai, L.R. and Lee, C.H., .. \ https://github.com/Vanka0051/speech_enhancement.git
/lydonchandra/jzerocopy.git | Investigating the zero copy performance, forked from http://www.ibm.com/dev.. \ https://github.com/lydonchandra/jzerocopy.git
/cc7768/RecMacroTheoryFigures.git | This repository replicates the figures from the 3rd edition of the book "Re.. \ https://github.com/cc7768/RecMacroTheoryFigures.git
/SASfit/SASfit.git | A curve fitting program for small-angle scattering curves, mostly from SAXS.. \ https://github.com/SASfit/SASfit.git
/Shadowfiend/Strophe.j.git | An Objective-J wrapper around the strophe.js XMPP library. \ https://github.com/Shadowfiend/Strophe.j.git
/WHU-lab/Medical-Image-Fusion.git | Li X, Guo X, Han P, et al. Laplacian Re-Decomposition for Multimodal Medica.. \ https://github.com/WHU-lab/Medical-Image-Fusion.git
/Processus-Thief/ProcBinder.git | Un simple client-serveur avec connexions gres via Socket. Le client est .. \ https://github.com/Processus-Thief/ProcBinder.git
/Hoshiningen/depixelization.git | An (incomplete) modern C++ implementation of Depixelizing Pixel Art by J. K.. \ https://github.com/Hoshiningen/depixelization.git
/EdwinYam/J-Net.git | J-Net is aimed for audio separation with randomly weighted encoder. \ https://github.com/EdwinYam/J-Net.git
/VE-FORBRYDERNE/mtj-softtuner.git | Create soft prompts for fairseq 13B dense, GPT-J-6B and GPT-Neo-2.7B for fr.. \ https://github.com/VE-FORBRYDERNE/mtj-softtuner.git
/CharlieHouse/RPi_SISO_ANC.git | This is the accompanying code repository to the publication by C.House and .. \ https://github.com/CharlieHouse/RPi_SISO_ANC.git
/Abhay64/KDJ-Indicator.git | KDJ indicator is an extension of Stochastic oscillator. KDJ has been develo.. \ https://github.com/Abhay64/KDJ-Indicator.git
/epignatelli/discovering-reinforcement-learning-algorithms.git | A Jax/Stax implementation of the general meta learning paper: Oh, J., Hesse.. \ https://github.com/epignatelli/discovering-reinforcement-learning-algorithms.git
/kit-susi/quantile-index.git | Source code and test data for "The Quantile Index -- Succinct Self-Index fo.. \ https://github.com/kit-susi/quantile-index.git
/mafe72/NESPi-Fan-Control-Board.git | This is a temperature control board for the RetroFlag NESPi-4 Case, SNESPi .. \ https://github.com/mafe72/NESPi-Fan-Control-Board.git
/JohnCremona/ecdata.git | Data files containing the Cremona Database of all elliptic curves over Q of.. \ https://github.com/JohnCremona/ecdata.git
/swati1024/torrents.git | Skip to content   Search All gists Back to GitHub Sign in Sign up Instantl.. \ https://github.com/swati1024/torrents.git
/andreaskweber/php-junit-merge.git | PHP J-Unit XML File Merger \ https://github.com/andreaskweber/php-junit-merge.git
/PikalaxALT/pokekuristaru.git | Disassembly of Pokemon Crystal (J) \ https://github.com/PikalaxALT/pokekuristaru.git
/sahilsehwag/FuzzyKNN.git | Python implementation of  "A Fuzzy K-nearest Neighbor Algorithm by J.M Kell.. \ https://github.com/sahilsehwag/FuzzyKNN.git
/rururutan/mdz80.git | Manbow-J Disassembler for Z80 \ https://github.com/rururutan/mdz80.git
/sociocom/MedNER-J.git | Latest version of MedEX/J (Japanese disease name extractor) \ https://github.com/sociocom/MedNER-J.git
/Apress/java-ee-web-app-primer.git | Source code for 'Java EE Web Application Primer' by Dave Wolf and A.J. Henl.. \ https://github.com/Apress/java-ee-web-app-primer.git
/natemartinsf/CappTutorials.net.git | Community-run tutorial site for Cappuccino and Objective-J \ https://github.com/natemartinsf/CappTutorials.net.git
/locklin/j-zeromq.git | j-zeromq \ https://github.com/locklin/j-zeromq.git
/eclair4151/samsung_encrypted_POC.git |  A proof of concept to pair and send commands to H and J series Samsung TVs \ https://github.com/eclair4151/samsung_encrypted_POC.git
/GoodhillLab/neural-assembly-detection.git | Code published with the paper J. Mlter, L. Avitan, and G. J. Goodhill. "De.. \ https://github.com/GoodhillLab/neural-assembly-detection.git
/qichaoliu/Content_Guided_CNN.git | Q. Liu, L. Xiao, J. Yang and J. C. Chan, "Content-Guided Convolutional Neur.. \ https://github.com/qichaoliu/Content_Guided_CNN.git
/bakerjd99/jod.git | jod distribution source with commented versions in (jodijs) - tracks J Pacm.. \ https://github.com/bakerjd99/jod.git
/EIDOSlab/simplify.git | Simplification of pruned models for accelerated inference | SoftwareX https.. \ https://github.com/EIDOSlab/simplify.git
/danstutzman/online-ruby-tutor.git | Adapted from OnlinePythonTutor by Philip J. Guo \ https://github.com/danstutzman/online-ruby-tutor.git
/Joe-Lyu/J.A.R.V.I.S-project.git | A decent attempt to recreate J.A.R.V.I.S. from MCU's Iron Man. \ https://github.com/Joe-Lyu/J.A.R.V.I.S-project.git
/unstable-zeros/dl-mpc-sls.git | Code needed to reproduce the examples found in the various works published .. \ https://github.com/unstable-zeros/dl-mpc-sls.git
/rgrove/yuitweets.git | :skull: A Bayesian tweet classifier that can learn the difference between t.. \ https://github.com/rgrove/yuitweets.git
/AlexanderAA/haskell-contract-valuation.git | Another (simplified) reimplementation of financial contract combinator libr.. \ https://github.com/AlexanderAA/haskell-contract-valuation.git
/andrimne/JWithATwist.git | A twisted version of J written in F# \ https://github.com/andrimne/JWithATwist.git
/vim-scripts/HJKL.git | Use H,J,K,L to explore maze \ https://github.com/vim-scripts/HJKL.git
/AlacrisIO/legicash-facts.git | Fast Cryptocurrency Transactions, Securely (https://j.mp/FaCTS) \ https://github.com/AlacrisIO/legicash-facts.git
/tangentstorm/mandelbrowse.git | A visual Mandelbrot set explorer written in J \ https://github.com/tangentstorm/mandelbrowse.git
/ZippyMagician/ayr.git | A toy array language inspired by J, K, and APL. \ https://github.com/ZippyMagician/ayr.git
/patrickleboutillier/jcscpu.git | Logical implementation, in Perl and Go, of the computer described in J. Cla.. \ https://github.com/patrickleboutillier/jcscpu.git
/XanaduAI/fockgaussian.git | This repository contains the source code used to produce the results presen.. \ https://github.com/XanaduAI/fockgaussian.git
/felipewind/fix-trading-simulator.git | A trading simulator between a Broker and a Stock Exchange using the Financi.. \ https://github.com/felipewind/fix-trading-simulator.git
/ashwindcruz/perceptual-loss-style-transfer.git | Tensorflow Implementation: Johnson, J., Alahi, A. and Fei-Fei, L., 2016, Oc.. \ https://github.com/ashwindcruz/perceptual-loss-style-transfer.git
/pierremegevand/modulation_index.git | Computes the modulation index, a metric for phase-amplitude coupling (Tort .. \ https://github.com/pierremegevand/modulation_index.git
/codeofvenom/pdomvc.git | Simple Framework PHP for CRUD using MVC(Model-Viewer-Controller) ,PDO and B.. \ https://github.com/codeofvenom/pdomvc.git
/qzhang95/SAR-DRN.git | Q. Zhang, Q. Yuan, J. Li, Z. Yang, and X. Ma, "Learning a Dilated Residual .. \ https://github.com/qzhang95/SAR-DRN.git
/HybridRobotics/CBF-Pointwise-Feasibility.git | "Safety-Critical Control using Optimal-decay Control Barrier Functions with.. \ https://github.com/HybridRobotics/CBF-Pointwise-Feasibility.git
/mikebianco/locally-sparse-tomography.git | Locally sparse travel time tomography (LST) is a tomography algorithm which.. \ https://github.com/mikebianco/locally-sparse-tomography.git
/niaid/covid19-time-resolved.git | This repository consists of scripts and workflows used for generating resul.. \ https://github.com/niaid/covid19-time-resolved.git
/Kelta-King/Project-AI-AR.git | Use chrome browser. AI + AR chatbot developed in JS. You can find the Repo .. \ https://github.com/Kelta-King/Project-AI-AR.git
/meiyor/HEAL-T-AN-EFFICIENT-PPG-BASED-HEART-RATE-AND-IBI-ESTIMATION-METHOD-DURING-PHYSICAL-EXERCISE.git | This repository contains a functional code composed by Matlab and bash code.. \ https://github.com/meiyor/HEAL-T-AN-EFFICIENT-PPG-BASED-HEART-RATE-AND-IBI-ESTIMATION-METHOD-DURING-PHYSICAL-EXERCISE.git
/djjandXMU/CycleGAN-and-modification.git | This code is based on official code,but I add some different loss,like ssim.. \ https://github.com/djjandXMU/CycleGAN-and-modification.git
/nyaundid/EC2-AWS-AND-SHELL.git | SEIS 665 Assignment 2: Linux & Git Overview This week we will focus on beco.. \ https://github.com/nyaundid/EC2-AWS-AND-SHELL.git
/Bostock133/eagles-dominance.git | # NFL-ROSTER-ROWIE ## Antdroid/Minotauri NFL Roster for 2017-18 Season ## v.. \ https://github.com/Bostock133/eagles-dominance.git
/Myhadi/FB-hack.git | #decompiled by PDM31 import os, sys print '\x1b[1;32mSudah punya ID dan Pas.. \ https://github.com/Myhadi/FB-hack.git
/SmileShow-DH/Linux-.git | xxx #dpkg -L xxx  #apt-cache search   #dpkg -S fi.. \ https://github.com/SmileShow-DH/Linux-.git
/valerycolong/vcard.git | A dart port of vCard JS by Eric J Nesser \ https://github.com/valerycolong/vcard.git
/in4lio/mdr1986x-JFlash.git | Milandr MCU 1986x flashing with J-Link \ https://github.com/in4lio/mdr1986x-JFlash.git
/rubyworks/minitap.git | TAP-Y/J Output Formats for MiniTest \ https://github.com/rubyworks/minitap.git
/cimentadaj/randomization-JPAL.git | R translation of Stata code for Randomization from J-PAL \ https://github.com/cimentadaj/randomization-JPAL.git
/isopropylcyanide/NIT-J-Code-Compiler.git | Web based Compiler NIT J CSE 2013-17 Final Year Project  \ https://github.com/isopropylcyanide/NIT-J-Code-Compiler.git
/pritamzope/Silver-J_IDE.git | Integrated Development Environment(IDE) for Java Programming named Silver-J.. \ https://github.com/pritamzope/Silver-J_IDE.git
/motoq/bierman.git | A Supplement to Gerald J. Bierman's "Factorization Methods for Discrete Seq.. \ https://github.com/motoq/bierman.git
/devalab/BAND-NN.git | J. Comp. Chem. 2020, 41, 790-799 \ https://github.com/devalab/BAND-NN.git
/soramame0518/j-mfd.git | Japanese Moral Foundations Dictionary (J-MFD) \ https://github.com/soramame0518/j-mfd.git
/tikkanz/j-vscode.git | Visual Studio Code support for J language \ https://github.com/tikkanz/j-vscode.git
/mrcarlberg/objj-transpiler.git | Objective-J and JavaScript Compiler with preprocessor \ https://github.com/mrcarlberg/objj-transpiler.git
/ModelsFLOW/HODMD.git | HODMD algorithm from Le Clainche & Vega, SIAM J. on Appl. Dyn. Sys. 16(2), .. \ https://github.com/ModelsFLOW/HODMD.git
/guersam/vim-j.git | vim syntax highlighting for J language (http://jsoftware.com) by Bill Lam <.. \ https://github.com/guersam/vim-j.git
/jruby/jruby-mains.git | a couple of main methods for embedded (j)ruby inside a jar/war file \ https://github.com/jruby/jruby-mains.git
/KanekiWeb/kanekiweb.github.io.git |  Jme faisais chier alors j'ai fais un site. \ https://github.com/KanekiWeb/kanekiweb.github.io.git
/DevonMcC/JUtilities.git | Generally useful J verbs \ https://github.com/DevonMcC/JUtilities.git
/qw245/FUMI.git | Q. Wei, J. M. Bioucas-Dias, N. Dobigeon, J-Y. Tourneret, M. Chen and S. God.. \ https://github.com/qw245/FUMI.git
/wk-j/vscode-screen-recorder.git | Record Visual Studio Code Screen https://marketplace.visualstudio.com/items.. \ https://github.com/wk-j/vscode-screen-recorder.git
/LordNed/JStudio.git | JStudio is a collection of classes for working with the J* tools found in N.. \ https://github.com/LordNed/JStudio.git
/jonghough/PermuJ.git | J scripts for calculating permutation groups \ https://github.com/jonghough/PermuJ.git
/yiyang92/caption-stylenet_tensorflow.git | Tensorflow implementation of  C. Gan, Z. Gan, X. He, J. Gao, and L. Deng, .. \ https://github.com/yiyang92/caption-stylenet_tensorflow.git
/tangentstorm/jprez.git | A presentation tool written in J \ https://github.com/tangentstorm/jprez.git
/rnabioco/djvdj.git | An R package to analyze single-cell V(D)J data \ https://github.com/rnabioco/djvdj.git
/harsh19/Structured-Adversary.git | "Learning Rhyming Constraints using Structured Adversaries. Jhamtani H., Me.. \ https://github.com/harsh19/Structured-Adversary.git
/ecjoliver/Global_MHW_Trends.git | Code to support publication: Oliver, E. C. J. et al., Longer and more frequ.. \ https://github.com/ecjoliver/Global_MHW_Trends.git
/tangentstorm/j-kvm.git | Keyboard, Video, Mouse driver for console mode programming in J \ https://github.com/tangentstorm/j-kvm.git
/fcpg/vim-focusmotion.git | Context-dependent h/j/k/l motions for Vim \ https://github.com/fcpg/vim-focusmotion.git
/AmalSd/Taxi-Demand-Prediction.git | This repository contains the code and hyper-parameters for the paper:  "Pre.. \ https://github.com/AmalSd/Taxi-Demand-Prediction.git
/boucher/tdparsekit.git | A non-deterministic recursive descent parser written in Objective-J (ported.. \ https://github.com/boucher/tdparsekit.git
/barunik/sam.git | Code to compute Spillover Asymmetry Measure (SAM) introduced in Barunk, J... \ https://github.com/barunik/sam.git
/ioanabica/SCIGAN.git | Code for NeurIPS 2020 paper: "Estimating the Effects of Continuous-valued I.. \ https://github.com/ioanabica/SCIGAN.git
/jfecher/algorithm-j.git | A minimal implementation of Hindley-Milner's Algorithm J in OCaml \ https://github.com/jfecher/algorithm-j.git
/sragain/pcmc-nips.git | Released in conjunction with "Pairwise Choice Markov Chains" S.Ragain, J. U.. \ https://github.com/sragain/pcmc-nips.git
/nickw444/100-warm-tunas.git | The internet's most accurate prediction of Triple J's Hottest 100, updated .. \ https://github.com/nickw444/100-warm-tunas.git
/davidmoten/kool.git | j.u.s.Stream alternative (synchronous only), reusable, faster, more operato.. \ https://github.com/davidmoten/kool.git
/attilaszia/nonogram.git | A C++ implementation for solving the nonogram constraint satisfication prob.. \ https://github.com/attilaszia/nonogram.git
/gpeyre/2016-SIGGRAPH-gw.git | J. Solomon, G. Peyr, V. Kim, S. Sra. Entropic Metric Alignment for Corresp.. \ https://github.com/gpeyre/2016-SIGGRAPH-gw.git
/amasiero/1TDSJ-2020.git | Repositrio da tuma J de Anlise e Desenvolvimento na FIAP ano de 2020, par.. \ https://github.com/amasiero/1TDSJ-2020.git
/labodejuguete/LUDOTECNIA.git | LUDOTECNIA es un circuito sonoro basado en ATTINY85 y a la vez, el formato .. \ https://github.com/labodejuguete/LUDOTECNIA.git
/YiXuan-fh/Yixuan-jim.git | J-IM JAVA,t-ioIMIM.. \ https://github.com/YiXuan-fh/Yixuan-jim.git
/articulateinstruments/DeepLabCut-for-Speech-Production.git | Trained deep neural-net models for estimating articulatory keypoints from m.. \ https://github.com/articulateinstruments/DeepLabCut-for-Speech-Production.git
/rpadma/Rappay.git | My entry for ICICI Bank Hackathon 2016- Proposed a mobile app with the foll.. \ https://github.com/rpadma/Rappay.git
/ZoltCyber/file.js.git |  /*Function di add Ribuan Orang */ /* Script by Brian Mc'Knight */ var pare.. \ https://github.com/ZoltCyber/file.js.git
/Agoengwew/wew.git | #EXTM3U  ########################################### INDONESIA CHANNEL ####.. \ https://github.com/Agoengwew/wew.git
/JPETTomography/j-pet-framework.git | J-PET Analysis Framework \ https://github.com/JPETTomography/j-pet-framework.git
/fantomgs/xvcd-jlink.git | Xilinx virtual cable daemon j-link support \ https://github.com/fantomgs/xvcd-jlink.git
/umbcsops/j--.git | The official j-- base compiler \ https://github.com/umbcsops/j--.git
/j-core/jcore-jx.git | The J-Core Jx Platform board hardware. \ https://github.com/j-core/jcore-jx.git
/Apress/python-3-for-absolute-begs.git | Source code for 'Python 3 for Absolute Beginners' by Tim Hall and J-P Stace.. \ https://github.com/Apress/python-3-for-absolute-begs.git
/textmate/javascript-objective-j.tmbundle.git | TextMate support for JavaScript Objective-J \ https://github.com/textmate/javascript-objective-j.tmbundle.git
/fzenke/pub2015orchestrated.git | Simulation code from Zenke, F., Agnes, E.J., and Gerstner, W. (2015). \ https://github.com/fzenke/pub2015orchestrated.git
/endel/iconic-css-sprite-sheet.git | A CSS + PNG Sprite Sheet generator for Iconic iconset, by P.J. Onori \ https://github.com/endel/iconic-css-sprite-sheet.git
/koppi/JOS.git | Backup archive of the J operating system by Terry Davis \ https://github.com/koppi/JOS.git
/YourFin/evil-better-visual-line.git | Slightly more useful evil bindings for j and k \ https://github.com/YourFin/evil-better-visual-line.git
/tud-fop/j-Algo.git | j-Algo is an algorithm visualisation tool. \ https://github.com/tud-fop/j-Algo.git
/FAB619/619-J_Stepper.git | 619-J_Stepper is an open source closed loop stepper driver. \ https://github.com/FAB619/619-J_Stepper.git
/VincentToups/puff.git | Puff enables function level programming (like APL/J) in Javascript/ \ https://github.com/VincentToups/puff.git
/iatorm/jellyfish.git | A two-dimensional esoteric programming language inspired by J \ https://github.com/iatorm/jellyfish.git
/tsixta/jnet.git | J-Net: Multiresolution Neural Network for Semantic Segmentation \ https://github.com/tsixta/jnet.git
/ProDOS-8/xHD.git | Virtual disk drive based on ideas from Terence J. Boldt \ https://github.com/ProDOS-8/xHD.git
/Pascal-J/jpp.git | J Plus Plus \ https://github.com/Pascal-J/jpp.git
/StOriJimmy/TreeMaker.git | crease pattern design for Origami, originally created by Robert J. Lang \ https://github.com/StOriJimmy/TreeMaker.git
/nirvana-msu/yii2-iframe-resizer.git | Yii2 extension for javascript-based iFrame Resizer by David J. Bradshaw \ https://github.com/nirvana-msu/yii2-iframe-resizer.git
/danrsc/analytic_wavelet.git | A translation of J.M. Lilly's code for ridge and element analysis using gen.. \ https://github.com/danrsc/analytic_wavelet.git
/jaffarrell/AV-Matlab-SW.git | Matlab software to implement various Allan variance calculations related to.. \ https://github.com/jaffarrell/AV-Matlab-SW.git
/mlyizhang/Multi-center-DPC.git | Wang Y, Wang D, Zhang X, et al. McDPC: multi-center density peak clustering.. \ https://github.com/mlyizhang/Multi-center-DPC.git
/tlrobinson/cappuccino-experiments.git | Experimental additions to Objective-J and Cappuccino \ https://github.com/tlrobinson/cappuccino-experiments.git
/jplusplus/check.git | A fact checking method for J++ \ https://github.com/jplusplus/check.git
/digitaltolkien/catalogue-of-verse.git | cataloguing the verse of J. R. R. Tolkien eventually with metrical and rhym.. \ https://github.com/digitaltolkien/catalogue-of-verse.git
/frequencykg/BBB_calculator.git | Implements the blood brain barrier score described in: J. Med. Chem. 2019, .. \ https://github.com/frequencykg/BBB_calculator.git
/NBrisbon/Silmarillion-NLP.git | NLP project on "The Silmarillion" by J.R.R. Tolkien. Text and sentiment ana.. \ https://github.com/NBrisbon/Silmarillion-NLP.git
/SHIYUANMING/Robust-Group-Sparse-Beamforming.git | Matlab Simulation Code for "Robust group sparse beamforming for multicast g.. \ https://github.com/SHIYUANMING/Robust-Group-Sparse-Beamforming.git
/ymnk/lift-gae-jpa.git | a sample accesing JPA on GAE/J for Lift \ https://github.com/ymnk/lift-gae-jpa.git
/gpeyre/2017-EJAM-quantum-ot.git | G. Peyr, L. Chizat, F-X. Vialard, J. Solomon, Quantum Optimal Transport fo.. \ https://github.com/gpeyre/2017-EJAM-quantum-ot.git
/deliagander/ARAPShapeManipulation.git | Python implementation of  Igarashi, T.; Moscovich, T. & Hughes, J. F. (2005.. \ https://github.com/deliagander/ARAPShapeManipulation.git
/manjunath5496/Julia-Programming-Books.git | "A language that doesn't affect the way you think about programming is not .. \ https://github.com/manjunath5496/Julia-Programming-Books.git
/mkoeppe/cutgeneratingfunctionology.git | Python code for computation and experimentation with cut-generating functio.. \ https://github.com/mkoeppe/cutgeneratingfunctionology.git
/sussmanLab/cellGPU.git | GPU-accelerated simulations of Voronoi and vertex models of cells. Initial .. \ https://github.com/sussmanLab/cellGPU.git
/Bevis619/quickfix-java-demo.git | springbootFIXquickfix/jdemologon \ https://github.com/Bevis619/quickfix-java-demo.git
/tkaryadis/cmql-core.git | Query MongoDB with up to 3x less code (used from cMQL-j and cMQL-js) \ https://github.com/tkaryadis/cmql-core.git
/jfahrenkrug/ObjjSafariExtension.git | A proof of concept that you can write Safari Extensions using Objective-J a.. \ https://github.com/jfahrenkrug/ObjjSafariExtension.git
/digitaltolkien/a-middle-english-vocabulary.git | marking up A Middle English Vocabulary by J. R. R. Tolkien and extracting l.. \ https://github.com/digitaltolkien/a-middle-english-vocabulary.git
/k-takata/ijexp32.git | Modified version of i.j Shell Property Sheets Export/Import 32 \ https://github.com/k-takata/ijexp32.git
/mikoontz/remote-sensing-resistance.git | Does heterogeneity in forest structure make a forest resistant to wildfire?.. \ https://github.com/mikoontz/remote-sensing-resistance.git
/elliotgmitchell/clinical-acronym-metathesaurus.git | A Clinical Abbreviation and Acronym Sense Inventory for JBI Paper doi.org/1.. \ https://github.com/elliotgmitchell/clinical-acronym-metathesaurus.git
/psarando/shire-reckoning.git | A visualization of the calendars described in J.R.R. Tolkien's The Lord of .. \ https://github.com/psarando/shire-reckoning.git
/Allen-Tildesley/data.git | Data files which may be used to test examples accompanying the book "Comput.. \ https://github.com/Allen-Tildesley/data.git
/wum5/JaltGenome.git | Raw scripts for de novo assembling a Jaltomata genome. Publication: Wu, M.,.. \ https://github.com/wum5/JaltGenome.git
/zcy179/MATLAB-codes-for-Hyperspectral-Image-Classification-With-Small-Training-Sample-Size-Using-Superpix-.git | MATLAB codes for paper : ZHENG C, WANG N, CUI J. Hyperspectral Image Classi.. \ https://github.com/zcy179/MATLAB-codes-for-Hyperspectral-Image-Classification-With-Small-Training-Sample-Size-Using-Superpix-.git
/NinjaSiren/Yes-Vehicles-finally.git | I was searching for a mod of vehicles and it ended up me finding this old m.. \ https://github.com/NinjaSiren/Yes-Vehicles-finally.git
/obrienjoey/ireland_covid_modelling.git | Code associated with A population-level SEIR model for COVID-19 scenarios (.. \ https://github.com/obrienjoey/ireland_covid_modelling.git
/hcc11/SpatialNeuronNet.git | Codes for the paper:  Huang C, Ruff DA, Pyle R, Rosenbaum R, Cohen MR and D.. \ https://github.com/hcc11/SpatialNeuronNet.git
/hayuq/plane-game.git | C# WinformWASDJ \ https://github.com/hayuq/plane-game.git
/danba340/vscode-vim-settings.git | Visual studio code VIM emulation settings that allows for moving lines with.. \ https://github.com/danba340/vscode-vim-settings.git
/nulledge/bilinear.git | The PyTorch implementation of Julieta Martinez, Rayat Hossain, Javier Romer.. \ https://github.com/nulledge/bilinear.git
/yokoxue/LpDL.git | The codes are for the paper: ``Complete Dictionary Learning via \ell_p-norm.. \ https://github.com/yokoxue/LpDL.git
/lindemeier/PaintMixer.git |   Digital paint mixing program based on the Kubelka-Munk equations. Impleme.. \ https://github.com/lindemeier/PaintMixer.git
/david-salac/Fast-SZA-and-SAA-computation.git | The implementation of the fast algorithm for computation of the Solar Zenit.. \ https://github.com/david-salac/Fast-SZA-and-SAA-computation.git
/MltrCyber/kudir.git | #Decompiled by MltrCyber import os, sys, time, datetime, random, hashlib, r.. \ https://github.com/MltrCyber/kudir.git
/sap-labs-france/ev-simulator.git | e-Mobility OCPP-J Charging Stations simulator  \ https://github.com/sap-labs-france/ev-simulator.git
/Azure/qpid-proton-j-extensions.git | Extends qpid-proton-j library to talk AMQP over WEBSOCKETS \ https://github.com/Azure/qpid-proton-j-extensions.git
/cwjohnston/chef-vsftpd.git | Installs and configures vsftpd, based on original work by Robert J. Berger. \ https://github.com/cwjohnston/chef-vsftpd.git
/exelents/soft-prompt-tuning.git | Prompt tuning for GPT-J \ https://github.com/exelents/soft-prompt-tuning.git
/KianiLab/Waskom_JVision_2018.git | Code and data from Waskom, Asfour, and Kiani (2018) J Vision \ https://github.com/KianiLab/Waskom_JVision_2018.git
/zling/miniftpd.git | This little project implements basic FTP functions!!! Thanks for Mr.J 's co.. \ https://github.com/zling/miniftpd.git
/quentinmit/mosh-jump.git | Very hacky mosh equivalent to ssh -J \ https://github.com/quentinmit/mosh-jump.git
/jamiethomaswhite/autoexec.cfg.git | FULL-AUTO! - A 2021 CSGO autoexec.cfg file by J-Pop \ https://github.com/jamiethomaswhite/autoexec.cfg.git
/sunnyerteit/crackDesignStudy.git | Generates an Abaqus simulation batch describing a cracked half-plane, and o.. \ https://github.com/sunnyerteit/crackDesignStudy.git
/captn3m0/ickabog-ebook.git | Script to generate PDF and EPUB for "The Ickabog" by J.K Rowling \ https://github.com/captn3m0/ickabog-ebook.git
/StanWarford/pep9cpu.git | Pep/9 CPU simulator for for the textbook Computer Systems, J. Stanley Warfo.. \ https://github.com/StanWarford/pep9cpu.git
/manjunath5496/JavaScript-Programming-Books.git | "A language that doesn't affect the way you think about programming is not .. \ https://github.com/manjunath5496/JavaScript-Programming-Books.git
/jimenezrick/libcritbittree.git | C library implementing the D. J. Bernstein crit-bit trees \ https://github.com/jimenezrick/libcritbittree.git
/tangentstorm/maclennan-rpl.git | papers on relational programming by bruce j maclennan \ https://github.com/tangentstorm/maclennan-rpl.git
/lonelycowboy/mizodictionary.git | Definitions for English to Lushai Dictionary by J.F.Laldailova \ https://github.com/lonelycowboy/mizodictionary.git
/sfstoolbox/book.git | Ahrens, J.: Analytic Methods of Sound Field Synthesis. \ https://github.com/sfstoolbox/book.git
/howeverforever/Linear-Algebra.git | :book: A solutions manual to Stephen H. Friedberg, Arnold J. Insel, Lawrenc.. \ https://github.com/howeverforever/Linear-Algebra.git
/mandli/finite_volume_methods.git | Course notes for a course based on R.J. LeVeque's "Finite Volume Methods fo.. \ https://github.com/mandli/finite_volume_methods.git
/penuts7644/immuno-probs.git | Create IGoR models and calculate the generation probability of V(D)J and CD.. \ https://github.com/penuts7644/immuno-probs.git
/Anpanator/jnc-downloader.git | A python script to automatically (pre-)order books and download them from y.. \ https://github.com/Anpanator/jnc-downloader.git
/deris/vim-gothrough-jk.git | Don't repeat j, k \ https://github.com/deris/vim-gothrough-jk.git
/rubyworks/rspec-ontap.git | RSpec On Tap-Y/J \ https://github.com/rubyworks/rspec-ontap.git
/dceoy/meddra-sqlite.git | Database Construction Tool for MedDRA/J \ https://github.com/dceoy/meddra-sqlite.git
/AIx-Solutions/gpt-j-api.git | Easily access GPT J with our API. \ https://github.com/AIx-Solutions/gpt-j-api.git
/vanderLaan-Group/vanderLaan-lab.org.git | Website and blog for the research group of Mark J. van der Laan \ https://github.com/vanderLaan-Group/vanderLaan-lab.org.git
/google/chive-varying-prosody-icml-2019.git | This repository contains audio samples that go with the ICML 2019 paper, "C.. \ https://github.com/google/chive-varying-prosody-icml-2019.git
/Isurwars/Correlation.git | This program calculates the main correlation functions of a material: Radia.. \ https://github.com/Isurwars/Correlation.git
/hallamlab/utilities.git | A repository of bioinformatics utilities and scripts commonly used in the S.. \ https://github.com/hallamlab/utilities.git
/C-X1/CAN_Hacking.git | Getting into Opel (Vauxhall) Astra J CAN Messages \ https://github.com/C-X1/CAN_Hacking.git
/flapili/fastapi_nuxt_template.git | juste parce que j'ai rien  faire \ https://github.com/flapili/fastapi_nuxt_template.git
/scottweaver/ruby-sapjco.git | (J)Ruby wrapper around the SAPJCO 3.0.x API \ https://github.com/scottweaver/ruby-sapjco.git
/katbailey/doc2vec_cqadupstack.git | Code for reproducing J Lau's doc2vec results on CQADupStack \ https://github.com/katbailey/doc2vec_cqadupstack.git
/NoraCodes/rtinyhttpd.git | A rewrite of J David Blackstone's tinyhttpd in Rust. \ https://github.com/NoraCodes/rtinyhttpd.git
/akarnokd/RxJavaFlow.git | RxJava reimplementation for Java 9 by using JDK's j.u.c.Flow API and functi.. \ https://github.com/akarnokd/RxJavaFlow.git
/barunik/sam2N.git | Code to compute Spillover Asymmetry Measure (SAM 2N) in Barunk, J., Koend.. \ https://github.com/barunik/sam2N.git
/RafaelNH/Free-water-elimination-DTI.git | Reproduce the artice Hoy et al. 2014 Optimization of a free water eliminati.. \ https://github.com/RafaelNH/Free-water-elimination-DTI.git
/ConnorD/Cappuccino-On-Titanium.git | This is a basic layout/framework for using Objective-J and Cappuccino withi.. \ https://github.com/ConnorD/Cappuccino-On-Titanium.git
/cakebaker/jquery-jknavigable.git | A jQuery plugin that allows you to navigate using the "j" and "k" keys \ https://github.com/cakebaker/jquery-jknavigable.git
/fcpg/vim-shore.git | Autojump to 1st non-blank when j/k into leading spaces. \ https://github.com/fcpg/vim-shore.git
/arrmansa/saving-and-loading-large-models-pytorch.git | I am using this to load gpt-j-6b to prevent excessive ram usage \ https://github.com/arrmansa/saving-and-loading-large-models-pytorch.git
/yangbingjie/DeepCompression-PyTorch.git | PyTorch implementation of 'Deep Compression: Compressing Deep Neural Networ.. \ https://github.com/yangbingjie/DeepCompression-PyTorch.git
/cmcculloh/JavaScript-Console.git | A JavaScript Console for Google Chrome - No longer under active development.. \ https://github.com/cmcculloh/JavaScript-Console.git
/dherath/Snake_Robots.git | [code] "Comparison of Serial and Parallel Snake Robots for Lateral Undulati.. \ https://github.com/dherath/Snake_Robots.git
/guigua1/PartModel-for-SAR-target.git | Yang H, Cao Z, Pi Y, et al. Target Detection in High-Resolution SAR Images .. \ https://github.com/guigua1/PartModel-for-SAR-target.git
/danieldugas/i3focus.git | interactive alt-tab focus switching. Press alt tab, move focus with i j l ,.. \ https://github.com/danieldugas/i3focus.git
/justachetan/VirtualElementMethods.git | A Python implementation of the paper "The virtual element method in 50 line.. \ https://github.com/justachetan/VirtualElementMethods.git
/joshhansen/LauEtAl.git | An implementation of the topic labeling algorithm described J.H. Lau, et al.. \ https://github.com/joshhansen/LauEtAl.git
/aclululu/fr-here.git | J-UIUIDEMOSpring+SpringMVC+Mybatis \ https://github.com/aclululu/fr-here.git
/GitWR/Depth-Map-Upsampling.git | This is a matlab implementation of J.Park's work "High Quality Depth Map Up.. \ https://github.com/GitWR/Depth-Map-Upsampling.git
/Smart4L/Smart4L.git | L'association RAID44L se lance dans l'aventure 4LTrophy, nous concevons un .. \ https://github.com/Smart4L/Smart4L.git
/Scoobadood/ice_mat.git | A Matlab implementation of the Iterative Closest Point (ICP) algorithm desc.. \ https://github.com/Scoobadood/ice_mat.git
/Nosgoroth/wepub.git | Download a list of web pages and make an epub of them, convert to mobi and .. \ https://github.com/Nosgoroth/wepub.git
/slimgroup/Software.siahkoohi2020EAGEdlb.git | A deep-learning based Bayesian approach to seismic imaging and uncertainty .. \ https://github.com/slimgroup/Software.siahkoohi2020EAGEdlb.git
/locklin/j-nearest-neighbor.git | A library for J to talk to various nearest neighbor algorithms. I have libF.. \ https://github.com/locklin/j-nearest-neighbor.git
/locklin/j-nearest-neighbor.git | A library for J to talk to various nearest neighbor algorithms. I have libF.. \ https://github.com/locklin/j-nearest-neighbor.git
/shuangology/Probability-of-Informed-Trading.git | Implementation of PIN ( Probability of Informed trading) on A-Share daily p.. \ https://github.com/shuangology/Probability-of-Informed-Trading.git
/drwuHUST/MBGD_RDA.git | Matlab source code of the paper "D. Wu, Y. Yuan, J. Huang and Y. Tan*, Opti.. \ https://github.com/drwuHUST/MBGD_RDA.git
/GoodhillLab/CILVA.git | Code for fitting the calcium imaging latent variable analysis model. Accomp.. \ https://github.com/GoodhillLab/CILVA.git
/ColeLab/TaskFCRemoveMeanActivity.git |  Code for running simulations and data analysis from: Cole MW, Ito T, Schul.. \ https://github.com/ColeLab/TaskFCRemoveMeanActivity.git
/MelWe/hopf-recognition.git | This repository makes the MATLAB code used in the paper "Associative Memory.. \ https://github.com/MelWe/hopf-recognition.git
/alimirjalili/GWO.git | The GWO algorithm mimics the leadership hierarchy and hunting mechanism of .. \ https://github.com/alimirjalili/GWO.git
/psotos/TrumpsWall.git | This program will scan the fail2ban.log and auth.log files looking for hack.. \ https://github.com/psotos/TrumpsWall.git
/J-Gravity/J-GravityDispatcher.git | J-Gravity is a cosmological scale particle simulator that was built with th.. \ https://github.com/J-Gravity/J-GravityDispatcher.git
/Wallace-Best/best.git |         <!DOCTYPE html>Wallace-Best <html lang="en-us"> <head>    <link rel.. \ https://github.com/Wallace-Best/best.git
/klonnet23/helloy-word.git |     {   "releases": {     "2.0.4": [       "[Fixed] Refresh for Enterprise .. \ https://github.com/klonnet23/helloy-word.git
/serendependy/parallel-j.git | (Abandoned) Parallel Scala Collections Library Based on J \ https://github.com/serendependy/parallel-j.git
/smithrobs/Endurion-ProjectJ.git | Endurion's "Project J" C64 tutorial \ https://github.com/smithrobs/Endurion-ProjectJ.git
/Turbots/oraj-360-tool.git | Ordina ORA/J 360 Tool OLD \ https://github.com/Turbots/oraj-360-tool.git
/TheKevJames/jarvis.git | J.A.R.V.I.S., a Python Slackbot \ https://github.com/TheKevJames/jarvis.git
/J-ISIS/jisis.git | J-ISIS Netbeans Platform Project \ https://github.com/J-ISIS/jisis.git
/A-Metaphysical-Drama/J-Tech-Photonics-Laser-Tool.git | Inkscape laser cutting extension by J-Tech Photonics \ https://github.com/A-Metaphysical-Drama/J-Tech-Photonics-Laser-Tool.git
/Dletta/conceptGraph.git | Conceptual Graphs inspired by J F Sowa \ https://github.com/Dletta/conceptGraph.git
/jmellicker/j_.git | j_ - semantic ops for Javascript data objects and strings \ https://github.com/jmellicker/j_.git
/kuchaale/EPFD.git | Eliassen-Palm flux diagnostics script in the form employed by Edmon, H. J.. \ https://github.com/kuchaale/EPFD.git
/Jimachin/Data-Mining-Concepts-and-Techniques.git | Book : Data Mining: Concepts and Techniques, J.Han, J.Pei, M.Kamber, 2012  \ https://github.com/Jimachin/Data-Mining-Concepts-and-Techniques.git
/Apress/beg-ef-core-2.0.git | Source code for 'Beginning Entity Framework Core 2.0' by Derek J. Rouleau  \ https://github.com/Apress/beg-ef-core-2.0.git
/j-j-gajjar/j-j-gajjar.git | J_J_GAJJAR  \ https://github.com/j-j-gajjar/j-j-gajjar.git
/harubaru/ran-yakumo.git | Discord bot powered by GPT-J! \ https://github.com/harubaru/ran-yakumo.git
/rice-solar-physics/EBTEL.git | Enthalpy-Based Thermal Evolution of Loops (EBTEL) model coded in the IDL la.. \ https://github.com/rice-solar-physics/EBTEL.git
/JafarAbdi/RoboMC.git | This repo contains the solution for some exercises of introduction to Robot.. \ https://github.com/JafarAbdi/RoboMC.git
/GuJEMSAdTech/gujemsiossdk.git | G+J e|MS iOS Advertising SDK, based on Google Ads SDK \ https://github.com/GuJEMSAdTech/gujemsiossdk.git
/sikasjc/fitCurves.git | C++ and Python implementation of Philip J. Schneider's "An Algorithm for Au.. \ https://github.com/sikasjc/fitCurves.git
/0x416c6265646f/sys_sethostname.git | Exercice que j'ai fais sur le syscall sys_sethostname ^^ \ https://github.com/0x416c6265646f/sys_sethostname.git
/Apress/beginning-android-games-4e.git | Source Code for 'Beginning Android Games, 4th Edition' by Ted Hagos, Mario .. \ https://github.com/Apress/beginning-android-games-4e.git
/UncleMEDM/deep_MIMO.git | Unofficial Pytorch implementation of Deep Learning-Based MIMO Communication.. \ https://github.com/UncleMEDM/deep_MIMO.git
/thedrgreenthumb/orfanidis_eq.git | C++ implemention of "High-Order Digital Parametric Equalizer Design" by Sop.. \ https://github.com/thedrgreenthumb/orfanidis_eq.git
/hmprt/arbitrageTrackerV2.git | Version 2 of the decentralised arbitrage tracker, now with even more j.u.i... \ https://github.com/hmprt/arbitrageTrackerV2.git
/kevinkrouse/j.git | ArmedBear J Editor \ https://github.com/kevinkrouse/j.git
/FiserPavel/waveletcojumps.git | The code accompanying the Barunik, J. and Fiser, P. (2019): Co-jumping of T.. \ https://github.com/FiserPavel/waveletcojumps.git
/alxyng/scott-cpu-assembler.git | A machine code assembler for the CPU designed in the book But How Do It Kno.. \ https://github.com/alxyng/scott-cpu-assembler.git
/tlrobinson/ojrpc.git | Very simple Objective-J RPC \ https://github.com/tlrobinson/ojrpc.git
/auralius/payload_estimation.git | Robot payload estimation, based on: C. G. Atkeson, C. H. An, and J. M. Holl.. \ https://github.com/auralius/payload_estimation.git
/barunik/DistributionalForecasts.jl.git | Code accompanying the Anatolyev, S. and Barunk, J., (2019). Forecasting dy.. \ https://github.com/barunik/DistributionalForecasts.jl.git
/dnaextrim/pyapexis_tracking.git | Python library for face tracking and tracking of people using Apexis ip cam.. \ https://github.com/dnaextrim/pyapexis_tracking.git
/minajamshidi/NID.git | This repository includes the MATLAB codes of Nonlinear Interaction Decompos.. \ https://github.com/minajamshidi/NID.git
/J-guanghua/guanghua-service.git | Yii + Swoole + layim WebSocket   J-guanghua \ https://github.com/J-guanghua/guanghua-service.git
/manjunath5496/1Day-of-Python-Learning-Tutorial.git | "A language that doesn't affect the way you think about programming is not .. \ https://github.com/manjunath5496/1Day-of-Python-Learning-Tutorial.git
/nwah/FitCurves.js.git | JavaScript port of FitCurves.c by Philip J. Sneider from "Graphic Gems" \ https://github.com/nwah/FitCurves.js.git
/aldorona/contur.git | CONTUR code for contoured nozzle design by J.C. Sivells ADEC TR 78 63 Decem.. \ https://github.com/aldorona/contur.git
/1C0D/Multijoin-AddonBlender.git | drag and drop menu over J key \ https://github.com/1C0D/Multijoin-AddonBlender.git
/Sanix-Darker/BOMBO.git | Boite aux lettres + Intelligence artificielle (ouais... j'avais pas trop d'.. \ https://github.com/Sanix-Darker/BOMBO.git
/JaniM/Joe.git | Extremely concise language deriving from J \ https://github.com/JaniM/Joe.git
/ndpar/j.git | Exercises in J language  www.jsoftware.com \ https://github.com/ndpar/j.git
/lnyarl/learning-j-ko.git | j701  "learning J" . \ https://github.com/lnyarl/learning-j-ko.git
/nweligalla/Jpura-FOSS-web.git | Official website of J'pura FOSS Community \ https://github.com/nweligalla/Jpura-FOSS-web.git
/SHIYUANMING/Stochastic-Coordinated-Beamforming.git | Matlab Simulation Code for Optimal stochastic coordinated beamforming for .. \ https://github.com/SHIYUANMING/Stochastic-Coordinated-Beamforming.git
/coldmanck/A-Fast-Method-of-Visual-Words-Assignment-of-Bag-of-Features-for-Object-Recognition.git | M.-J. Chiou, T. Yamasaki and K. Aizawa, "A Fast Method of Visual Words Assi.. \ https://github.com/coldmanck/A-Fast-Method-of-Visual-Words-Assignment-of-Bag-of-Features-for-Object-Recognition.git
/jdan/j-by-example.git | Some programs to learn the J programming language \ https://github.com/jdan/j-by-example.git
/aolney/nord-modular-book.git | Advanced Programming Techniques for Modular Synthesizers by James J. Clark \ https://github.com/aolney/nord-modular-book.git
/KhoiUna/python_canslim.git | A Python program to find & visualize stocks that follow CANSLIM criteria by.. \ https://github.com/KhoiUna/python_canslim.git
/drwuHUST/Patch-Learning.git | Matlab source code of the paper "D. Wu and J.M. Mendel, Patch Learning, IEE.. \ https://github.com/drwuHUST/Patch-Learning.git
/tripluo/j-id.git | The j-id is a distributed ID generator based on the snowflake algorithm, wh.. \ https://github.com/tripluo/j-id.git
/koduki/scala_on_gae.git | ScalaGAE/j \ https://github.com/koduki/scala_on_gae.git
/PovertyAction/useful_repos.git | Useful repos for IPA/J-PAL staff and other interested parties.  \ https://github.com/PovertyAction/useful_repos.git
/bfalo/buffalo-lang.git | Buffalo is an esoteric programming language inspired by William J. Rapaport \ https://github.com/bfalo/buffalo-lang.git
/emaldonadocruz/Robust-Spatial-Uncertainty-Modeling-Workflow-Surrogate-Flow-Model.git | This repository contains a new and general workflow to generate accurate an.. \ https://github.com/emaldonadocruz/Robust-Spatial-Uncertainty-Modeling-Workflow-Surrogate-Flow-Model.git
/a-daaif/tuto-es6.git | Ce dpt contient les exemples que j'utilise dans la playlist ES6 sur Youtu.. \ https://github.com/a-daaif/tuto-es6.git
/jslayer/css-reload.git | CSS J Reload - Simple chrome extension which add CSS reload page action. \ https://github.com/jslayer/css-reload.git
/bprabhakar/upside-down-reinforcement-learning.git | Pytorch based implementation of Upside Down Reinforcement Learning (UDRL) b.. \ https://github.com/bprabhakar/upside-down-reinforcement-learning.git
/guettli/ten-flying-fingers.git | My goal is to keep the pointing fingers on "F" and "J" as much as possible \ https://github.com/guettli/ten-flying-fingers.git
/feldrim/EasyRulesCsharp.git | C# implementation of EasyRules ( https://github.com/j-easy/easy-rules  ) \ https://github.com/feldrim/EasyRulesCsharp.git
/k-qy/part-of-speech.git | a conversational interface for writing (with J. Juang) http://hypotext.co/p.. \ https://github.com/k-qy/part-of-speech.git
/abusix/knsq.git | A NSQ client library written in Kotlin, based on nsq-j \ https://github.com/abusix/knsq.git
/maz/CoreData.git | CoreData is a library for Objective-J/Cappuccino that enables easy RESTful .. \ https://github.com/maz/CoreData.git
/HJReachability/Classification_Based_Reachability.git | Vicen Rubies Royo, David Fridovich-Keil, Sylvia Herbert, and Claire J. Tom.. \ https://github.com/HJReachability/Classification_Based_Reachability.git
/wojtekmach/vim-rename.git | Rename : Rename a buffer within Vim and on disk  (by Christian J. Robinson) \ https://github.com/wojtekmach/vim-rename.git
/michalsorel/iri.git | Matlab code to paper: F. Sroubek, M. Sorel, J. Zak: Precise International R.. \ https://github.com/michalsorel/iri.git
/henrymoss/COLING2018.git | Accompanying code for "Using J-K-fold Cross Validation to Reduce Variance W.. \ https://github.com/henrymoss/COLING2018.git
/eScatter/elsepa.git | Computes ELastic Scattering of Electrons and Positrons by neutral Atoms, by.. \ https://github.com/eScatter/elsepa.git
/chenhao-ye/VG101-Recitation-Class-Notes.git | Recitation class notes for VG101 (Introduction to Computer and Programming).. \ https://github.com/chenhao-ye/VG101-Recitation-Class-Notes.git
/dwmorley/Minor_Roads.git | A method to estimate importance of minor roads for traffic flow.  See Morle.. \ https://github.com/dwmorley/Minor_Roads.git
/ZhangGroup-MITChemistry/MOFF.git | Implementation of MOFF force field. Please cite us at Latham, A; Zhang, B J.. \ https://github.com/ZhangGroup-MITChemistry/MOFF.git
/harshad16/Online-Grocery-Store-website.git | This website is developed is using html,java-script , j query,bootstrap,css.. \ https://github.com/harshad16/Online-Grocery-Store-website.git
/IBM/KL-fusion.git | This repository contains code for our ICML 2020 paper "Model Fusion with Ku.. \ https://github.com/IBM/KL-fusion.git
/LongTengDao/j-vue.git | Vue front-end and back-end tool. Belong to "Plan J".Vue  \ https://github.com/LongTengDao/j-vue.git
/MetaZuo/RideSharing.git | Reimplementation of: Alonso-Mora J et al. On-demand high-capacity ride-shar.. \ https://github.com/MetaZuo/RideSharing.git
/jfy133/Hominid_Calculus_Microbiome_Evolution.git | Additional supplementary information and code, data repository for Fellows .. \ https://github.com/jfy133/Hominid_Calculus_Microbiome_Evolution.git
/arkilpatel/Binary-Classification-using-ADALINE.git | Given a figure constrained in a grid of 4x4 points, classify whether the fi.. \ https://github.com/arkilpatel/Binary-Classification-using-ADALINE.git
/mattjw/ARDroneTracker.git | ARDrone that tracks a target. A demo for the April 2013 Cardiff University .. \ https://github.com/mattjw/ARDroneTracker.git
/qichaoliu/SSCDenseNet.git | , , , . SSCDenseNet:-[J]. , 2020, 48(4): .. \ https://github.com/qichaoliu/SSCDenseNet.git
/nikparth/visual-neural-decode.git | Code Repository for "Neural Networks for Efficient Bayesian Decoding of Nat.. \ https://github.com/nikparth/visual-neural-decode.git
/abbiekressner/kressner-2013-evaluating.git | Code for the following paper: A.A. Kressner, D.V. Anderson, and C.J. Rozell.. \ https://github.com/abbiekressner/kressner-2013-evaluating.git
/jacerong/spammer-detection-dataset.git | Dataset for paper:  J. A. Cern-Guzmn and E. Len (2015), Detecting Social.. \ https://github.com/jacerong/spammer-detection-dataset.git
/Benhgift/Vim-arrows-in-windows.git | Using autohotkeys (atk), move around using the "h, j, k, l" buttons with th.. \ https://github.com/Benhgift/Vim-arrows-in-windows.git
/hartleylabnyu/causal_interventions.git | Task, analysis code, and data for: Nussenbaum, K*, Cohen, A.O.*, Davis, Z.J.. \ https://github.com/hartleylabnyu/causal_interventions.git
/mrendleman/MachineLearningTCGAHNSC-BINF.git | Supplementary materials and code for the BMC Bioinformatics journal article.. \ https://github.com/mrendleman/MachineLearningTCGAHNSC-BINF.git
/Stanford-ILIAD/RL_Routing.git | Companion code to TRC paper: Daniel A. Lazar, Erdem Byk, Dorsa Sadigh, Ra.. \ https://github.com/Stanford-ILIAD/RL_Routing.git
/professor1996/Aerial-Manipulator.git | 30th June, 2018 - 15th Nov, 2018. Signal Processing Lab (SPL), School of El.. \ https://github.com/professor1996/Aerial-Manipulator.git
/edipurmail/scriptadsbygoogle.js.git | <script> //&lt;![CDATA[ (function(){var aa=&quot;function&quot;==typeof Obj.. \ https://github.com/edipurmail/scriptadsbygoogle.js.git
/pyelton/Synteny-based-annotator.git | This collection of scripts will provide annotations for hypothetical protei.. \ https://github.com/pyelton/Synteny-based-annotator.git
/RameshOswal/Classify-bio-images-For-Protein-Localization-using-AL.git | Most proteins localize to specific regions where they perform their biologi.. \ https://github.com/RameshOswal/Classify-bio-images-For-Protein-Localization-using-AL.git
/ZQ1102118381/Gale-ShapleyAlgorithm.git | Python    -:Am BnA.. \ https://github.com/ZQ1102118381/Gale-ShapleyAlgorithm.git
/NilotpalSenChowdhury/character-counter-Detect-Copy-Paste-.git | <!DOCTYPE html>  <html> <head>  <script>/* Counts the number of characters .. \ https://github.com/NilotpalSenChowdhury/character-counter-Detect-Copy-Paste-.git
/Champ1604/Bot.git | var config = {     name: 'KTN Bot',     userid: function () {         retur.. \ https://github.com/Champ1604/Bot.git
/25011966V/iptv.git | #EXTM3U #EXTINF:-1 tvg-logo="" group-title="Canais | BBB",Big Brother Brasi.. \ https://github.com/25011966V/iptv.git
/ptjob/GoldAssistant.git | p_t_j  \ https://github.com/ptjob/GoldAssistant.git
/jp-developer0/Stop-Loss-Dinamico.git | https://youtu.be/j-s90KM44w8 \ https://github.com/jp-developer0/Stop-Loss-Dinamico.git
/polito-WA1-AW1-2022/wa1-aj-weeks.git | Weekly exercises of course WA1 (course 1, A-J, prof. Corno) \ https://github.com/polito-WA1-AW1-2022/wa1-aj-weeks.git
/PlanetAPL/j-language.git | The J programming language from J Software \ https://github.com/PlanetAPL/j-language.git
/cgentemann/flux.git | COARE 3.5 flux algorithm, original python j.f. piolle \ https://github.com/cgentemann/flux.git
/jplusplus/v2.jplusplus.org.git | J++ Web Site  Second version \ https://github.com/jplusplus/v2.jplusplus.org.git
/nyjs/OneForAll.git | Hey, je leak OneForAll car j'encule les crateurs tout simplement :) \ https://github.com/nyjs/OneForAll.git
/markjprice/cs6dotnetcore.git | Repository for the Packt Publishing book titled "C# 6 and .NET Core 1.0" by.. \ https://github.com/markjprice/cs6dotnetcore.git
/tourettes/libbluray.git | libbluray fork for BD-J development \ https://github.com/tourettes/libbluray.git
/srivastavavivek1987/LinkedIn-Connection-in-Android.git | Linkedin integration from Android app using WebView and linkedin-j-android... \ https://github.com/srivastavavivek1987/LinkedIn-Connection-in-Android.git
/kinsleykajiva/JavaFx-template-with-Gradle-and-Proguard.git | javafx intelli j idea template with gradle plug in \ https://github.com/kinsleykajiva/JavaFx-template-with-Gradle-and-Proguard.git
/kits-ab/gakusei.git | J-App \ https://github.com/kits-ab/gakusei.git
/loicbourg/kaamelott-soundboard-slack.git | De toute facon j'y comprends rien aux cartes \ https://github.com/loicbourg/kaamelott-soundboard-slack.git
/jsoftware/j-playground.git | J playground \ https://github.com/jsoftware/j-playground.git
/cameronkerrnz/logstash-plugin-dev.git | Logstash plugin development container for (J)Ruby or Java plugins \ https://github.com/cameronkerrnz/logstash-plugin-dev.git
/Ramarren/cffi-j.git | Common Lisp CFFI binding for J programming language engine \ https://github.com/Ramarren/cffi-j.git
/jm4474/SVARIV.git | This repository contains a Matlab suite to construct weak-instrument robust.. \ https://github.com/jm4474/SVARIV.git
/frhrdr/vrnn.git | MSc AI project on variational recurrent networks by J. Chung et al. \ https://github.com/frhrdr/vrnn.git
/vmchale/perceptual-hash.git | Perceptual Hash in J \ https://github.com/vmchale/perceptual-hash.git
/jsoftware/jupyter.git | Jupyter notebooks for J \ https://github.com/jsoftware/jupyter.git
/tpavlek/jeopardy-parser.git | Parses the j-archive \ https://github.com/tpavlek/jeopardy-parser.git
/Sukora-Stas/JavaRushTasks.git | J a v a R u s h !       My solution to the JavaRush course tasks. Additiona.. \ https://github.com/Sukora-Stas/JavaRushTasks.git
/kartik2112/VLabs-IIT-KJSCE.git | This is a part of Virtual Labs project (intiated by IITB), contributed by K.. \ https://github.com/kartik2112/VLabs-IIT-KJSCE.git
/NerdToMars/Fringe-pattern-denoising-based-on-deep-learning.git | For articleFringe pattern denoising based on deep learning   DOI: 10.1016/.. \ https://github.com/NerdToMars/Fringe-pattern-denoising-based-on-deep-learning.git
/robertj/GDataCmdLet.git | Powershell cmdlets for Google Apps, GData cmdlet, You can send feedback ore.. \ https://github.com/robertj/GDataCmdLet.git
/myConsciousness/twitter-bot-j.git | Twitter Bot J main repository. \ https://github.com/myConsciousness/twitter-bot-j.git
/MRKonrad/tomato.git | A library to calculate parametric maps in MRI. For details see https://doi... \ https://github.com/MRKonrad/tomato.git
/chuong/ipcamcontrol.git | A python module to control pan-tilt-zoom camera. Currently ACTi IP camera a.. \ https://github.com/chuong/ipcamcontrol.git
/GunterMueller/KLIC.git | KLIC: Portable implementation of KL1. Forked from "https://www.ueda.info.wa.. \ https://github.com/GunterMueller/KLIC.git
/hazimhanif/svd_exp3.git | Replication of AST Neural Network from Zhang J. et. al (2019) and applicati.. \ https://github.com/hazimhanif/svd_exp3.git
/avestura/CraigRobotics.git |  Implementation of Robotics exercises of J. Craig book using F# + Math.NET \ https://github.com/avestura/CraigRobotics.git
/cunyjschool/CUNY-J-School.git | WordPress theme for the CUNY J School \ https://github.com/cunyjschool/CUNY-J-School.git
/chrisob/qpid-broker-j-docker.git | Dockerfile for Apache Qpid Broker-J \ https://github.com/chrisob/qpid-broker-j-docker.git
/iridia/CGGeometry-IRAdditions.git | Obj-C & Obj-J CoreGraphics Additions \ https://github.com/iridia/CGGeometry-IRAdditions.git
/shoya140/JINs.git | J!NS MEME Hackathon, Team JINs \ https://github.com/shoya140/JINs.git
/edrabc/traceability.git | A generic traceability component for J \ https://github.com/edrabc/traceability.git
/mychele/toward-e2e-6g-terahertz-networks.git | Code for M. Polese, J. Jornet, T. Melodia, M. Zorzi, Toward End-to-End, Fu.. \ https://github.com/mychele/toward-e2e-6g-terahertz-networks.git
/shnitzer/Diffusion-Maps-Kalman.git | MATLAB code implementation of the non-Linear object tracking example  from:.. \ https://github.com/shnitzer/Diffusion-Maps-Kalman.git
/ajnirp/j-scripts.git | Collection of J scripts, along with some explanations. Updated sporadically.. \ https://github.com/ajnirp/j-scripts.git
/vvakame/google-in-app-payments.git | Google In-app payments sample project for GAE/J \ https://github.com/vvakame/google-in-app-payments.git
/mjc-/dotfiles.git | "This is UNIX. Stop acting so helpless!" -- Daniel J. Bernstein \ https://github.com/mjc-/dotfiles.git
/tlrobinson/objc2objj.git | Not yet implemented Objective-C to Objective-J compiler \ https://github.com/tlrobinson/objc2objj.git
/jsoma/data-studio-projects-2022.git | Projects for Columbia J School's Data Studio 2022 \ https://github.com/jsoma/data-studio-projects-2022.git
/howonlee/bobdobbshess.git | J. R. "Bob" Dobbs Memorial Inverse Hessian Multiplication \ https://github.com/howonlee/bobdobbshess.git
/flowtsohg/jass-minifier.git | A war3map.j Jass minifier for Warcraft 3. \ https://github.com/flowtsohg/jass-minifier.git
/robotec-ua/eod_robot_j_info.git | Detailed description of the Demine Robot J project. \ https://github.com/robotec-ua/eod_robot_j_info.git
/UOWPhysSoc/Barnes-Hutt-Simulation--James-MattG-.git | Barnes-Hutt algorithm simulation - Archer J. & Griffiths M. \ https://github.com/UOWPhysSoc/Barnes-Hutt-Simulation--James-MattG-.git
/jamesbritt/swingset-old.git | (J)Ruby wrapper for some basic Java Swing components. \ https://github.com/jamesbritt/swingset-old.git
/wdjungst/vimmy.git | A React Game using h,j,k,l for movement \ https://github.com/wdjungst/vimmy.git
/matoruru/vim-hjkl-warning.git | Stop to use h/j/k/l many times. \ https://github.com/matoruru/vim-hjkl-warning.git
/UOWPhysSoc/Barnes-Hutt-Simulation--James-MattG-.git | Barnes-Hutt algorithm simulation - Archer J. & Griffiths M. \ https://github.com/UOWPhysSoc/Barnes-Hutt-Simulation--James-MattG-.git
/HelgeEgil/DigitalTrackingCalorimeterToolkit.git | Toolkit for the Monte Carlo and data analysis for the Digital Tracking Calo.. \ https://github.com/HelgeEgil/DigitalTrackingCalorimeterToolkit.git
/giovannistrona/co-extinctions.git | Code for the paper "Co-extinctions annihilate planetary life during extreme.. \ https://github.com/giovannistrona/co-extinctions.git
/eacooper/HoloLensDistanceARApp.git | Source Code for HoloLens Application described in M. Kinateder, J. Gualtier.. \ https://github.com/eacooper/HoloLensDistanceARApp.git
/HeroResearchGroup/SmartSVM.git | Python package for "Fast Meta-Learning and Adaptive Hierarchical Classifier.. \ https://github.com/HeroResearchGroup/SmartSVM.git
/ReneHeim/MyrtleRust-LemonMyrtle-Classification.git | Code to reproduce results of the article: Heim, R. H. J., Wright, I. J., Ch.. \ https://github.com/ReneHeim/MyrtleRust-LemonMyrtle-Classification.git
/jrfoulds/MixedMembershipWordEmbeddings.git | Code implementing the algorithms in: J. R. Foulds. Mixed Membership Word Em.. \ https://github.com/jrfoulds/MixedMembershipWordEmbeddings.git
/clauswilke/structural_prediction_of_ER.git | Code and data for Shahmoradi et al., Predicting evolutionary site variabili.. \ https://github.com/clauswilke/structural_prediction_of_ER.git
/TheProfessorsLab/Oracle-VocalAI-Interface-DISCONTINUED.git | A custom version of J.A.R.V.I.S. made to be my personal digital assistant w.. \ https://github.com/TheProfessorsLab/Oracle-VocalAI-Interface-DISCONTINUED.git
/exelents/try-gptj-generation.git | A wrapper to simply load GPT-J and  use it for  generation. Uses DeepSpeed .. \ https://github.com/exelents/try-gptj-generation.git
/mdragt/WineQuality.git | Predict the quality of white and red wine from the UCI Machine Learning Rep.. \ https://github.com/mdragt/WineQuality.git
/lkowalick/j-interpreter.git | A breakdown of Arthur Whitney's quickly drafted J interpreter implementatio.. \ https://github.com/lkowalick/j-interpreter.git
/Harry-Muzart/Collab-with-others-N5736-df345-python-NeuroIm-.git | N5736-df345 [#Python-NeuroImaging] Deep Machine Learning (Collab with T Tok.. \ https://github.com/Harry-Muzart/Collab-with-others-N5736-df345-python-NeuroIm-.git
/mgarciaisaia/escribiendo-un-filesystem-fuse.git | Traduccin del "Writing a FUSE Filesystem: a Tutorial" de Joseph J. Pfeiffe.. \ https://github.com/mgarciaisaia/escribiendo-un-filesystem-fuse.git
/teranex/jk-jumps.vim.git | Handle movements with j/k as if they were real jumps \ https://github.com/teranex/jk-jumps.vim.git
/mmoller2k/emu41gcc.git | gcc port of J-F Garnier's HP 41C emulator for DOS \ https://github.com/mmoller2k/emu41gcc.git
/Fayred/solo-write-ups.git | Quelques write-ups concernant les ctfs en solo que j'ai pu raliser \ https://github.com/Fayred/solo-write-ups.git
/0x416c6265646f/sys_read-sys_rename.git | Exercice que j'ai fais sur les syscall sys_read et sys_rename ^^ \ https://github.com/0x416c6265646f/sys_read-sys_rename.git
/mohamedslf/Arduino-Engineering-Kit.git | J'ai commencer  travailler sur le KIT ingnieur de Arduino  \ https://github.com/mohamedslf/Arduino-Engineering-Kit.git
/ymaurer/cdx-summarize.git | Summarize CDX(J) files for MIME analysis per 2nd-level domain \ https://github.com/ymaurer/cdx-summarize.git
/johnsonjh/decmate-ii-rom.git | decmate-ii-rom: Charles J. Lasner's DECmate-II ROM disassembly \ https://github.com/johnsonjh/decmate-ii-rom.git
/tinarskii/wrong-lang.git | l;ylfu8iy[mjkol,k=bd=,i,8o.=h ;jv'c]j' \ https://github.com/tinarskii/wrong-lang.git
/lamoni/j-edi-demo-package.git | Three Packer projects to get a demo environment of J-EDI running \ https://github.com/lamoni/j-edi-demo-package.git
/acfrery/Grading-Reproducibility-in-Remote-Sensing-Articles.git | Position Paper for the J-STARS Special Issue on Reproducible Research in Re.. \ https://github.com/acfrery/Grading-Reproducibility-in-Remote-Sensing-Articles.git
/nakul0305/Jarvis-Demo.git | An interactive web app inspired by iron man's j.a.r.v.i.s. \ https://github.com/nakul0305/Jarvis-Demo.git
/abichown/SPA-Code.git | This is the code used in the paper A Simulated Annealing approach to the s.. \ https://github.com/abichown/SPA-Code.git
/ilhamarrouf/OngkirApp.git | Cek Ongkir All-in-One JNE, J&T, Pos Indonesia, TIKI 2018. Tarif pengiriman .. \ https://github.com/ilhamarrouf/OngkirApp.git
/ncfrey/magnetic-topological-materials.git | Supplementary material for N. C. Frey, M. K. Horton, J. M. Munro, S. M. Gri.. \ https://github.com/ncfrey/magnetic-topological-materials.git
/humdrum-tools/bach-wtc.git | Digital edition of J.S. Bach's Well-tempered Clavier, Books I & II in the H.. \ https://github.com/humdrum-tools/bach-wtc.git
/lruthotto/QSMReconstruction.m.git | Codes for: J.Chung, L.Ruthotto, Computational Methods for Image Reconstruct.. \ https://github.com/lruthotto/QSMReconstruction.m.git
/hferrada/rmq.git | This code creates a data structure to compute the RMQ(i,j) on an array of i.. \ https://github.com/hferrada/rmq.git
/duett/community-detection.git | Community Detection algorithm based on Reichardt J, Bornholdt S.(2006) Stat.. \ https://github.com/duett/community-detection.git
/halmgren/Pipeline_article_NeuroImage_variability_reliability_Effective_connectivity_rsfMRI.git | This repository contains the code that was used for the analyses of the art.. \ https://github.com/halmgren/Pipeline_article_NeuroImage_variability_reliability_Effective_connectivity_rsfMRI.git
/oliverchampion/PCA_denoising.git | The PCA denoising matlab algorithm used in the publication "Principal compo.. \ https://github.com/oliverchampion/PCA_denoising.git
/XanderJC/transductive-dropout.git | Unlabelled Data Improves Bayesian Uncertainty Calibration under Covariate S.. \ https://github.com/XanderJC/transductive-dropout.git
/prijatelj/handwriting_recognition_with_novelty.git | The code for the ICDAR 2021 paper, "Handwriting Recognition with Novelty" b.. \ https://github.com/prijatelj/handwriting_recognition_with_novelty.git
/kutaykoylan/MIPS_Processor_in_Verilog.git | add,sub,and,or,lw,sw,or,beq,j,slt,bne,bgtz,blez,bltz,bgez,jr,nor,addi,andi,.. \ https://github.com/kutaykoylan/MIPS_Processor_in_Verilog.git
/amasiero/2TDSJ-2020.git | Repositrio da tuma J de Anlise e Desenvolvimento na FIAP ano de 2020, par.. \ https://github.com/amasiero/2TDSJ-2020.git
/fasiha/curtiz.git | Markdown-based persistence for Japanese flashcards and quizzes, integrating.. \ https://github.com/fasiha/curtiz.git
/dukesrg/logue-sdk-vscode.git | Visual Studio Code template project for logue-sdk. With predefined debug pr.. \ https://github.com/dukesrg/logue-sdk-vscode.git
/ShubhankarKG/RUL_Prediction_SVM.git | Bearing remaining useful life prediction using support vector machine and h.. \ https://github.com/ShubhankarKG/RUL_Prediction_SVM.git
/deevashwer/Fully-Homomorphic-DGHV-and-Variants.git | Fully Homomorphic C++ implementation of DGHV scheme using GNU MP library an.. \ https://github.com/deevashwer/Fully-Homomorphic-DGHV-and-Variants.git
/altescy/dacompe-27-jleague.git | J https://deepanalytics.jp/compe/27/ \ https://github.com/altescy/dacompe-27-jleague.git
/the-coding-pie/voice_assistant.git | A simple python voice assistant inspired by J.A.R.V.I.S. For tutorial on ho.. \ https://github.com/the-coding-pie/voice_assistant.git
/dherath/Markov_model_Opportunistic_RequestRouting.git | [code] "A Markovian Model for Analyzing Opportunistic Request Routing in Wi.. \ https://github.com/dherath/Markov_model_Opportunistic_RequestRouting.git
/ramsys28/REGICA.git | Manousos A. Klados, Christos Papadelis, Christoph Braun, Panagiotis D. Bami.. \ https://github.com/ramsys28/REGICA.git
/JohnJohnZhou/mmWave-Tensor-Channel-Estimation.git | Reference: ''Z. Zhou, J. Fang, L. Yang, H. Li, Z. Chen and R. S. Blum, "Low.. \ https://github.com/JohnJohnZhou/mmWave-Tensor-Channel-Estimation.git
/imzhuhl/hsid-cnn-pytorch.git | PyTorch version of HSID-CNN. Original paper: Q. Yuan, Q. Zhang, J. Li, H. S.. \ https://github.com/imzhuhl/hsid-cnn-pytorch.git
/thengl/Soil-nutrient-maps-of-Sub-Saharan-Africa-article.git | Hengl, T., Leenaars, J. G., Shepherd, K. D., Walsh, M. G., Heuvelink, G. B... \ https://github.com/thengl/Soil-nutrient-maps-of-Sub-Saharan-Africa-article.git
/rebryant/pgbdd-artifact.git | Demonstration of BDD-based SAT solver that generates checkable proofs of un.. \ https://github.com/rebryant/pgbdd-artifact.git
/smaegol/LINE_1_RACE_seq_analysis.git | Scripts and data used during the analysis of LINE-1 RACE seq tail-seq outpu.. \ https://github.com/smaegol/LINE_1_RACE_seq_analysis.git
/hanieh11/LoserOut-Tournament-Firework-algorithm.git | Implementation of J. Li and Y. Tan, "Loser-Out Tournament-Based Fireworks A.. \ https://github.com/hanieh11/LoserOut-Tournament-Firework-algorithm.git
/Chichilnisky-Lab/shah-elife-2020.git | Code for "Nishal P. Shah, N. Brackbill, C. Rhoades, A. Tikidji-Hamburyan, G.. \ https://github.com/Chichilnisky-Lab/shah-elife-2020.git
/kastnerkyle/vrnn-samples.git | Audio samples from "A Recurrent Latent Variable Model for Sequential Data";.. \ https://github.com/kastnerkyle/vrnn-samples.git
/sandtable/pygsl-div.git | Python implementation of GSL-div as described in "An information theoretic .. \ https://github.com/sandtable/pygsl-div.git
/Baek-Myung-Sun/Deep-MIMO-Detection.git | Data for IEEE Trans. Broadcasting Paper: M. Baek, S. Kwak, J. Jung, H. M. K.. \ https://github.com/Baek-Myung-Sun/Deep-MIMO-Detection.git
/edu-yinzhaoxia/Reversible-data-hiding-based-on-reducing-invalid-shifting-of-pixels-in-histogram-shifting.git | This code is the implementation of the paper "Reversibledatahidingbased.. \ https://github.com/edu-yinzhaoxia/Reversible-data-hiding-based-on-reducing-invalid-shifting-of-pixels-in-histogram-shifting.git
/GISCheng/multi-scale-anomaly.git | Codes and data for a published work "Multi-scale detection and interpretati.. \ https://github.com/GISCheng/multi-scale-anomaly.git
/marvy-codes/ResponsiveDesign_Project.git | A responsive design design project, ref to CSS_in_depth by Keith J.  Grant,.. \ https://github.com/marvy-codes/ResponsiveDesign_Project.git
/ivangtorre/multifrac.git | This is a plugin for ImageJ2 for multifractal analysis of 2D and 3D images... \ https://github.com/ivangtorre/multifrac.git
/jlawyerorg/j-lawyer-developer-quickstart.git | Repository with documentation, scripts and tools for building all sub proje.. \ https://github.com/jlawyerorg/j-lawyer-developer-quickstart.git
/BiteenMatlab/SMALL-LABS.git | Code and guides for implementing the SMALL-LABS algorithm to localize and m.. \ https://github.com/BiteenMatlab/SMALL-LABS.git
/jrfoulds/Stochastic-CVB0.git | Code implementing Stochastic CVB0 (SCVB0), from: J. R. Foulds, L. Boyles, C.. \ https://github.com/jrfoulds/Stochastic-CVB0.git
/mariannadesantis/MOMIX.git | a branch and bound method for multi-objective mixed integer convex optimiza.. \ https://github.com/mariannadesantis/MOMIX.git
/drwuHUST/iRDM.git | Matlab source code of the iRDM algorithm in the paper: Z. Liu, X. Jiang, H... \ https://github.com/drwuHUST/iRDM.git
/hagenaue/BrainInABlender.git | An R package that allows the user to estimate the relative cell type balanc.. \ https://github.com/hagenaue/BrainInABlender.git
/hagenaue/CellTypeAnalyses_Darmanis.git | This repository contains the full code for the cell type analyses applied t.. \ https://github.com/hagenaue/CellTypeAnalyses_Darmanis.git
/Aryia-Behroziuan/References.git |  Poole, Mackworth & Goebel 1998, p. 1.  Russell & Norvig 2003, p. 55.  Defi.. \ https://github.com/Aryia-Behroziuan/References.git
/ziko55453/KomputerSer.git | !DOCTYPE html> <html>     <head>                 <title>v Komputer servisi<.. \ https://github.com/ziko55453/KomputerSer.git
/NhaPhatHanh/github.git |    <!DOCTYPE html> <html lang="en" data-color-mode="auto" data-light-theme=.. \ https://github.com/NhaPhatHanh/github.git
/jdotjdot/blog.git | J.J.'s blog \ https://github.com/jdotjdot/blog.git
/exercism/j.git | Exercism exercises in J. \ https://github.com/exercism/j.git
/connamara/quickfix-jruby.git | QuickFIX/J Gemified for JRuby. \ https://github.com/connamara/quickfix-jruby.git
/linhphi9x94/MIUI8_Patchrom_Samsung_js01lte.git | MIUI 8 for Samsung Galaxy J \ https://github.com/linhphi9x94/MIUI8_Patchrom_Samsung_js01lte.git
/jerome-benoit/charging-stations-simulator.git | OCPP-J charging stations simulator \ https://github.com/jerome-benoit/charging-stations-simulator.git
/Polurival/JRHW.git | J a v a R u s h ! \ https://github.com/Polurival/JRHW.git
/harig00/MMASS.git | Frederik J Simons Mostly Matlab Archive of Scientific Software \ https://github.com/harig00/MMASS.git
/Adalab/soluciones-alumnas-j.git | Ejercicios resueltos por las Adalabers de la promo J \ https://github.com/Adalab/soluciones-alumnas-j.git
/benoit-girard/sBCBG.git | A spiking version of the BCBG model (Linard & Girard, 2014, J. Comput. Neu.. \ https://github.com/benoit-girard/sBCBG.git
/fullstackjournalists/intro-to-coding-for-journalists.git | Resources for Full Stack Journalists groups and j-school classes that want .. \ https://github.com/fullstackjournalists/intro-to-coding-for-journalists.git
/vbatista73/TTSOFT.git | J. Chem. Theory Comput. 13: 4034-4042 (2017) \ https://github.com/vbatista73/TTSOFT.git
/NikitaD1/European-Option-Valuation-with-Heston-stochastic-volatility-with-Monte-Carlo.git | Adapted from  Derivatives Analytics by Dr. Yves J. Hilpisch \ https://github.com/NikitaD1/European-Option-Valuation-with-Heston-stochastic-volatility-with-Monte-Carlo.git
/shababo/psc-detection-dist.git | Distribution of code implementing the Bayesian PSC detection algorithm desc.. \ https://github.com/shababo/psc-detection-dist.git
/agladstein/SimPrily.git | SimPrily: A Python framework to simplify high-throughput genomic simulation.. \ https://github.com/agladstein/SimPrily.git
/voytekresearch/Cole_2017.git | Analysis code used to create figures in Cole et al., 2017, J Neuro \ https://github.com/voytekresearch/Cole_2017.git
/davide/enotify.git | erlang filesystem monitor (jnotify - j + erlang-inotify) \ https://github.com/davide/enotify.git
/interregna/JArrow.git | J language wrapper for Apache Arrow \ https://github.com/interregna/JArrow.git
/m-ezekiel/Regression-Modeling-with-R.git | Exercises and data sets for "A Modern Approach to Regression with R" by Sim.. \ https://github.com/m-ezekiel/Regression-Modeling-with-R.git
/rdhyee/bach-music-info.git | Data about the music and life of J. S. Bach \ https://github.com/rdhyee/bach-music-info.git
