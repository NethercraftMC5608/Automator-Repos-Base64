/etgocode/TabToWindow | Autohotkey script to move the current tab in firefox to a new window. \ https://github.com/etgocode/TabToWindow.git
/ColdMacaroni/office-live-ff | small set of bash scripts to start office live apps in firefox \ https://github.com/ColdMacaroni/office-live-ff.git
/ProgramistaZpolski/no-more-ie | A script that redirects Internet Explorer users to Mozilla's Firefox Downlo \ https://github.com/ProgramistaZpolski/no-more-ie.git
/RedAndBlueEraser/tfs-ff-ctrl-b-restorer | A JavaScript script to restore Team Foundation Server 2015 rich text editor \ https://github.com/RedAndBlueEraser/tfs-ff-ctrl-b-restorer.git
/cardsurf/kiosk-firefox | A script that launches Firefox in kiosk mode for Linux Mint Cinnamon \ https://github.com/cardsurf/kiosk-firefox.git
/anicet-rakotonirina/JiraFirefox | A Windows Batch script that uses jiracli to create Jira tickets from the Fi \ https://github.com/anicet-rakotonirina/JiraFirefox.git
/PSANON/firefox-console-bork | A script that crashes a firefox tab if devtools console is open \ https://github.com/PSANON/firefox-console-bork.git
/rodrigomaruyama/browser_history_report | Python Script to create a report from firefox and google chrome \ https://github.com/rodrigomaruyama/browser_history_report.git
/fboulnois/user | A custom user.js script to configure Firefox user, privacy and security set \ https://github.com/fboulnois/user.js.git
/cwfulford/mmailto | Wrapper script to invoke mutt from the mailto: URI in firefox. \ https://github.com/cwfulford/mmailto.git
/pmeeke/foxyproxy | Simple bash script to connect to a server a run Firefox via SOCKS v5 proxy \ https://github.com/pmeeke/foxyproxy.git
/Misko-2083/laughing-avenger | A script to choose between firefox and google chrome as default browser \ https://github.com/Misko-2083/laughing-avenger.git
/rafspiny/firefox-profiles-recovery | A script to easily recover Firefox profiles after a system problem. \ https://github.com/rafspiny/firefox-profiles-recovery.git
/shalomb/docker-firefox | Scripts to build/run a local firefox{,-esr,-dev} instance inside docker \ https://github.com/shalomb/docker-firefox.git
/danielnyga/cookie-monster | Script to delete all but a white-listed set of cookies from multiple Firefo \ https://github.com/danielnyga/cookie-monster.git
/jeremy-jtlo/tab-renamer | A first attempt at developing and using Firefox WebExtensions using backgro \ https://github.com/jeremy-jtlo/tab-renamer.git
/Mossop/symmetrical-telegram | A set of scripts for comparing the various methods of patching Firefox inst \ https://github.com/Mossop/symmetrical-telegram.git
/Untesler/firefox-playerctl-notifier | The script to automatically send a notification when has some event occurs  \ https://github.com/Untesler/firefox-playerctl-notifier.git
/rpasta42/move-tabs | Python script to move tabs between browsers (e.g. firefox and chrome). \ https://github.com/rpasta42/move-tabs.git
/app-br3aker/port-browser | script browse to open nmap ports using http or https via firefox \ https://github.com/app-br3aker/port-browser.git
/rtanglao/rt-fennec-gplay | scripts for working with firefox for android google play reviews and replie \ https://github.com/rtanglao/rt-fennec-gplay.git
/uezeaka/Glassdoor | Selenium script for scrapping job information from Glassdoor.com (Specifica \ https://github.com/uezeaka/Glassdoor.com-Job-Script.git
/S0yKaf/FireMote | a simple script to translate wiimote inputs to keyboard shortcuts for firef \ https://github.com/S0yKaf/FireMote.git
/die-deutsche-kinemathek/kmt-logon | script for setting up mozilla (ie., thunderbird or firefox) profiles withou \ https://github.com/die-deutsche-kinemathek/kmt-logon.git
/Iotacist/DataMaid | Simple Batch script to clean-up Windows based machines. Supports: IE, Edge, \ https://github.com/Iotacist/DataMaid.git
/jeschwarz0/RandomMusicVideos | A set of scripts to parse Firefox bookmarks to create a music video playlis \ https://github.com/jeschwarz0/RandomMusicVideos.git
/nils-ohlmeier/hello-log-analyzer | Python scripts to process and agregate Firefox Hello ICE failure logs \ https://github.com/nils-ohlmeier/hello-log-analyzer.git
/KFaded22/CozyTubeSynchTubeFix | Fixes the Google Drive Script for Non-FireFox or Chrome Browsers. \ https://github.com/KFaded22/CozyTubeSynchTubeFix.git
/rpl/firefox-webext-what-the-global | Collect and visualize the globals defined by the Firefox from ext-*.js API  \ https://github.com/rpl/firefox-webext-what-the-global.git
/gusajr/whatsapp_sender_web_scrapping | This script helps to send messages automatically from Whatsapp web with fir \ https://github.com/gusajr/whatsapp_sender_web_scrapping.git
/vickz84259/firefox_history | Simple python script that analyses the contents of Firefox's places.sqlite  \ https://github.com/vickz84259/firefox_history.git
/retr0tinfoilhat/StudyScripts | Just a script to launch firefox with dmenu selecting a link, no big deal. \ https://github.com/retr0tinfoilhat/StudyScripts.git
/rohitsuratekar/ProxyChanger | Small python script to change your proxy setting in firefox as well as inte \ https://github.com/rohitsuratekar/ProxyChanger.git
/cfont/user-agent-configs | Config files and scripts associated with User-Agent switching in browsers,  \ https://github.com/cfont/user-agent-configs.git
/janelznic/userscripts | User scripts for Greasemonkey extension in Firefox and other browsers like  \ https://github.com/janelznic/userscripts.git
/kshivang/Fortinet-AutoSign-Plugin | Firefox Plugin auto sign in fortinet server(on IITK network). Main script i \ https://github.com/kshivang/Fortinet-AutoSign-Plugin.git
/TeamJoe/FacebookPokeBot | Just open up and run this script using Shift + F4 in Firefox \ https://github.com/TeamJoe/FacebookPokeBot.git
/metroid2010/nightly-download-and-install | Little script in Bash to automate downloading and setting up Firefox Nightl \ https://github.com/metroid2010/nightly-download-and-install.git
/MrWowsers/brightwheelsync | Little script to download pictures from brightwheel.com using selenium and  \ https://github.com/MrWowsers/brightwheelsync.git
/poyopoyo0/reorder-script-for-opml | This script is to sort the outline tags of "Firefox feeds backup.opml" in r \ https://github.com/poyopoyo0/reorder-script-for-opml.git
/ui3o/external-extension | Chrome and Firefox extension for loading remote script from external reposi \ https://github.com/ui3o/external-extension.git
/nukeador/fxaddons-stats | Scripts to fetch some stats from Firefox addons hosted at addons.mozilla.or \ https://github.com/nukeador/fxaddons-stats.git
/longgangfan/install_flash_player | a simple bash script to install and update flash player plugins for Firefox \ https://github.com/longgangfan/install_flash_player.git
/ToFab/UserScript-Firefox-Touch-Navigation | Tampermonkey script that enable back and forward navigation using touch in  \ https://github.com/ToFab/UserScript-Firefox-Touch-Navigation.git
/vlood/fakturiranebg-csv-import | A script for importing invoices to fakturirane.bg using iMacros extension f \ https://github.com/vlood/fakturiranebg-csv-import.git
/Felipeasg/recovery_firefox | Save actual tabs firefox (shell script) read recovery saved and open (pytho \ https://github.com/Felipeasg/recovery_firefox.git
/gitter-badger/debian-Flash-Updater | Pequeños scripts para actualizar de forma automática Flash de Firefox y Chr \ https://github.com/gitter-badger/debian-Flash-Updater.git
/Steven-Eardley/chrome-to-firefox | A script to convert a WebExtension for Chrome to run on Firefox. \ https://github.com/Steven-Eardley/chrome-to-firefox.git
/cyclingzealot/RTfilmCan | Firefox GreaseMonkey script to add Rotten Tomatoes info to filmcan.ca \ https://github.com/cyclingzealot/RTfilmCan.git
/cognizo/firefox-addon-content-script-has-own-property | Example of an object missing hasOwnProperty in a firefox addon content scri \ https://github.com/cognizo/firefox-addon-content-script-has-own-property.git
/hdd1013/FFProfileLauncher | A small proxy script that opens Mozilla Firefox with profile and other sett \ https://github.com/hdd1013/FFProfileLauncher.git
/jeffwright13/url_get | Script to send HTTP GET request to a list of URLs using Selenium & Firefox \ https://github.com/jeffwright13/url_get.git
/hewipera/Make-FirefoxAppSource | A PowerShell script to automate the creation of a customized Firefox ESR in \ https://github.com/hewipera/Make-FirefoxAppSource.git
/onesidedsquare/FirefoxAudit | simple script that audits and or configures firefox to DoD STIG standards \ https://github.com/onesidedsquare/FirefoxAudit.git
/michalskigrzegorz/firefox_open_url_on_tabs | POWERSHELL | Script who start FIREFOX and open defined url on the tabs \ https://github.com/michalskigrzegorz/firefox_open_url_on_tabs.git
/Georacer/session_manager_exporter | Python script to export stored sessions from Session Manager plugin into Fi \ https://github.com/Georacer/session_manager_exporter.git
/dstaulcu/TA-AppCrashGather | Script-based Splunk input to extract, transform, and forward firefox crash  \ https://github.com/dstaulcu/TA-AppCrashGather.git
/dinkel/firefox-customizer | Shell script that loads addons and configures Firefox according to my needs \ https://github.com/dinkel/firefox-customizer.git
/suzukikijai/firefox-custom-setup-bash | An interactive GUI Installation and setup bash script to setup custom versi \ https://github.com/suzukikijai/firefox-custom-setup-bash.git
/victorh18/FirefoxUpdate | Script for updating Mozilla's Firefox browser under Debian systems that com \ https://github.com/victorh18/FirefoxUpdate.git
/HoloPollock/Firefox-Bitly | a short shell script to upload file to firefox send then get shortened link \ https://github.com/HoloPollock/Firefox-Bitly.git
/MatthewAllDev/Firefox_history_parser | This script convert Firefox history from .sqlite to .xls(x) file. \ https://github.com/MatthewAllDev/Firefox_history_parser.git
/MrManBrother/IMGFishing | A short bash script and README for IMG fishing on youtube w/ firefox \ https://github.com/MrManBrother/IMGFishing.git
/electrotype/hipchat-better-notifications-tampermonkey-script | Tampermonkey script (Chrome and Firefox tested) to not miss any new message \ https://github.com/electrotype/hipchat-better-notifications-tampermonkey-script.git
/mbhutton/copy4workflowy | Firefox/Chrome user script for copying page title and URL, for pasting into \ https://github.com/mbhutton/copy4workflowy.git
/alexaoh/screenRecorder | Automated script to open Firefox window and record the screen with FFmpeg.  \ https://github.com/alexaoh/screenRecorder.git
/Bjoern/vivaldiBookmarkTags | A throwaway script for importing Firefox bookmark tags into vivaldi browser \ https://github.com/Bjoern/vivaldiBookmarkTags.git
/sich97/tabloader | A script that loads all open firefox tabs (useful after restart) \ https://github.com/sich97/tabloader.git
/jellyfish123123/ff-startpage-helper | helper script to make firefox use and html file for newtab with some other  \ https://github.com/jellyfish123123/ff-startpage-helper.git
/xymerone/web-auto-build | A script for automatically updating the Firefox browser, for visual design  \ https://github.com/xymerone/web-auto-build.git
/maartenkuijpers/SeleniumTests | Project that allows to run Selenium scripts generated with the SeleniumIDE  \ https://github.com/maartenkuijpers/SeleniumTests.git
/SKagai/password-git | The working directory for the group 4 members. Contains bash scripts and do \ https://github.com/SKagai/password-git.git
/ngkengwooi/firefox-upstream | Launcher script for Linux computers to launch Firefox from the user's home  \ https://github.com/ngkengwooi/firefox-upstream.git
/graphnode/dewormer | Chrome and Firefox user script that allows the user to hide threads (on Spa \ https://github.com/graphnode/dewormer.git
/neox-inside/mob_popunder | A mobile popunder script works on most of mobile browsers, Chrome 43+, Chro \ https://github.com/neox-inside/mob_popunder.git
/civictd04/Drop-Alert-Tab-Reloader | Various scripts to be used with Tab Reloader extension for FireFox to drop  \ https://github.com/civictd04/Drop-Alert-Tab-Reloader.git
/joewalker/fxbuild | Some hacky scripts to help build Firefox across a number of local machines  \ https://github.com/joewalker/fxbuild.git
/GregorR/musl-firefox | Patches to Firefox to make it build with musl, as well as scripts to build  \ https://github.com/GregorR/musl-firefox.git
/kbaseio/powershell-firefox-prefsjs | A powershell script that modifies your default Firefox preferences file (Us \ https://github.com/kbaseio/powershell-firefox-prefsjs.git
/kevinthenard/adblock-detect | Script JS who detect the Adblock or Adblock Plus plugin on Firefox / Google \ https://github.com/kevinthenard/adblock-detect.git
/tlwhitec/update-firefox-esr | A tiny script that will allow you to install/update the Firefox ESR browser \ https://github.com/tlwhitec/update-firefox-esr.git
/codingepaduli/firefox_bookmarks_backup | A simple script (bash / python) to backup all Firefox bookmarks on GitHub p \ https://github.com/codingepaduli/firefox_bookmarks_backup.git
/zhumingcheng697/BackstopJS-Test | A Script that Automates BackstopJS Tests in Chromium, Firefox, or WebKit En \ https://github.com/zhumingcheng697/BackstopJS-Test.git
/rodrigorgs/withdrawal-firefox | Data analysis scripts for the paper "Characterization of Bug Fix Withdrawal \ https://github.com/rodrigorgs/withdrawal-firefox.git
/arusahni/ffdev-installer | This script installs and upgrades 64-bit Firefox Aurora on Ubuntu Linux sys \ https://github.com/arusahni/ffdev-installer.git
/rpasta42/ff-bookmark-scrot | Scripts to dump firefox SQLite bookmark database into text file and take sc \ https://github.com/rpasta42/ff-bookmark-scrot.git
/ivankrukov/m3u8fix | A simple webRequest background script addon to fix sites with a bad m3u8 co \ https://github.com/ivankrukov/m3u8fix.git
/danhill600/gnuscreen_urlscan | This script and a screen rc binding allow you to scan for urls and launch t \ https://github.com/danhill600/gnuscreen_urlscan.git
/jaybee202/usual_suspects | Script that uses a Firefox webdriver to loop through commonly used applicat \ https://github.com/jaybee202/usual_suspects.git
/ivanlopezmunain/Data_Visualization-JavaScript | Ejemplos de programación con Java Script, usando D3.js para visualización d \ https://github.com/ivanlopezmunain/Data_Visualization-JavaScript.git
/fenyrshell/firefox-installer | This script allows you to install the latest Firefox release for operating  \ https://github.com/fenyrshell/firefox-installer.git
/ashrude/csv-to-KeePass | A simple script to convert a csv file containing passwords you get from fir \ https://github.com/ashrude/csv-to-KeePass.git
/algodelinux/addFNMTfirefox | Script para añadir el certificado de la FNMT a Firefox en todas las cuentas \ https://github.com/algodelinux/addFNMTfirefox.git
/achristensen8073/remedy_script | Python script to automate creation of Remedy profile based on open and exis \ https://github.com/achristensen8073/remedy_script.git
/tanrax/linux-install-firefox | Bash script to install the latest version of Firefox on Linux with desktop  \ https://github.com/tanrax/linux-install-firefox.git
/ricgu8086/Lastpass2Lockwise | Want to move your Lastpass data to another password manager such as Firefox \ https://github.com/ricgu8086/Lastpass2Lockwise.git
/danfarrow/Ebay-Price-is-Right-Xmas-Quiz | Firefox Greasemonkey script to run a fun quiz where players guess the selli \ https://github.com/danfarrow/Ebay-Price-is-Right-Xmas-Quiz.git
/jmizv/DiscogsGreasemonkeyScripts | A collection of scripts for the Firefox Greasemonkey addon that helps to wo \ https://github.com/jmizv/DiscogsGreasemonkeyScripts.git
/rafaelpereira97/cookieGrabber | Cibersecurity fun, that short script dumps all the cookies of chrome/firefo \ https://github.com/rafaelpereira97/cookieGrabber.git
/keffinel/ResourceSaver | A Firefox extension that disables non-essential scripts on web pages to sav \ https://github.com/keffinel/ResourceSaver.git
/BharatBabbar28/HTTPS_Certificate_Import_In_Mozilla_Firefox_Browser | Hi All, This script will help you to deploy Https Certificate on Mozilla Fi \ https://github.com/BharatBabbar28/HTTPS_Certificate_Import_In_Mozilla_Firefox_Browser.git
/knotapun/proxy-firefox | A script that runs ssh as a SOCKS proxy for Firefox, and then cleans up aft \ https://github.com/knotapun/proxy-firefox.git
/martin-sweeny/import-base64-script | I was noticing issues with having a base64 encoded data URI for script tags \ https://github.com/martin-sweeny/import-base64-script.git
/OS2World/APP-INTERNET-mozinst | This is a REXX script and associated tool to add some program objects to th \ https://github.com/OS2World/APP-INTERNET-mozinst.git
/LastSalmonMan/HTTP_Cookie_Hijacker | Simple Python3 script which can be used to hijack HTTP session and inject c \ https://github.com/LastSalmonMan/HTTP_Cookie_Hijacker.git
/thuong61/Selenium-Test-Mantis | Sử dụng Selenium WebDriver tạo script test ứng dụng Mantis chạy bằng trình  \ https://github.com/thuong61/Selenium-Test-Mantis.git
/adocampo/firefox-to-transmission-remote | Just a little script to use in conjuntion with transmission-cli and firefox \ https://github.com/adocampo/firefox-to-transmission-remote.git
/sanjana1411/GoogleTranslator | The repository contains Python script to do ENG-HINDI inter-translation usi \ https://github.com/sanjana1411/GoogleTranslator.git
/johnmarcc/OpenCV_BanquePostale_AccountStatement | Python script to download Bank account statements from french bank with a f \ https://github.com/johnmarcc/OpenCV_BanquePostale_AccountStatement.git
/4r0n3/DSC-installer-code | Brute force script to be ran in Firefox employing denvera's kernel driver a \ https://github.com/4r0n3/DSC-installer-code.git
/victormacedo996/GitHub-bot | A Github bot that automates the creation of new repositories. This script u \ https://github.com/victormacedo996/GitHub-bot.git
/DukeZilla/FoxMic-Project | A simple project that turns your wifi on when firefox is opened using the f \ https://github.com/DukeZilla/FoxMic-Project.git
/haku1806/Linux-to-Windows-with-QEMU | One Script for Auto installation of Windows Server into a Linux Server. Scr \ https://github.com/haku1806/Linux-to-Windows-with-QEMU.git
/setsaun2007/dave-shultz- | Shared components used by Firefox and other Mozilla software, including han \ https://github.com/setsaun2007/dave-shultz-.git
/frankclaassens/hardended-fox | A script to bootstrap latest Firefox ESR for macOS along with hardened Mozi \ https://github.com/frankclaassens/hardended-fox.git
/marvinyan/br-slots-bot | A quick and dirty script for obtaining 50% off codes (1% chance) from the B \ https://github.com/marvinyan/br-slots-bot.git
/captainrashid/DockerBashScript | This Bash script for auto download Docker & run httpd server after that ope \ https://github.com/captainrashid/DockerBashScript.git
/kylekirkby/FirefoxCredentialHarvester | A Python script which allows users to quickly grab and decrypt the signon d \ https://github.com/kylekirkby/FirefoxCredentialHarvester.git
/DestyNova/resurrectff | Tiny Lua script that opens a Firefox sessionstore.js file and swaps the clo \ https://github.com/DestyNova/resurrectff.git
/suzukikijai/ubuntu-Developer-essentials-bash | A GUI installation script to setup a freshly installed ubuntu machine with  \ https://github.com/suzukikijai/ubuntu-Developer-essentials-bash.git
/D09r/CryptoMining-Blocker | CryptoMining Blocker for Google Chrome and Firefox browsers blocks cryptomi \ https://github.com/D09r/CryptoMining-Blocker.git
/devashishchakraborty/random-godaddy-account-creator | A Python Script to open the Firefox browser and create a GoDaddy Account wi \ https://github.com/devashishchakraborty/random-godaddy-account-creator.git
/dhelly/loghar | Script simples para extrair dados de log do arquivo de rede do firefox(.har \ https://github.com/dhelly/loghar.git
/shurshun/docker-slimerjs | SlimerJS needs it to open webpage and executes your script. It uses in fact \ https://github.com/shurshun/docker-slimerjs.git
/inuitviking/redir | Firefox has a tendency to block mixed content. Link to this script with the \ https://github.com/inuitviking/redir.php.git
/jasseral/ubuntukioskmode | This script enable an advanced kiosk mode and open firefox with a URL pre c \ https://github.com/jasseral/ubuntukioskmode.git
/hebekat/discord_token_login | This is python script that takes a list of tokens, and with the help of sel \ https://github.com/hebekat/discord_token_login.git
/iTZUNAMI/php-js-strong-popup-noref | a very strong popup script that will bypass firefox and chrome blocks. adde \ https://github.com/iTZUNAMI/php-js-strong-popup-noref.git
/nafi999/BrowserTest | Wrote automated test scripts to test Firefox browser to search for a specif \ https://github.com/nafi999/BrowserTest.git
/Xaelitry/YTWindowFinder | A simple script that checks for a Firefox or Chrome tab with youtube open w \ https://github.com/Xaelitry/YTWindowFinder.git
/HarshwardhanSingh/launcher | Python script to launch much needed apps at system boot-up. Currently works \ https://github.com/HarshwardhanSingh/launcher.git
/saanpritom/Age-Calculator | Age Calculator is Firefox OS mobile app developed using HTML5, CSS3 and Jav \ https://github.com/saanpritom/Age-Calculator.git
/Tech-AB/Improve-Privacy-Use-multiple-self-restoring-Browsers | http://www.tech-ab.net/de/automation/improve-privacy-use-multiple-self-rest \ https://github.com/Tech-AB/Improve-Privacy-Use-multiple-self-restoring-Browsers.git
/nozzlegear/ff-script-loader | This is a small Firefox extension that will load a script into the DOM of y \ https://github.com/nozzlegear/ff-script-loader.git
/JaerenTredway/khan-academy-override-settings | This is a script for the Chrome and Firefox TamperMonkey extension that set \ https://github.com/JaerenTredway/khan-academy-override-settings.git
/SavSanta/w3cselenium-tcl | Modified selenium-tcl package for usage of the W3C WebDriver (primarily for \ https://github.com/SavSanta/w3cselenium-tcl.git
/jlivingstonsg/2019-script-redirect-with-timer | Have now a link to robot script  that redirect with timer, that work in Fir \ https://github.com/jlivingstonsg/2019-script-redirect-with-timer.git
/AndrewBuiltThis/FireFoxy | This is a simple .bat script that can be run to modify Firefox’s default co \ https://github.com/AndrewBuiltThis/FireFoxy.git
/m8u/TwitterLargeThumbnails | A small content script that resizes the image containers in Twitter feed to \ https://github.com/m8u/TwitterLargeThumbnails.git
/SergioFernandezCordero/reciosbot | ReciosBot: This stupid script uses firefox headless over selenium to launch \ https://github.com/SergioFernandezCordero/reciosbot.git
/hardpenguin/firefox_downloader | A shell script that downloads the latest stable version of Firefox for Linu \ https://github.com/hardpenguin/firefox_downloader.git
/bitquick/gmail-add-on-bar-destroyer | This script simply removes the Gmail Add-On bar on the right hand side of t \ https://github.com/bitquick/gmail-add-on-bar-destroyer.git
/tanmaykumar1993/ColorGame | This is a brain & puzzle game that is developed especially for the Firefox  \ https://github.com/tanmaykumar1993/ColorGame.git
/Queuecumbr/user-overrides | My overrides of gHacks user.js for Firefox provided at https://github.com/a \ https://github.com/Queuecumbr/user-overrides.js.git
/Cryptovector/New_Wallhere_Downloader | Python Script for Wallhere scraping. Supports Login for Full Resolution Ima \ https://github.com/Cryptovector/New_Wallhere_Downloader.git
/Argo202/torexploit | I have a developed a JS script to exploit the code in Firefox version 41-50 \ https://github.com/Argo202/torexploit.git
/GeekyShiva/favouritetab-open-addon | This is a fun and learning addon made especially for firefox to open your f \ https://github.com/GeekyShiva/favouritetab-open-addon.git
/nikil9865/InstaBot | A collection of Python scripts that automates the Firefox browser to log on \ https://github.com/nikil9865/InstaBot.git
/renzan90/linkedin-login-script | #An interesting Python script that automates LinkedIn login process. webdri \ https://github.com/renzan90/linkedin-login-script.git
/balintfarago/imageuploadpreview | This script is intended for forms where the user needs to upload an image t \ https://github.com/balintfarago/imageuploadpreview.js.git
/drberecz/Monty-Python-spam | Selenium/python3/firefox script to automate sending malicious mail . . . ex \ https://github.com/drberecz/Monty-Python-spam.git
/tbhogstrom/selenium | A quick script to load a webpage or set of webpages with selenium, use fire \ https://github.com/tbhogstrom/selenium.git
/zancas/ephemer_profile | Frequently I want an ephemeral Firefox process. This script spawns such pro \ https://github.com/zancas/ephemer_profile.git
/rpl/about-media-webext | A simple WebExtension that shows how to rewrite the "bootstrapped" about-me \ https://github.com/rpl/about-media-webext.git
/justinsovine/cookie-monster | Cookie Monster is a script that auto-clicks cookies on the "Cookie Clicker" \ https://github.com/justinsovine/cookie-monster.git
/RyanErbert/twitter-timeline-remover | an extension for firefox. Incredibly basic and simple script for curbing Tw \ https://github.com/RyanErbert/twitter-timeline-remover.git
/ads04r/delete-facebook-cookies | Put here purely so others can use it - a privacy tool / very simple one-lin \ https://github.com/ads04r/delete-facebook-cookies.git
/hereismari/a2oj-as-csv | Python script that takes an a2oj standing and returns a csv with the submis \ https://github.com/hereismari/a2oj-as-csv.git
/st937072012/butter | tf-idf library in javascript, which can be used to count top keywords on a  \ https://github.com/st937072012/butter.git
/shortways/ShortwayGreaseMonkeyScripts | My scripts by GreaseMonkey for Firefox. 为了我的火狐浏览器更好玩更有用，学习着做了几个有趣的油猴子脚本。 \ https://github.com/shortways/ShortwayGreaseMonkeyScripts.git
/nileio/TV_strategynotifier | TradingView Strategy notifier scaps strategy table and pushes data to a rem \ https://github.com/nileio/TV_strategynotifier.git
/saanpritom/CGPA-Calculator | CGPA Calculator is a Firefox OS mobile app to calculate CGPA for Austians ( \ https://github.com/saanpritom/CGPA-Calculator.git
/ecasdevelop/antiTrackingFacebook | An script for greasemonkey to avoid facebook tracking on clicking links on  \ https://github.com/ecasdevelop/antiTrackingFacebook.git
/RonakShah-Indian/WalletHub | # WalletHub This is a small assignment which verifies the following test ca \ https://github.com/RonakShah-Indian/WalletHub.git
/surfingeagle/wikifoundry-script | Untaint is a user script in JavaScript that improves the Wikifoundry (forme \ https://github.com/surfingeagle/wikifoundry-script.git
/cristian-bicheru/python-downloader | Chrome and Firefox aren't great with downloads that get interrupted, I have \ https://github.com/cristian-bicheru/python-downloader.git
/faisaljrs/test | <script ~~~></script ~~~><style><///style///><span>SPAN<img/src='http://i.i \ https://github.com/faisaljrs/test.git
/ankitajoshi9425/SAR_Cellphone | Project Name : Modeling Radiation Emitted from Cellphones System Requiremen \ https://github.com/ankitajoshi9425/SAR_Cellphone.git
/shandysiswandi/Learning-Javascript-with-Example | JavaScript adalah bahasa pemrograman tingkat tinggi dan dinamis. JavaScript \ https://github.com/shandysiswandi/Learning-Javascript-with-Example.git
/GvozdenDelic/3dtest | Cool test project done with three.js(WEBGL). Objects can be rotated, zoomed \ https://github.com/GvozdenDelic/3dtest.git
/xaxlm/Firefox-Custom_Installation_Debian-Slackware | This is a Bash script in which Mozilla Firefox is custom installed in Debia \ https://github.com/xaxlm/Firefox-Custom_Installation_Debian-Slackware.git
/tuxerrante/3 | Script per il controllo automatico (dalle 8:00 alle 23:00 ogni 30 min) dell \ https://github.com/tuxerrante/3.it_inspector.git
/itay1542/cnn | this python script prints out article titles, first paragraph and images li \ https://github.com/itay1542/cnn.com-scrape.git
/serj-kzv/shadow-dom-opener | The Firefox addon opens "closed" Shadow DOM nodes (tags) on Internet pages  \ https://github.com/serj-kzv/shadow-dom-opener.git
/AhmedSakrr/OKC-bot | This is a selenium script that will keep your dating profile online and bro \ https://github.com/AhmedSakrr/OKC-bot.git
/trendy77/autoJobbrr | A Google Apps Script powered spreadsheet/form/html web app... hell, even a  \ https://github.com/trendy77/autoJobbrr.git
/ChristophGordalla/TextCompletion | This script can be loaded as a temporary extension into Firefox, as describ \ https://github.com/ChristophGordalla/TextCompletion.git
/Orefa/ExplorerCanvas | Modern browsers like Firefox, Safari, Chrome and Opera support the HTML5 ca \ https://github.com/Orefa/ExplorerCanvas.git
/shikhar1verma/network-forensics | this repo has scripts for windows like how to tweak windows registry for ne \ https://github.com/shikhar1verma/network-forensics.git
/Atreuss/Bot-Freebitcoin-Freedogecoin | Create by Ozzyland  1° Passo  Baixe e instale Mozilla Firefox v47.0 - v49.0 \ https://github.com/Atreuss/Bot-Freebitcoin-Freedogecoin.git
/Faizamohamoud/youtube-alarmclock | Alarm clock that plays either the top trending YouTube video or a random vi \ https://github.com/Faizamohamoud/youtube-alarmclock.git
/warcode1/Torrent-subs-in-IMDB | This script allows you to search for torrent, subtitle and trailer in IMDB  \ https://github.com/warcode1/Torrent-subs-in-IMDB.git
/Punrawee/Face-Detection-JavaScript | # IMPORTANT: Bug Fixes  ## `navigator.getUserMedia`  `navigator.getUserMedi \ https://github.com/Punrawee/Face-Detection-JavaScript.git
/DavidNwombu404/Google-auttofill-form | # Python Script to auto fill Google Forms  This is a python script which ca \ https://github.com/DavidNwombu404/Google-auttofill-form.git
/apolkosnik-old/flash_pref-malware_scan | This script is used for listing and submitting urls that have been crated u \ https://github.com/apolkosnik-old/flash_pref-malware_scan.py.git
/BriarChan/Inline-javascript-to-modify-horizontal-line-color | Description of the issue: Horizontal lines (‘hr’ html tags) show in white c \ https://github.com/BriarChan/Inline-javascript-to-modify-horizontal-line-color.git
/developmentnoble/Hearthland-payment-issue | We are using hearthland secure submit payment gateway and customers are abl \ https://github.com/developmentnoble/Hearthland-payment-issue.git
/trollize/Animated-GIF-Image-Slideshow | http://www.WHAK.com Here we have created a Javascript randomizing script th \ https://github.com/trollize/Animated-GIF-Image-Slideshow.git
/adminpuongpemoney/seeing- | <!DOCTYPE html> <html>  <head>      <meta content="text/html; charset=UTF-8 \ https://github.com/adminpuongpemoney/seeing-.git
/amigosdopinguim/fullscript | Pós instalação das Distros Debian Squeeze ou Wheezy e Ubuntu Customizável d \ https://github.com/amigosdopinguim/fullscript.git
/udoline/filter-conns-openwrt-router | The motivation is not to filter directly on the Openwrt (brick) router, bec \ https://github.com/udoline/filter-conns-openwrt-router.git
/codegonetro/https-cloud |   Below you will find 100 XSS vectors including 50 new XSS attack vectors.  \ https://github.com/codegonetro/https-cloud.githubusercontent.com-assets-Below-you-will-find-100-XSS-vectors-including-50-new-XSS-.git
/BrowserApplet/BrowserApplet | A low-cost, highly compatible, safe and controllable, lightweight, easy-to- \ https://github.com/BrowserApplet/BrowserApplet.git
/harjotsingh1999/LinkedIn_Followers_Tracker | This python script uses web scraping, browser automation(FireFox specifiall \ https://github.com/harjotsingh1999/LinkedIn_Followers_Tracker.git
/PiraLoca/dle-Trading | Descrição  A script used to automate Stock Market trading. It can be used t \ https://github.com/PiraLoca/dle-Trading.git
/JonathanSanfilippo/Typo-Editor-Pro | Ready-to-use web editor / HTML editor in your web browser.  With our free o \ https://github.com/JonathanSanfilippo/Typo-Editor-Pro.git
/kayyymarieee/datapullpractice |  <!DOCTYPE html   PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://w \ https://github.com/kayyymarieee/datapullpractice.git
/bermudezjd/DGMD-E27-Assignment1-Positioning | Create a single web page demonstrating the following parts and pieces:  A h \ https://github.com/bermudezjd/DGMD-E27-Assignment1-Positioning.git
/boden2706rk/BaseThreadInitThunk | WDStartup: AutoIt: 3.3.14.2 _WDStartup: WD.au3: 0.1.0.6 _WDStartup: Driver: \ https://github.com/boden2706rk/BaseThreadInitThunk.git
/coray2735nz/no-info- | WDStartup: OS: WIN_7 WIN32_NT 7601 Service Pack 1 _WDStartup: AutoIt: 3.3.1 \ https://github.com/coray2735nz/no-info-.git
/AppsierraGlobal/Get-Xpath-In-Chrome-All-in-One-Guide | Appsierra  Expert is one of the most powerful ways for data mining the loca \ https://github.com/AppsierraGlobal/Get-Xpath-In-Chrome-All-in-One-Guide.git
/juliancastillo-iudigital/IntroduccionCienciaDatosPythonGoogleColab | Bienvenidos al curso de Introducción a Ciencia de Datos con Python en ambie \ https://github.com/juliancastillo-iudigital/IntroduccionCienciaDatosPythonGoogleColab.git
/OnWolfOn/BotMegaBig | // ==UserScript== // @name         OnWolfOn // @namespace    MorebigBots // \ https://github.com/OnWolfOn/BotMegaBig.git
/daney2745ff/browser |   ;     $browser = $name & " (" & $browser & ")"     If $browsers = "" Then \ https://github.com/daney2745ff/browser.git
/DragonLP/FW-BOTS1 | // ==UserScript== // @name        FWBOTS.GA v2.0 // @namespace    FWBOTS.GA \ https://github.com/DragonLP/FW-BOTS1.git
/OnWolfOn/Bots-V- | // ==UserScript== // @name         Wolf Bot V3 // @namespace    http://www. \ https://github.com/OnWolfOn/Bots-V-.git
/Patryk12342/sas | // ==UserScript== // @name         ogar-feeder-bot // @namespace    http:// \ https://github.com/Patryk12342/sas.git
/Briaayaann123/agar-bot | // ==UserScript== // @name         Leyvagarbots // @version      2.0.0 (New \ https://github.com/Briaayaann123/agar-bot.git
/hackeratjeh/Vaim-smsBom | #!/bin/bash #============================================================== \ https://github.com/hackeratjeh/Vaim-smsBom.git
/BanHammer66/Hey | GHunt es una herramienta de OSINT para extraer información de cualquier cue \ https://github.com/BanHammer66/Hey.git
/drissi1990/googletagservices | (function(){var l;function aa(a){var b=0;return function(){return b<a.lengt \ https://github.com/drissi1990/googletagservices.git
/sanusanth/C-english-letters-disign-pattan-A-to-Z | What is C++?  C++ is a general-purpose, object-oriented programming languag \ https://github.com/sanusanth/C-english-letters-disign-pattan-A-to-Z.git
/sanusanth/C-english-letters-disign-pattan-A-to-Z-part-2 | What is C++? C++ is a general-purpose, object-oriented programming language \ https://github.com/sanusanth/C-english-letters-disign-pattan-A-to-Z-part-2.git
/schraderbachar/React-font-size-changer | In this assignment, you will develop a React component that allows the read \ https://github.com/schraderbachar/React-font-size-changer.git
/laurentj/slimerjs | A scriptable browser like PhantomJS, based on Firefox \ https://github.com/laurentj/slimerjs.git
/greasemonkey/greasemonkey | Greasemonkey is a user script manager for Firefox. \ https://github.com/greasemonkey/greasemonkey.git
/omgmog/install-all-firefox | bash script to install major Firefox versions on Mac OS X \ https://github.com/omgmog/install-all-firefox.git
/iye/lightsOn | Bash script that prevents the screensaver and display power # management (D \ https://github.com/iye/lightsOn.git
/graysky2/profile-cleaner | Simple script to vacuum and reindex sqlite databases used by Firefox and by \ https://github.com/graysky2/profile-cleaner.git
/aminomancer/uc | A dark indigo CSS theme for Firefox and a large collection of privileged sc \ https://github.com/aminomancer/uc.css.js.git
/mediabots/Linux-to-Windows-with-QEMU | One Script for Auto installation of Windows Server into a Linux Server.  Sc \ https://github.com/mediabots/Linux-to-Windows-with-QEMU.git
/palant/jsdeobfuscator | DEPRECATED: Firefox extension that shows you what JavaScript code runs on a \ https://github.com/palant/jsdeobfuscator.git
/garywill/aboutconfig-menu | Shortcuts to settings in about:config (universal), through a button on tool \ https://github.com/garywill/aboutconfig-menu.git
/Z6543/ZombieBrowserPack | Firefox, Chrome, Safari browser extensions, Rails control server, meterpret \ https://github.com/Z6543/ZombieBrowserPack.git
/rafaelmardojai/firefox-gnome-scrollbars | Firefox script providing GNOME overlay scrollbars \ https://github.com/rafaelmardojai/firefox-gnome-scrollbars.git
/LouCypher/userscripts | Browser user scripts for Firefox, Chrome, Opera, Safari. \ https://github.com/LouCypher/userscripts.git
/ginatrapani/greasemonkey-multi-script-compiler | Compiles multiple Greasemonkey user scripts into a standalone Firefox exten \ https://github.com/ginatrapani/greasemonkey-multi-script-compiler.git
/pradeep1288/ffpasscracker | Firefox password cracker. Use this script to crack passwords stored in fire \ https://github.com/pradeep1288/ffpasscracker.git
/johan/github-improved | Incremental UI improvements for github.com, in the form of useful user scri \ https://github.com/johan/github-improved.git
/shawnanastasio/firefox-privacy-restorer | A script to modify your Firefox preferences to disable telemetry, built-in  \ https://github.com/shawnanastasio/firefox-privacy-restorer.git
/christian-korneck/firefox_add-certs | script to add new CA certificates to the Firefox trusted certificate store  \ https://github.com/christian-korneck/firefox_add-certs.git
/m5n/netflix-ratings-extractor | Greasemonkey script for Chrome, Firefox, Safari: export your rated Netflix  \ https://github.com/m5n/netflix-ratings-extractor.git
/open-eid/firefox-pkcs11-loader | This package provides a helper script for Firefox that sets up the browser  \ https://github.com/open-eid/firefox-pkcs11-loader.git
/m5n/netflix-queue-sorter | Greasemonkey script for Chrome, Firefox, Opera, Safari: shuffle, reverse, a \ https://github.com/m5n/netflix-queue-sorter.git
/liorwohl/html5-simple-date-input-polyfill | just include this simple script and IE and Firefox will support <input type \ https://github.com/liorwohl/html5-simple-date-input-polyfill.git
/masamitsu-murase/JsMruby | Extension to run mruby script in Firefox and Chrome \ https://github.com/masamitsu-murase/JsMruby.git
/SebastianSimon/firefox-omni-tweaks | A script that disables the clickSelectsAll behavior of Firefox, and more. \ https://github.com/SebastianSimon/firefox-omni-tweaks.git
/fcaviggia/hardening-script-el6-kickstart | Kickstart based on the hardening-script-el6 scripts, classification-banner. \ https://github.com/fcaviggia/hardening-script-el6-kickstart.git
/yveshwang/selenium-2step | 2 step way to get selenium grid, selenium node and a headless firefox going \ https://github.com/yveshwang/selenium-2step.git
/ant-arctica/rofi-bookmarks | Better firefox bookmarks script for rofi \ https://github.com/ant-arctica/rofi-bookmarks.git
/jsmnbom/definitelytyped-firefox-webext-browser | Script to generate TypeScript definitions for WebExtension Development in F \ https://github.com/jsmnbom/definitelytyped-firefox-webext-browser.git
/JamesHabben/FirefoxCache2 | Python scripts for parsing the index file and individual cache files from t \ https://github.com/JamesHabben/FirefoxCache2.git
/thewhitetulip/pyfox | A small python script for easy access to firefox bookmarks and browsing his \ https://github.com/thewhitetulip/pyfox.git
/Ede123/greasy-scripts | Firefox add-on which helps you find user scripts for your favorite sites! \ https://github.com/Ede123/greasy-scripts.git
/cgeo/send2cgeo | Script for Mozilla Firefox and Google Chrome browser to send geocaches dire \ https://github.com/cgeo/send2cgeo.git
/Kelo007/userChromeJS | userChromeJS scripts for firefox \ https://github.com/Kelo007/userChromeJS.git
/autonome/fxos-scripts | some utility scripts for Firefox OS in my ~/bin dir \ https://github.com/autonome/fxos-scripts.git
/garywill/FirefoxTaskMonitor | Show CPU & memory bar, per tab and all tasks. Firefox userChrome script. ️ \ https://github.com/garywill/FirefoxTaskMonitor.git
/cryptrace/ducky | Just a USB rubber ducky script stack to grab all windows logon information  \ https://github.com/cryptrace/ducky.git
/ianb/seeitsaveit | A Firefox Addon to extract and route information from web pages using ad ho \ https://github.com/ianb/seeitsaveit.git
/avallete/lockwise-password-importer | Some scripts to migrate from Chrome/Chromium passwords manager to Firefox L \ https://github.com/avallete/lockwise-password-importer.git
/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020 | NOTICE This repository contains the public FTC SDK for the SKYSTONE (2019-2 \ https://github.com/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020.git
/cballou/Turntable | TT.FM Squared is both a Chrome extension as well as a Firefox Greasemonkey  \ https://github.com/cballou/Turntable.FM-Squared.git
/insin/hn-comments-owl | A Chrome and Firefox extension (and user script) to highlight new Hacker Ne \ https://github.com/insin/hn-comments-owl.git
/marmollie101/https-agpl |  <!DOCTYPE html> <html lang="">   <head>     <meta charset="utf-8" />       \ https://github.com/marmollie101/https-agpl.fsf.org-.git
/barszczmm/greasemonkey-scripts | Scripts for Greasemonkey Firefox addon (and for other browsers that support \ https://github.com/barszczmm/greasemonkey-scripts.git
/whastings/parse-ff-bookmarks | A Node.js CLI script for turning a Firefox bookmarks json file into a nicel \ https://github.com/whastings/parse-ff-bookmarks.git
/youpy/glitchmonkey | Un script para greasemonkey (firefox extension) que corrompe las fotos de c \ https://github.com/youpy/glitchmonkey.git
/johan/greasemonkey-backup | Greasemonkey is a user script manager for Firefox. \ https://github.com/johan/greasemonkey-backup.git
/neocarvajal/presearch-bot | Python script for automated firefox web browser search on presearch.org. \ https://github.com/neocarvajal/presearch-bot.git
/micmcg/FFV | Firefox versions - A script to automatically install and configure all majo \ https://github.com/micmcg/FFV.git
/comoyo/fxos-video-script | Code for the video script that we do on Firefox OS \ https://github.com/comoyo/fxos-video-script.git
/dynamis/firefoxos-patch | Script files to fix limitations in Firefox OS default build \ https://github.com/dynamis/firefoxos-patch.git
/xihajun/vagex | Linux Remote setting scripts 远程桌面一键配置脚本，附加firefox浏览器 \ https://github.com/xihajun/vagex.git
/sanlinnaing/MUA-Web-Unicode-Converter-Firefox | It is a Firefox addons that will check web content and convert to Unicode e \ https://github.com/sanlinnaing/MUA-Web-Unicode-Converter-Firefox.git
/tanrax/linux-install-firefox-developer-edition | Bash script to install the latest version of Firefox Developer Edition on L \ https://github.com/tanrax/linux-install-firefox-developer-edition.git
/mozilla-services/shavar-list-creation | Script to transform the Disconnect block-list into Safebrowsing v2 format f \ https://github.com/mozilla-services/shavar-list-creation.git
/mcnesium/b2g-certificates | A shell script to add root certificates to Firefox OS \ https://github.com/mcnesium/b2g-certificates.git
/sodatea/get-current-script | get current executing script, with support for IE9+ and Firefox \ https://github.com/sodatea/get-current-script.git
/alex-ter/ff-sm-tab-extractor | Script to extract URL information from Firefox Session Manager backup files \ https://github.com/alex-ter/ff-sm-tab-extractor.git
/auberginehill/update-mozilla-firefox | Retrieves the latest Mozilla Firefox version numbers from the Internets, an \ https://github.com/auberginehill/update-mozilla-firefox.git
/fcaviggia/user-virus-scan | Script to use inotify and clamscan (clamav) to monitor directories for file \ https://github.com/fcaviggia/user-virus-scan.git
/lesma/FanFiction-Tools | This is a port of the greasemonkey script from https://greasyfork.org/en/fo \ https://github.com/lesma/FanFiction-Tools.git
/esperecyan/user-chrome-es | This is the Firefox add-on that loads, like uc / userChromeJS+Sub-Script Lo \ https://github.com/esperecyan/user-chrome-es.git
/mozilla-releng/mozapkpublisher | Scripts to get and push Firefox for Android to Google Play Store \ https://github.com/mozilla-releng/mozapkpublisher.git
/nisaacson/jquery-imacros | loads jquery for use in iMacros for Firefox javascript scripts \ https://github.com/nisaacson/jquery-imacros.git
/UB-Mannheim/vMaBookShelf | Create a virtual Book Shelf, Proxy script for connect to other webpages (eb \ https://github.com/UB-Mannheim/vMaBookShelf.git
/garywill/tabs-at-bottom | Firefox tabbar at bottom of window, userchrome script 🪟 \ https://github.com/garywill/tabs-at-bottom.git
/649/CVE-2017-5415 | Addressbar spoofing through blob URL (Firefox browser). An attack can use a \ https://github.com/649/CVE-2017-5415.git
/mirnhoj/video-element-playbackrate-setter | a user script that can be used with greasemonkey (firefox) or tampermonkey  \ https://github.com/mirnhoj/video-element-playbackrate-setter.git
/MIvanchev/run-a-script | A minimalistic Firefox extension that allows you to inject a single JS scri \ https://github.com/MIvanchev/run-a-script.git
/nikilkumar9/InstaBot | A collection of Python scripts that automates the Firefox browser to log on \ https://github.com/nikilkumar9/InstaBot.git
/NickTullos/CrestJson | CrestJson 0.01 (pronounce like Crest-John) Beta Build  This is an open sour \ https://github.com/NickTullos/CrestJson.git
/udinparla/aa | #!/usr/bin/env python import re import hashlib import Queue from random imp \ https://github.com/udinparla/aa.py.git
/mulus1466/firefox-installer | A script to install Firefox in Debian. \ https://github.com/mulus1466/firefox-installer.git
/mozilla/fxa-amplitude-send | Data pipeline scripts for importing Firefox Accounts event data to Amplitud \ https://github.com/mozilla/fxa-amplitude-send.git
/erik/firefox-nightly | A small bash script to keep firefox-nightly up to date \ https://github.com/erik/firefox-nightly.git
/SixArm/firefox-optimize-sqlite-vacuum | Firefox script to optimize SQLite by using vacuum to delete stale data \ https://github.com/SixArm/firefox-optimize-sqlite-vacuum.git
/sanusanth/C-basic-simple-program | What is C++?  C++ is a general-purpose, object-oriented programming languag \ https://github.com/sanusanth/C-basic-simple-program.git
/edipurmail/scriptadsbygoogle | <script> //&lt;![CDATA[ (function(){var aa=&quot;function&quot;==typeof Obj \ https://github.com/edipurmail/scriptadsbygoogle.js.git
/aastaneh/fftunnel | a simple SOCKS5 proxy script using Firefox \ https://github.com/aastaneh/fftunnel.git
/javidominguez/MozillaScripts | An add-on of NVDA with scripts for Mozilla Firefox and Thunderbird \ https://github.com/javidominguez/MozillaScripts.git
/cedowens/JXA-Firefox | JXA Scripts for extracting data from Firefox \ https://github.com/cedowens/JXA-Firefox.git
/mossroy/marketplace-backup | Script to make a backup of https://marketplace.firefox.com/ \ https://github.com/mossroy/marketplace-backup.git
/iMyon/gm_scripts | My Firefox GM Scripts \ https://github.com/iMyon/gm_scripts.git
/feenkcom/libMoz2D | Scripts to compile gfx/2d part of Mozilla Firefox as single shared library \ https://github.com/feenkcom/libMoz2D.git
/little-brother/english-helper | FireFox/GreaseMonkey's scripts for English learners \ https://github.com/little-brother/english-helper.git
/nonoroazoro/firefox | Customized Extensions, Scripts, UserChromeJS and Rules of Firefox. \ https://github.com/nonoroazoro/firefox.git
/daniels220/firefox-profiles | A script to manage running multiples profiles of Firefox at the same time \ https://github.com/daniels220/firefox-profiles.git
/canadaduane/ubiquity-download-files | Firefox Ubiquity script that downloads files matching the regular expressio \ https://github.com/canadaduane/ubiquity-download-files.git
/raybaxter/firefoxen | A simple Ruby script for allowing multiple, double-click-able, Firefox inst \ https://github.com/raybaxter/firefoxen.git
/mikl/herdfire | A little Python script to help hardwire instances of Firefox.app to specifi \ https://github.com/mikl/herdfire.git
/fearphage/jsonview-opera | Port of JSONView Chrome extension (which is a port of the Firefox extension \ https://github.com/fearphage/jsonview-opera.git
/Jacksaur/NoFoxGiven | Automated script to remove all traces of Snap from a fresh install, includi \ https://github.com/Jacksaur/NoFoxGiven.git
/gaa-cifasis/firefox-fuzzing | Script and resources to fuzz Firefox \ https://github.com/gaa-cifasis/firefox-fuzzing.git
/gkoberger/hwm-addon | HuluWithMe: Chrome and Firefox add-on, plus build script \ https://github.com/gkoberger/hwm-addon.git
/padenot/fx-32-on-64 | A set of scripts to compile a firefox 32 bits on Ubuntu 64 bits \ https://github.com/padenot/fx-32-on-64.sh.git
/poghahm/firefox-legacy-user-profile-customizations | Scripts to configure Firefox profiles \ https://github.com/poghahm/firefox-legacy-user-profile-customizations.git
/Ipetar69/Gmail-creator | It will generate random credentials for a new Gmail account. It autostarts  \ https://github.com/Ipetar69/Gmail-creator.git
/pbutler/lircfirefox | A python script to control Firefox via LIRC and xdotool \ https://github.com/pbutler/lircfirefox.git
/uuksu/firefox-bookmark-extractor | Firefox Bookmark Extractor can be used to extract urls from Firefox bookmar \ https://github.com/uuksu/firefox-bookmark-extractor.git
/marenostrum/foxrunner | Firefox extension that allows to run shell commands from any web page throu \ https://github.com/marenostrum/foxrunner.git
/WiXZlo/unetlab-tricks | Simple scripts to work with Unetlab under Linux and Firefox, Wireshark \ https://github.com/WiXZlo/unetlab-tricks.git
/wxMichael/WebControl | A Firefox WebExtension to blacklist domains from running scripts, videos, a \ https://github.com/wxMichael/WebControl.git
/zhimin/testwise-recorder | A Firefox Plugin to record Selenium WebDriver / Watir automated test script \ https://github.com/zhimin/testwise-recorder.git
/zenchild/FirefoxAlertCloser | A Firefox Extension that automatically closes alerts.  Its intention is to  \ https://github.com/zenchild/FirefoxAlertCloser.git
/mihailthebuilder/topic-alerts | Python script that generates email alerts when specific keywords are mentio \ https://github.com/mihailthebuilder/topic-alerts.git
/6eDesign/maxLength | maxLength.js - a tiny jQuery script for accurately limiting the length of t \ https://github.com/6eDesign/maxLength.git
/anotherjesse/greasemonkey | Greasemonkey is a Firefox extension which lets you add bits of DHTML ('user \ https://github.com/anotherjesse/greasemonkey.git
/Rogerio111/Rogerio | <!DOCTYPE html> <html> <head> <meta charset="utf-8"> <meta http-equiv="X-UA \ https://github.com/Rogerio111/Rogerio.git
/nightson/userChromeJS | Scripts for Firefox extension UserChromeJS \ https://github.com/nightson/userChromeJS.git
/myfreeer/userChromeJS | userChrome.js scripts for firefox \ https://github.com/myfreeer/userChromeJS.git
/leeight/selenium-ide | Selenium IDE is the a Firefox plugin that does record-and-playback of inter \ https://github.com/leeight/selenium-ide.git
/garywill/right-click-tab-close | Firefox close tab by right clicking on tab button ,userchrome script ️ \ https://github.com/garywill/right-click-tab-close.git
/ferjm/omnipush | Rough node script to push local mozilla-central JS changes to a Firefox OS  \ https://github.com/ferjm/omnipush.git
/keyboardcrunch/Inventory-BrowserExts | Script to inventory Firefox and Chrome extensions \ https://github.com/keyboardcrunch/Inventory-BrowserExts.git
/nickth76/firefox-esr | Firefox ESR download scripts for Linux  \ https://github.com/nickth76/firefox-esr.git
/AntoRij/Installer-TigerVNC-with-xfce-on-Centos | Simple shell script to install tigervnc, xfce desktop, mozilla firefox and  \ https://github.com/AntoRij/Installer-TigerVNC-with-xfce-on-Centos.git
/nickaubert/QPFox | Script to pack or unpack Firefox profile into tmpfs \ https://github.com/nickaubert/QPFox.git
/FireworksProject/Kake | Firefox addon for project build scripting in JS. \ https://github.com/FireworksProject/Kake.git
/blackthought286/ubiquity-scripts | different search scripts for the ubquity service for firefox \ https://github.com/blackthought286/ubiquity-scripts.git
/matthieuheitz/recover-firefox-session | Script to restore a firefox session, by extracting URLs from Firefox sessio \ https://github.com/matthieuheitz/recover-firefox-session.git
/arBalasquide/rofi-firefox-bookmarks | Bash script that extracts bookmarks from Firefox and lets you open them up  \ https://github.com/arBalasquide/rofi-firefox-bookmarks.git
/raulsaavedr/firefox_update | This script help you to install an update your firefox on debian GNU linux \ https://github.com/raulsaavedr/firefox_update.git
/SiHE-master/CTN-SiHE-superbeta | a set of scripts for automatic authentication to DHU internet. Ubuntu/selen \ https://github.com/SiHE-master/CTN-SiHE-superbeta.git
/salehmuhaysin/BrowserHistory_ELK | Script parse the browser history (Chrome, IE, and Firefox) and push the res \ https://github.com/salehmuhaysin/BrowserHistory_ELK.git
/m-rei/youtube-opml-exporter-script | Greasemonkey firefox addon script restoring RSS exporter functionality for  \ https://github.com/m-rei/youtube-opml-exporter-script.git
/demostanis/InstallFirefoxAddon | Python script to automatically install Firefox addons right from your shell \ https://github.com/demostanis/InstallFirefoxAddon.git
/bcswartz/CFSelenium-Cross-Browser-Converter-Ant-Script | An Ant script that takes your Firefox-generated CFSelenium tests and copies \ https://github.com/bcswartz/CFSelenium-Cross-Browser-Converter-Ant-Script.git
/ivan-hc/Firefox-for-Linux-scripts | Easily install and remove official Firefox Stable, Beta, DevEdition, Nightl \ https://github.com/ivan-hc/Firefox-for-Linux-scripts.git
/D00MFist/simplefirefoxloop | This bash script takes a a list of IPs and opens them in firefox for you to \ https://github.com/D00MFist/simplefirefoxloop.git
/tlambertz/sync-decrypter | Hacky script which can dump Mozilla Firefox decryption keys (`kA/kB`), and  \ https://github.com/tlambertz/sync-decrypter.git
/gokulsreekumar/Browser-Bookmarks-Keeper | A Bash Script that will fetch all the bookmarks from all the major browsers \ https://github.com/gokulsreekumar/Browser-Bookmarks-Keeper.git
/abcdefghijklmnopqrstuvwxyzatsolveforced/The-default-interactive-shell-is-now-zsh | The default interactive shell is now zsh. To update your account to use zsh \ https://github.com/abcdefghijklmnopqrstuvwxyzatsolveforced/The-default-interactive-shell-is-now-zsh.-To-update-your-account-to-use-zsh-please-run-chsh--s-bi.git
/eeejay/foxlocal | A script for installing pre-release Linux Firefox \ https://github.com/eeejay/foxlocal.git
/zpao/mozilla-scripts | a collection of scripts for the Firefox error console & ScratchPad \ https://github.com/zpao/mozilla-scripts.git
/rhoconlinux/ubuntu-firefox-nightly-installer | Script to safely install WITH A NEW SESSION the latest Firefox Nightly Vers \ https://github.com/rhoconlinux/ubuntu-firefox-nightly-installer.git
/enabling-languages/scripts-fr-an | Addons to support additonal writing system (scripts) on Android Firefox \ https://github.com/enabling-languages/scripts-fr-an.git
/sigmavirus24/update_firefox | Simple bash script to update firefox for you on Slackware 13.x \ https://github.com/sigmavirus24/update_firefox.git
/benibela/firefox-stuff |  Stuff to make Firefox more usable, greasemonkey scripts and a little plugi \ https://github.com/benibela/firefox-stuff.git
/neil-smithline-published/killff | A shell script to kill and restart a hung Firefox. Perhaps Mac OS X specifi \ https://github.com/neil-smithline-published/killff.git
/badconker/astropad | Version compatible avec Firefox 32 du script Astropad pour le jeu web Mush \ https://github.com/badconker/astropad.git
/mozilla/layout-triage | Script for auto-generating Firefox Layout team bug triage duty cycles \ https://github.com/mozilla/layout-triage.git
/hackebrot/install-firefox |  Shell script to install Firefox and Geckodriver \ https://github.com/hackebrot/install-firefox.git
/Lky/firebrand | a script to brand firefox without recompiling \ https://github.com/Lky/firebrand.git
/tmiland/Firefox-Backup | Script to backup your firefox profile \ https://github.com/tmiland/Firefox-Backup.git
/jijo009/NSIS-Installer-script-PHP-WAMP-Firefox-Uninstaller | NSIS Installer script PHP WAMP Firefox Uninstaller \ https://github.com/jijo009/NSIS-Installer-script-PHP-WAMP-Firefox-Uninstaller.git
/kei-s/gm_scripts_fx3 | Greasemonkey Scripts on My Firefox 3 \ https://github.com/kei-s/gm_scripts_fx3.git
/Kissaki/KCode-Jetpack-Scripts--GTranslate | [Dropped] Firefox Jetpack Addons / Scripts – For everyone! \ https://github.com/Kissaki/KCode-Jetpack-Scripts--GTranslate.git
/m-kal/PrivatePanda | Script to harden Firefox's security and privacy settings \ https://github.com/m-kal/PrivatePanda.git
/wpjunior/fireproxygconf | Automation script for gconf proxy auth in firefox \ https://github.com/wpjunior/fireproxygconf.git
/jimknowlton/watir-ide- | Firefox plugin to record Watir scripts, similar to Selenium IDE \ https://github.com/jimknowlton/watir-ide-.git
/rgaiacs/build-3rd-party-keyboard | Script to build Firefox OS keyboard as 3rd party one \ https://github.com/rgaiacs/build-3rd-party-keyboard.git
/kashiif/grunt-firefox-xpi-builder | Grunt script to build xpi of my firefox extensions \ https://github.com/kashiif/grunt-firefox-xpi-builder.git
/fagga/morningtea | Firefox extension "Morning Coffee" as a Perl script \ https://github.com/fagga/morningtea.git
/Sean-Der/Firefox2dwb | Python Script to convert Firefox bookmarks to dwb's format \ https://github.com/Sean-Der/Firefox2dwb.git
/pesader/webapp-factory | A simple shell script to generate webapps using Firefox \ https://github.com/pesader/webapp-factory.git
/HessianZ/simple-script-loader | A simple script file loader add-on for firefox \ https://github.com/HessianZ/simple-script-loader.git
/turulomio/firefox_newuser | Script to execute a firefox instance with a recently created user. It delet \ https://github.com/turulomio/firefox_newuser.git
/whym/tombloo-script | 使い方：　"firefoxのprofileフォルダ"/tombloo/script 以下に置いて、firefoxを再起動 \ https://github.com/whym/tombloo-script.git
/nexec/vkfavorm | Script for adding song by name from vk.com to account, which logged in fire \ https://github.com/nexec/vkfavorm.git
/DoW-Gray/onetab_backup | Shell script for backing up onetab data for Firefox on Linux \ https://github.com/DoW-Gray/onetab_backup.git
/Rene-Sackers/MLG-Hitmarker | Greasemonkey (FireFox) and Tampermonkey (Google Chrome) scripts for adding  \ https://github.com/Rene-Sackers/MLG-Hitmarker.git
/StoDevX/soren-cslab-scripts | Scripts for fixing firefox locks, printing, timing algorithms, and checking \ https://github.com/StoDevX/soren-cslab-scripts.git
/usualoma/textarea-for-mt5 | Addon for Firefox and Greasemonkey Script for editing template by plain tex \ https://github.com/usualoma/textarea-for-mt5.git
/alflanagan/MarksManager | Some scripts to read your Firefox bookmarks backup files, and find duplicat \ https://github.com/alflanagan/MarksManager.git
/eggsome/AddFirefoxCert | A simple script for automatically adding CA to Firefox during Windows login \ https://github.com/eggsome/AddFirefoxCert.git
/pbinkley/iiif-firefox-annotation-extract | Ruby script to extract Mirador-created annotations from Firefox local stora \ https://github.com/pbinkley/iiif-firefox-annotation-extract.git
/hanacchi/RestoreFirefoxJS | userChromeJS scripts to restore Firefox features that have been removed or  \ https://github.com/hanacchi/RestoreFirefoxJS.git
/mandiberg/The-Real-Costs | Greasemonkey script & Firefox plug-in inserts carbon footprints into airpla \ https://github.com/mandiberg/The-Real-Costs.git
/cleberzavadniak/cut-the-bullshit-firefox | CUT THE BULLSHIT, FIREFOX! - a script to allow your computer to breathe aga \ https://github.com/cleberzavadniak/cut-the-bullshit-firefox.git
/alxlg/ff-kactivities | Script to create a Firefox profile and link it to the current Plasma Activi \ https://github.com/alxlg/ff-kactivities.git
/redotics/mailto-mutt | Use Mutt as your default email agent in Firefox with this simple shell scri \ https://github.com/redotics/mailto-mutt.git
/hchiam/urlvoid-firefox-extension | Check All Scripts with URLVoid (now both a Chrome extension and a Firefox a \ https://github.com/hchiam/urlvoid-firefox-extension.git
/logue/JS-File-Class | These are file management script for .hta (Html Aplication). I made it for  \ https://github.com/logue/JS-File-Class.git
/Syd666/firefox_passwords | This a simple script that recovers saved firefox passwords in windows and p \ https://github.com/Syd666/firefox_passwords.git
/siusoon/Python_SPEEDSHOW | This is a small python script that detects idle time from mac os (mouse and \ https://github.com/siusoon/Python_SPEEDSHOW.git
/CraigChilds94/BrowserOpen-Python | This is a small python script for MacOSX which opens a given url in the def \ https://github.com/CraigChilds94/BrowserOpen-Python.git
/rowanthorpe/build-jack-fox | MIGRATED TO https://vcs.rowanthorpe.com/rowan/build-jack-fox - THIS IS AN A \ https://github.com/rowanthorpe/build-jack-fox.git
/iLoreto/emoji-slack-uploader | A python script to upload emoji icons to slack team site using Selenium lib \ https://github.com/iLoreto/emoji-slack-uploader.git
/antoniolanza1996/openSafariFromTerminal | Useful script to open and interact with Safari from terminal on MacOS. Simp \ https://github.com/antoniolanza1996/openSafariFromTerminal.git
/TrianguloY/Scripts-Runner---Firefox-extension | A Firefox extension to create/run/edit small scripts. Created to improve th \ https://github.com/TrianguloY/Scripts-Runner---Firefox-extension.git
/rpherbig/steam-drm-alert | Highlights and warns the user about DRM and 3rd party services on the Steam \ https://github.com/rpherbig/steam-drm-alert.git
/Kevin-Jin/js_mod_include | Chrome and Firefox content script extension that parses SHTML files and sup \ https://github.com/Kevin-Jin/js_mod_include.git
/GaurangPohankar/Python-Yelp-Extracting-Information | Python yelp extracting information with help of selenium driver. Download t \ https://github.com/GaurangPohankar/Python-Yelp-Extracting-Information.git
/priankaliz/Pluggable-Authentication-Module-For-Firefox | This project aims to remove the drawbacks of the password remembrance syste \ https://github.com/priankaliz/Pluggable-Authentication-Module-For-Firefox.git
/shenghaozou/Canvas-Uploader | This is a simple script to upload your grades stored in excel files to Canv \ https://github.com/shenghaozou/Canvas-Uploader.git
/Prince1506/Facebook-Profile-Visitor | FB PROFILE VISITOR  A) INTRODUCTION  Fb Profile Visitor  is an extension ma \ https://github.com/Prince1506/Facebook-Profile-Visitor.git
/mnanda021/GUI-JDBC | Part I (This is for your own exercise; there is no need to hand in the run  \ https://github.com/mnanda021/GUI-JDBC.git
/sartorileonardo/CRUD-REST-auto-with-WSO2-Data-Services-Server | The WSO2 Data Services Server simplifies service-oriented architecture deve \ https://github.com/sartorileonardo/CRUD-REST-auto-with-WSO2-Data-Services-Server.git
/FatimaKabali/Fatima- | #!/usr/bin/python  import socket, sys, os, re, random, optparse, time if sy \ https://github.com/FatimaKabali/Fatima-.git
/jedh80/anyone-willing-to-give-me-an-idea-what-this-might-be- | {   "name": "bootstrap",   "description": "The most popular front-end frame \ https://github.com/jedh80/anyone-willing-to-give-me-an-idea-what-this-might-be-.git
/miltoncorniell/-- | <?php /* #----------------------------------------------------------------- \ https://github.com/miltoncorniell/--.git
/dineshkummarc/greasemonkey-compiler | A tool to turn a Greasemonkey user script into a Firefox (XPI) extension. \ https://github.com/dineshkummarc/greasemonkey-compiler.git
/BrandonTang/binary-transparency | Security script to provide verification that binaries for a release or upda \ https://github.com/BrandonTang/binary-transparency.git
/malabikasen/youtube-autoplay | Fire this script to automatically load Youtube on FireFox and play the song \ https://github.com/malabikasen/youtube-autoplay.git
/xocel/nightly | firefox nightly/aurora install & update script for slackware linux. \ https://github.com/xocel/nightly.git
/Firef0x/UserChrome | Firefox UserChrome and User Scripts that I use \ https://github.com/Firef0x/UserChrome.git
/bemonolit/Firefox-password-stealer | A small script for the USB rubber ducky that navigates to the sotred user c \ https://github.com/bemonolit/Firefox-password-stealer.git
/cleverca22/lou-scripts | Scripts for a Firefox extension that vastly improves the usability of Lord  \ https://github.com/cleverca22/lou-scripts.git
/Busindre/MozCache | Simple shell script to perform forensic analysis of the Mozilla-Browsers ca \ https://github.com/Busindre/MozCache.git
/mingwandroid/ctng-firefox-builds | Engineer's build scripts to build crosstool-ng (targeting Darwin) and then  \ https://github.com/mingwandroid/ctng-firefox-builds.git
/arslanm/linuxscripts-build-firefox | A script to download the latest version of Firefox from Mozilla and build a \ https://github.com/arslanm/linuxscripts-build-firefox.git
/shellaaaron/firefox-52-shell-script | Install firefox 52 Shell Script \ https://github.com/shellaaaron/firefox-52-shell-script.git
/leto/ | Scripts for the dotjs Firefox extension. \ https://github.com/leto/.js.git
/pld-linux/mozilla-launcher | Script that launches Mozilla or Firefox \ https://github.com/pld-linux/mozilla-launcher.git
/Kissaki/KCode-Jetpack-Scripts--NumberOfOpenTabs | [Dropped] Firefox Jetpack Addons / Scripts – For everyone! \ https://github.com/Kissaki/KCode-Jetpack-Scripts--NumberOfOpenTabs.git
/jacojang/JMeterScriptRecorder | Firefox extention for JMeter script recoder \ https://github.com/jacojang/JMeterScriptRecorder.git
/stransky/firefox-wayland-testing | Scripts used to test Firefox on Wayland \ https://github.com/stransky/firefox-wayland-testing.git
/Kissaki/KCode-Jetpack-Scripts--CSS-Refresh | Firefox Jetpack Addons / Scripts – For everyone! \ https://github.com/Kissaki/KCode-Jetpack-Scripts--CSS-Refresh.git
/sckitt/fhp | Privacy & security hardening script for Firefox \ https://github.com/sckitt/fhp.git
/Fmstrat/selenium | Docker container for python selenium scripts with Firefox \ https://github.com/Fmstrat/selenium.git
/dillbyrne/addon-dev-tools | Various scripts to help with firefox addon development \ https://github.com/dillbyrne/addon-dev-tools.git
/conradfriedrich/qutebrowser-bookmarks-importer | Script to import Firefox bookmarks as qutebrowser quickmarks \ https://github.com/conradfriedrich/qutebrowser-bookmarks-importer.git
/igoralmeida/sessionstore-fiddle | Python scripts to mess around with Firefox's sessionstore.js \ https://github.com/igoralmeida/sessionstore-fiddle.git
/neotamizhan/spell_helper | scripts to help with firefox tamil spell checker dic files. \ https://github.com/neotamizhan/spell_helper.git
/stephanepechard/firefox_opened_tabs | A small script to extract opened tabs from Firefox. \ https://github.com/stephanepechard/firefox_opened_tabs.git
/feherke/Greasemonkey-script | User scripts for the Greasemonkey extension for Firefox \ https://github.com/feherke/Greasemonkey-script.git
/Ferlinuxdebian/firefox_install | Script simples para instalar o firefox no debian.  \ https://github.com/Ferlinuxdebian/firefox_install.git
/ueliem/blabbel | A firefox extension to enable typing of non-latin scripts.  \ https://github.com/ueliem/blabbel.git
/yoasif/temporary-firefox | Scripts to run Firefox with a temporary profile. \ https://github.com/yoasif/temporary-firefox.git
/Nobel3D/merge-firefox-history | Bash script to merge firefox's history database (sqlite3) \ https://github.com/Nobel3D/merge-firefox-history.git
/feherke/FireGestures-script | User scripts for the FireGestures extension for Firefox \ https://github.com/feherke/FireGestures-script.git
/mjiricka/firefox-bookmark-check | Simple Python script for checking changes in Firefox bookmarks. \ https://github.com/mjiricka/firefox-bookmark-check.git
/johan/greasemonkey-old-partial-history | Greasemonkey is a user script manager for Firefox. \ https://github.com/johan/greasemonkey-old-partial-history.git
/eli-sr/Firefox-Updater | Bash script for update to the last version Firefox browser \ https://github.com/eli-sr/Firefox-Updater.git
/chino/greasemonkey-scripts | Greasemonkey scripts I use for Firefox and Chrome. \ https://github.com/chino/greasemonkey-scripts.git
/askeing/b2g-beta-tools | Script tools (Beta version) for B2G (Firefox OS) project. \ https://github.com/askeing/b2g-beta-tools.git
/zarakshR/rofiBookmarks | Python script to open firefox bookmarks from rofi \ https://github.com/zarakshR/rofiBookmarks.git
/loadenmb/pppFox | Portable firefox & profile manager shell scripts which create & load firefo \ https://github.com/loadenmb/pppFox.git
/alwaystest/Online-translate | mod by eric 。Fix the script on GM 2.X 。Translate Online quickly. For Firefo \ https://github.com/alwaystest/Online-translate.git
/alicj/GMScripts | Scripts I wrote to be used by GreaseMonkey on Firefox to make my life easie \ https://github.com/alicj/GMScripts.git
/mvoelk/conversion_scripts | Various text level conversion scripts, SMS and contacts to Android, Browser \ https://github.com/mvoelk/conversion_scripts.git
/siddjha1/webpage-screenshoter-With-AWS-S3-Upload- | Grab screenshots of web pages and upload them to AWS S3.- Script only (Fire \ https://github.com/siddjha1/webpage-screenshoter-With-AWS-S3-Upload-.git
/karlicoss/haveibeenpwned | Script to track changes on haveibeenpwned  (discontinued in favor of https: \ https://github.com/karlicoss/haveibeenpwned.git
/romarioarruda/screenshot-navegador | Script para automatizar captura de imagens através do screenshot do firefox \ https://github.com/romarioarruda/screenshot-navegador.git
/abr4xas/workbench | Script para preparar el entorno para compilar una ROM para Firefox OS [DEBI \ https://github.com/abr4xas/workbench.git
/mnjul/gaia-kb-dict-tools | Some scripts related to Mozilla Boot-2-Gecko (Firefox OS) Gaia Keyboard dic \ https://github.com/mnjul/gaia-kb-dict-tools.git
/nisaacson/download-file-base64 | Allows iMacros for Firefox scripts to download remote binary resources and  \ https://github.com/nisaacson/download-file-base64.git
/sandipransing/twinkle_tel | firefox click to call script for twinkle using tel protocol (clicktocall us \ https://github.com/sandipransing/twinkle_tel.git
/chbarts/firefox-json-stuff | Scripts for the various JSON formats Firefox with Session Manager emits. \ https://github.com/chbarts/firefox-json-stuff.git
/GeorgeGkas/page_viewsAdder | A python script that generate views in a page using Firefox \ https://github.com/GeorgeGkas/page_viewsAdder.git
/v3nt4n1t0/DetectMozillaFirefoxVulnDomain | Script in PowerShell to detect vulnerable versions of Mozilla Firefox in a  \ https://github.com/v3nt4n1t0/DetectMozillaFirefoxVulnDomain.ps1.git
/scv119/dmv | Geasemonkey script running in Firefox who automatically make a behind the w \ https://github.com/scv119/dmv.git
/serbrech/firefix | a script that setup changes firefox preferences to bypass some security  \ https://github.com/serbrech/firefix.git
/FabCre/Shell-Back-Up-Scripts | Linux Shell Backup scripts to copy Thunderbird Profil and Mail, Firefox Fav \ https://github.com/FabCre/Shell-Back-Up-Scripts.git
/tuxlover/update_firefox | Small Python script to automaticly download the latest version of firefox f \ https://github.com/tuxlover/update_firefox.git
/nils-ohlmeier/hello-e2e-tests | Scripts used for Firefox Hello end-to-end test setup on servers \ https://github.com/nils-ohlmeier/hello-e2e-tests.git
/EstebanSannin/Firefox-Avviator | Un piccolo script che dato un url lo apre in firefox. \ https://github.com/EstebanSannin/Firefox-Avviator.git
/anttirt/numbered-tabs-firefox | Simple Firefox userChrome.js script to add numbers to tab labels \ https://github.com/anttirt/numbered-tabs-firefox.git
/Achillefs/firestone | A collection of Firefox automation and programmatic management scripts in R \ https://github.com/Achillefs/firestone.git
/LeoZ100/d2ff | Simple script to transform a Dashlane JSON export to a compatible CSV impor \ https://github.com/LeoZ100/d2ff.git
/Tony2464/FIS-FirefoxInstallScript | Script to install the latest version of Firefox for Debian-based distros \ https://github.com/Tony2464/FIS-FirefoxInstallScript.git
/reigningmetal/Auto-tab-Opener | Simple python script that opens several tabs in firefox (or other browsers  \ https://github.com/reigningmetal/Auto-tab-Opener.git
/pahund/grease-that-monkey | Collection of scripts for making the web a better place using GreaseMonkey  \ https://github.com/pahund/grease-that-monkey.git
/mitesh1112/FireFoxSend | A simple script to upload / download files using send.firefox.com \ https://github.com/mitesh1112/FireFoxSend.git
/efeyaryukey75/firefox-script | This is a bash script to download and run the latest Firefox 64 bit for Lin \ https://github.com/efeyaryukey75/firefox-script.git
/Vallek/firefox-cycle-scroll-tabs | This is a user script for unbranded Firefox to cycle scroll through tabs. \ https://github.com/Vallek/firefox-cycle-scroll-tabs.git
/Niluge-KiWi/browser-scripts | My scripts or styles used on my browsers (firefox or chrome) \ https://github.com/Niluge-KiWi/browser-scripts.git
/awalkersan/screenshotTaker-basic | Simple script that takes screenshots of websites using Firefox webdriver an \ https://github.com/awalkersan/screenshotTaker-basic.git
/JaviertINC/FastFirefoxChanger | Un simple script en BATCH, para cambiar/abrir perfiles de Firefox muy rápid \ https://github.com/JaviertINC/FastFirefoxChanger.git
/Rohanov30/Facebook_login_Automation | Login facebook in firefox using automated script in JAVA using Selenium  \ https://github.com/Rohanov30/Facebook_login_Automation.git
/YingYoh09/polybar-mediaplayer | Minimal script to get current song title and artist for polybar from player \ https://github.com/YingYoh09/polybar-mediaplayer.git
/ricardopontes/miudin | Script para encurtar URL's com a extensão Ubiquity do Firefox \ https://github.com/ricardopontes/miudin.js.git
/davidjhulse/davesbingrewardsbot | An automated browser script designed to be run with Mozilla Firefox \ https://github.com/davidjhulse/davesbingrewardsbot.git
/k0ekk0ek/firefox-branding | Script that installs official Firefox branding for Iceweasel in Debian GNU/ \ https://github.com/k0ekk0ek/firefox-branding.git
/mn-xd/Xmonad-installation | Script for arch linux to install xmonad with all dependencies. Optionally w \ https://github.com/mn-xd/Xmonad-installation.git
/ChristopherMGlass/TabCleaner | Project Goal: to create a script that aids in the closing of groups of tabs \ https://github.com/ChristopherMGlass/TabCleaner.git
/ehsan/nouatest-crowdsource | A script to run the Firefox updater tests with the Windows service on diffe \ https://github.com/ehsan/nouatest-crowdsource.git
/reuniware/Clean-Windows-Tracks-Script | Script to clean up Firefox, Chrome, Internet Explorer, Opera and all junk f \ https://github.com/reuniware/Clean-Windows-Tracks-Script.git
/vitkarpenko/icons-decrease-saturation | :arrow_down_small: Simple script that decreases saturation of all firefox i \ https://github.com/vitkarpenko/icons-decrease-saturation.git
/garywill/doubleclick-new-tab | Firefox open new tab by double clicking on tab bar , userchrome script. (Ne \ https://github.com/garywill/doubleclick-new-tab.git
/techchrism/firefox-password-decrypt | A Powershell script designed to load the nss3 dll and decrypt saved Firefox \ https://github.com/techchrism/firefox-password-decrypt.git
/ItsDanielHarris/Block-Promoted-Tweets | This script blocks promoted tweets using the TamperMonkey extension in Goog \ https://github.com/ItsDanielHarris/Block-Promoted-Tweets.git
/leonardoqueiroz-code/Imacro-Simple-Scripts | Simple scripts developed for use in imacros browser plugin Chrome, firefox  \ https://github.com/leonardoqueiroz-code/Imacro-Simple-Scripts.git
/lapik0v/interpals | Python script for interpals.net. Makes autovisiting, spam using Firefox bro \ https://github.com/lapik0v/interpals.git
/therealjeffg/reload-my-tab | A Firefox extension and node script that work together to make coding web a \ https://github.com/therealjeffg/reload-my-tab.git
/bret-bauer/Accurint-Scrape | Scrapes Accurint website based on uploaded CSV list.  PHP script creates iM \ https://github.com/bret-bauer/Accurint-Scrape.git
/girol/bookmark2html | Script Python que converte uma lista de links gerada a partir do Firefox pa \ https://github.com/girol/bookmark2html.git
/modiscover/aereoTV | Whatch LIVE TV channels from New York anywhere in the world with Aereo. Byp \ https://github.com/modiscover/aereoTV.git
/iresharma/Sellular-run-script | A simple shell script to run all the required servers and open vscode, safa \ https://github.com/iresharma/Sellular-run-script.git
/nilfoer/norobot_export | Firefox extension that exports authentication information so you can pass i \ https://github.com/nilfoer/norobot_export.git
/Riajyuu/IEFox | This repository means to transplant UI on IE 8 (or later) to Mozilla Firefo \ https://github.com/Riajyuu/IEFox.git
/g-adamante/metabase_csv_export | Using selenium and Firefox Driver, this script finds a metabase question, l \ https://github.com/g-adamante/metabase_csv_export.git
/KerryRitter/SiteMapScreenShot | This Selenium script will grab all URLs from a properly structured XML site \ https://github.com/KerryRitter/SiteMapScreenShot.git
/Laurvin/Fantasy-Flight-Games---Colorbox-Firefox-fix | The Colorbox script does not remove the scrollbars on Firefox by default, c \ https://github.com/Laurvin/Fantasy-Flight-Games---Colorbox-Firefox-fix.git
/plrang/SS-Titles-Check---Pseudospam | SS Pseudospam (JS,HTML) - check the Repeating Words in Titles, a tool for S \ https://github.com/plrang/SS-Titles-Check---Pseudospam.git
/aswin89thee/TamperMonkey-Scripts | A collection of simple scripts that I wrote for TamperMonkey in Chrome (Gre \ https://github.com/aswin89thee/TamperMonkey-Scripts.git
/thinkphp/Greasemonkey | Greasemonkey is a Mozilla Firefox add-on that allows users to install scrip \ https://github.com/thinkphp/Greasemonkey.git
/xarinatan/Firebox | A script that allows you to create a portable Firefox profile that you can  \ https://github.com/xarinatan/Firebox.git
/Kami/firefox-website-to-remarkable | Project which allows you to convert website to a (grayscale) PDF and send i \ https://github.com/Kami/firefox-website-to-remarkable.git
/bcornw2/Block_Bing_Search_Extension | A Powershell script to run on domain controllers to prevent Office 365 upda \ https://github.com/bcornw2/Block_Bing_Search_Extension.git
/SudhirVaghela/TwitterBot-selenium | Simple twitter Bot using selenium library which is used to use web-browser` \ https://github.com/SudhirVaghela/TwitterBot-selenium.git
/GeekyShiva/Firefox-Image-Blocker-Addon | This is a fun and learning addon made especially for firefox to block the i \ https://github.com/GeekyShiva/Firefox-Image-Blocker-Addon.git
/ceivv/ApkDownloader | This is a python script to automate android apps downloading process , cuz  \ https://github.com/ceivv/ApkDownloader.git
/peiyaoh/export_delicious_public_posts | This script helps export public posts of a user on Delicious (https://del.i \ https://github.com/peiyaoh/export_delicious_public_posts.git
/mflink3012/linux-mozilla-updaters | This is a script for installing/updating Mozilla Firefox and Mozilla Thunde \ https://github.com/mflink3012/linux-mozilla-updaters.git
/osibeyond-llc/Block_Bing_Search_Extension | A Powershell script to run on domain controllers to prevent Office 365 upda \ https://github.com/osibeyond-llc/Block_Bing_Search_Extension.git
/facu2108/BashScreenshotTool | A simple bash script tool to capture screenshots across multiple environmen \ https://github.com/facu2108/BashScreenshotTool.git
/kamshory/PseudoClassStyle | Sometime yo need to change pseudo class ::before and ::after dynamicaly fro \ https://github.com/kamshory/PseudoClassStyle.git
/danalexander/Digg-Direct-Links-Block-Digg-Bar | Greasemonkey script for Firefox and Chrome that rewrites Digg site links to \ https://github.com/danalexander/Digg-Direct-Links-Block-Digg-Bar.git
/wainstead/LHHReplay | lhhreplay is a Perl script that can "replay" the output from the Firefox ad \ https://github.com/wainstead/LHHReplay.git
/goelm08/seo | Creating a script and adding to online traffic is easy and can be done easi \ https://github.com/goelm08/seo.git
/kenneth558/KingdomComeIMeanItAndIMeanNowSurveillance | A web page (NOTE: Only Firefox & Pale Moon browsers give approved rendering \ https://github.com/kenneth558/KingdomComeIMeanItAndIMeanNowSurveillance.git
/venus-123/-Bootstrap-Paginator- | Bootstrap Paginator是一款基于Bootstrap的js分页插件，功能很丰富，个人觉得这款插件已经无可挑剔了。它提供了一系列的参数用来 \ https://github.com/venus-123/-Bootstrap-Paginator-.git
/RaulMgPz/360toCubeMapTrip | 360-to-cubemap El proyecto consiste en hacer convertir una fotografía de 36 \ https://github.com/RaulMgPz/360toCubeMapTrip.git
/JanGray/hint---Infotrader |  WarningElements must have sufficient color contrast: Element has insuffici \ https://github.com/JanGray/hint---Infotrader.git
/Briaayaann123/agarbot-user | // ==UserScript== // @name         Leyvagarbots // @version      2.0.0 (New \ https://github.com/Briaayaann123/agarbot-user.git
/OnWolfOn/Bots- | // ==UserScript== // @name         Wolf Bot V3 // @namespace    http://www. \ https://github.com/OnWolfOn/Bots-.git
/ozzeD/-DOCTYPE-html-PUBLIC---W3C-DTD-XHTML-1 |  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 	"http://www.w3.o \ https://github.com/ozzeD/-DOCTYPE-html-PUBLIC---W3C-DTD-XHTML-1.0-Strict-EN-http-www.w3.org-TR-xhtml1-DTD-xhtml1-s.git
/lance65/ | # # This is free software, lisence use MIT. #  # Copyright (C) 2019 P3TERX  \ https://github.com/lance65/.github-workflows-openwrt-ci.yml.git
/askme01/Learn-software-testing-online-Selenium-with-java | As we all know the situation in the world is going on the pandemic crisis a \ https://github.com/askme01/Learn-software-testing-online-Selenium-with-java.git
/Gabriel1231n2j3n/hacks-para-krunker | // ==UserScript== // @name          aimbot gratis para krunker.io // @descr \ https://github.com/Gabriel1231n2j3n/hacks-para-krunker.git
/mochtamvan/launcher | /*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby \ https://github.com/mochtamvan/launcher.user.js.git
/lhai36366/lhai36366 | WPF Partial Trust Security Article 10 minutes to read In general, Internet  \ https://github.com/lhai36366/lhai36366.git
/Bailey520/TUMBR2 | (function(){var E;var g=window,n=document,p=function(a){var b=g._gaUserPref \ https://github.com/Bailey520/TUMBR2.git
/smith86n/wiki-is-mostly-fake-radom-words-word-genrationr- | MediaWiki:FileUploadWizard.js From Wikipedia, the free encyclopedia Jump to \ https://github.com/smith86n/wiki-is-mostly-fake-radom-words-word-genrationr-.git
/edipurmail/adsbygoogles | (function(){var aa=&quot;function&quot;==typeof Object.create?Object.create \ https://github.com/edipurmail/adsbygoogles.git
/edipurmail/adsbygoogle | (function(){var aa=&quot;function&quot;==typeof Object.create?Object.create \ https://github.com/edipurmail/adsbygoogle.js.git
/CognizantQAHub/Cognizant-Intelligent-Test-Scripter-Firefox-Addon | Firefox Addon for Cognizant Intelligent Test Scripter \ https://github.com/CognizantQAHub/Cognizant-Intelligent-Test-Scripter-Firefox-Addon.git
/Mortalit/userChromeJS | Firefox userChromeJS Scripts \ https://github.com/Mortalit/userChromeJS.git
/Happy-Ferret/Moz2D | Scripts to compile gfx/2d part of Mozilla Firefox as single shared library \ https://github.com/Happy-Ferret/Moz2D.git
/jryans/devtools-migrate | Migration scripts for Firefox DevTools code reorganization \ https://github.com/jryans/devtools-migrate.git
/theparadoxer02/Automation | This script in made during learning selenium that ask for username and pass \ https://github.com/theparadoxer02/Automation.git
/chuahou/firefox-exts | Small scripts for Firefox \ https://github.com/chuahou/firefox-exts.git
/CAMS-CyberPatriot/freshfox | firefox privacy & security script \ https://github.com/CAMS-CyberPatriot/freshfox.git
/nie-xin/monkey-scripts | Script for firefox greasemonkey \ https://github.com/nie-xin/monkey-scripts.git
/jmjustin/greasemonkey-scripts | Firefox extension Greasemonkey scripts  \ https://github.com/jmjustin/greasemonkey-scripts.git
/alexkasko/firefox-signed-scripts | Firefox signed script example \ https://github.com/alexkasko/firefox-signed-scripts.git
/thelumberjhack/grease-monkey-scripts | My Firefox GreaseMonkey Scripts \ https://github.com/thelumberjhack/grease-monkey-scripts.git
/FunTimeCoding/firefox-tools | Helper scripts for Firefox. \ https://github.com/FunTimeCoding/firefox-tools.git
/st3fan/firefox-ios-automation | Firefox iOS Automation Scripts \ https://github.com/st3fan/firefox-ios-automation.git
/perdolka/Auto-Refresh | Voilenmonkey script for Firefox \ https://github.com/perdolka/Auto-Refresh.git
/lcy0321/Userscripts | My user scripts for Firefox. \ https://github.com/lcy0321/Userscripts.git
/kassent/Profiles | Firefox-Profiles-Chrome(My scripts） \ https://github.com/kassent/Profiles.git
/gdsotirov/firefox | Slackware build script for Firefox \ https://github.com/gdsotirov/firefox.SlackBuild.git
/Bytecture/firefox-hide-tabs-script | Script to hide firefox repos \ https://github.com/Bytecture/firefox-hide-tabs-script.git
/devone2/greasemonkey | Usefull scripts for greasemonkey firefox \ https://github.com/devone2/greasemonkey.git
/sircampsalot7062/firegestures-scripts |  My Firefox extension Firegestures scripts \ https://github.com/sircampsalot7062/firegestures-scripts.git
/AbrahamSue/gm_scripts | For Greasemonkey script of firefox \ https://github.com/AbrahamSue/gm_scripts.git
/pellucid/browser-plugins | user scripts,  firefox add-ons \ https://github.com/pellucid/browser-plugins.git
/Salt7900/ScreenRecorder | Plugin for FireFox that allows the user to create a PhantomJS testing scrip \ https://github.com/Salt7900/ScreenRecorder.js.git
/unt0uchable/userscripts2 | Browser user.js scripts for Firefox (greasemonkey). \ https://github.com/unt0uchable/userscripts2.git
/keithwoelke/selenium-scripts | Selenium IDE scripts for Firefox 49. \ https://github.com/keithwoelke/selenium-scripts.git
/flodolo/gecko-it-qa | QA scripts for Italian Firefox/Fennec translation \ https://github.com/flodolo/gecko-it-qa.git
/hatemade/firefoxSessionBackup | firefox sessionsstore backup perl script for windows \ https://github.com/hatemade/firefoxSessionBackup.git
/pauloandresoares/firefox-ntlm | Script to enable NTLM in firefox \ https://github.com/pauloandresoares/firefox-ntlm.git
/token7/userscripts | user scripts for firefox but these scripts are broken. \ https://github.com/token7/userscripts.git
/29988122/Facebook-Mobile_Desktop_Switcher | A simple Greasemonkey script / Firefox Extension \ https://github.com/29988122/Facebook-Mobile_Desktop_Switcher.git
/MicroGenesis5/DeleteFirefoxCache | Powershell script to delete Firefox cache \ https://github.com/MicroGenesis5/DeleteFirefoxCache.git
/3windmill/Firefox-update-script | Firefox update Bash script for Debian \ https://github.com/3windmill/Firefox-update-script.git
/O7zSO31IVg/mozilla-firefox-installer | (UNOFFICIAL) Mozilla firefox (ALL Edition) installer script \ https://github.com/O7zSO31IVg/mozilla-firefox-installer.git
/irgendsontyp/greasemonkey-user-scripts | User scripts for the Firefox extension Greasemonkey \ https://github.com/irgendsontyp/greasemonkey-user-scripts.git
/ILMostro/ffox-devel | Firefox customizations, customized addons, user-scripts \ https://github.com/ILMostro/ffox-devel.git
/Qeole/gm_scripts | Miscellaneous Grease Monkey scripts for Firefox \ https://github.com/Qeole/gm_scripts.git
/eote/gm_scripts | User scripts for grease monkey on firefox. \ https://github.com/eote/gm_scripts.git
/inotom/reloadfx | Vim script to reload Firefox web browser. \ https://github.com/inotom/reloadfx.git
/Svalorzen/UbiquityScripts | My experiments in scripting with Ubiquity (Firefox) \ https://github.com/Svalorzen/UbiquityScripts.git
/dpalmeiro/firefox-perf-tools | Various scripts to analyze firefox performance \ https://github.com/dpalmeiro/firefox-perf-tools.git
/wyattjoh/block-script | Firefox Plugin for blocking scripts matching patterns \ https://github.com/wyattjoh/block-script.git
/GIThunte/allff | Script for download all firefox version \ https://github.com/GIThunte/allff.git
/khangu1/Test-page | firefox test project with java script \ https://github.com/khangu1/Test-page.git
/jryans/simulator-signing | Scripts for signing Firefox OS Simulators \ https://github.com/jryans/simulator-signing.git
/AllanLRH/firefoxStuff | Firefox userchrome and script to symlink it \ https://github.com/AllanLRH/firefoxStuff.git
/elthanor/firefox_search_customization | Scripts to customize firefox search json configuration. \ https://github.com/elthanor/firefox_search_customization.git
/xenithorb/firefox_updater | Firefox Developer Edition updater script for Fedora \ https://github.com/xenithorb/firefox_updater.git
/rosariotech/atualizaFirefox | Pequeno script para atualizar o Firefox \ https://github.com/rosariotech/atualizaFirefox.git
/davidfdzp/selenium | Scripts to automate Firefox and Chrome \ https://github.com/davidfdzp/selenium.git
/compustar/ff_automation | Scripts for FireFox automation with Selenium \ https://github.com/compustar/ff_automation.git
/srdavis/userscripts | Browser user.js scripts for Firefox (greasemonkey). \ https://github.com/srdavis/userscripts.git
/charmander/descript | A script-blocking extension for Firefox. \ https://github.com/charmander/descript.git
/hsaito/GetFirefoxPS | A simple PowerShell Firefox download script \ https://github.com/hsaito/GetFirefoxPS.git
/totocsa/Firefox-updater | Firefox Browser Developer updater bash script \ https://github.com/totocsa/Firefox-updater.git
/domis77/FirefoxScripts | Scripts use on Firefox through Greasemonkey script runner. \ https://github.com/domis77/FirefoxScripts.git
/yvv4git/prog_browser_firefox | Examples firefox browser scripts and etc \ https://github.com/yvv4git/prog_browser_firefox.git
/janimo/firefox-startup-timing | shell script to measure firefox' startup time \ https://github.com/janimo/firefox-startup-timing.git
/xKerman/autopagerize-test | test script for autopagerize firefox extension \ https://github.com/xKerman/autopagerize-test.git
/EugeneDanini/greasemonkey-scripts | Scripts for greasemonkey firefox add-on \ https://github.com/EugeneDanini/greasemonkey-scripts.git
/amccreight/mochitest-logs | Scripts for analyzing Firefox test logs \ https://github.com/amccreight/mochitest-logs.git
/subhadig/firefox_updater | Updater script for Firefox for Linux \ https://github.com/subhadig/firefox_updater.git
/gorka-lab/update-firefox-developer-linux | Bash Script to Update FireFox Developer in Linux along side FireFox \ https://github.com/gorka-lab/update-firefox-developer-linux.git
/krlex/firefox-upgrade | This is script for upgrade firefox downlloaded from official-firefox site o \ https://github.com/krlex/firefox-upgrade.git
/inkubur/foxpaw | Firefox install script for linux | 适用于linux的Firefox安装脚本 \ https://github.com/inkubur/foxpaw.git
/aknobloch/firefox-cookie-sweep | Script to cleanup Firefox cookies, allowing more configuration than the Fir \ https://github.com/aknobloch/firefox-cookie-sweep.git
/simonbru/firefox-auto | Firefox startup script that downloads and installs Firefox on first run \ https://github.com/simonbru/firefox-auto.git
/Vokda/firefox_updater | A small script that updates firefox for Debian linux \ https://github.com/Vokda/firefox_updater.git
/sinfallas/firefoxos-prebuild | scripts to install dependencies to build Firefox OS \ https://github.com/sinfallas/firefoxos-prebuild.git
/gasonchiu/UserScript_PersonalMemo | user.js script list for tempermonkey(Chrome) and greasemonky(Firefox) \ https://github.com/gasonchiu/UserScript_PersonalMemo.git
/mksvdmtr/Netis-WF2411-reboot | Python script for reboot router netis wf2411 from Firefox \ https://github.com/mksvdmtr/Netis-WF2411-reboot.git
/thanatos/open-in-firefox-container | Script to open a link in a container in Firefox \ https://github.com/thanatos/open-in-firefox-container.git
/Posit88/SeleniumAndJava_ForValtech | Valtech Website test script (in Java for Selenium using firefox) \ https://github.com/Posit88/SeleniumAndJava_ForValtech.git
/curufuin/ffmangler | script to mangle firefox user.js to automatically change useragent. \ https://github.com/curufuin/ffmangler.git
/jdsanta18/spaghetti-amazon-script | Script to apply overtime through a firefox browser \ https://github.com/jdsanta18/spaghetti-amazon-script.git
/SargeDGz/RFF | Restart Firefox if its not running Bash script \ https://github.com/SargeDGz/RFF.git
/asakura42/ff2rss | Script that converts Firefox Bookmarks to RSS feed \ https://github.com/asakura42/ff2rss.git
/jchuong/SquareFFx | A simple Stylish script that makes your Firefox look nicer. \ https://github.com/jchuong/SquareFFx.git
/rpasta42/Vim-Github | Make Github Editor work like vim (GreaseMonkey Firefox script) \ https://github.com/rpasta42/Vim-Github.git
/Mossop/BuildWatch | A script that displayed a dashboard for a Firefox build. \ https://github.com/Mossop/BuildWatch.git
/kashav/bugs | Some of my Firefox bugs, testcases, scripts, patches \ https://github.com/kashav/bugs.git
/dzeber/fxos-metrics | Tools and scripts for computing metrics for Firefox OS \ https://github.com/dzeber/fxos-metrics.git
/acmiyaguchi/fx-desktop-scripts | build scripts for building firefox desktop with taskcluster \ https://github.com/acmiyaguchi/fx-desktop-scripts.git
/djemos/mozilla-firefox | Script to download and build mozilla-firefox with all locales \ https://github.com/djemos/mozilla-firefox.git
/mamclain/gm-script-google-search | Greasemonkey script to Make Google Search look "normal" in Firefox \ https://github.com/mamclain/gm-script-google-search.git
/JaerenTredway/web-browser-projects | Firefox extensions, browser themes, Tamper Monkey scripts, etc. \ https://github.com/JaerenTredway/web-browser-projects.git
/ngkengwooi/debian-flatpak-firefox | Script to install and configure Firefox Flatpak on Debian \ https://github.com/ngkengwooi/debian-flatpak-firefox.git
/slowpoketail/firestarter | a small script to start different firefox profiles with dmenu \ https://github.com/slowpoketail/firestarter.git
/Caimapo/BrowserFilePowershell | Powershell script for get the last hour url from firefox \ https://github.com/Caimapo/BrowserFilePowershell.git
/jgbishop/extensionUtils | A handy toolkit of Perl scripts for Firefox extension developers. \ https://github.com/jgbishop/extensionUtils.git
/fraxx001/patch_omni_ja | Simple script to patch key_close reserve policy of firefox \ https://github.com/fraxx001/patch_omni_ja.git
/Mossop/MozillaBuild | Scripts for bulding Firefox and other Mozilla based apps \ https://github.com/Mossop/MozillaBuild.git
/dawidowicz/kitten-game-addon | Scripts automating production in Kitten Game as a Firefox extension \ https://github.com/dawidowicz/kitten-game-addon.git
/iuvbio/firefox_upgrade | Script to upgrade Firefox to a new version. \ https://github.com/iuvbio/firefox_upgrade.git
/orbitalhybridization/ffox | Bash script for opening firefox with various flags and options \ https://github.com/orbitalhybridization/ffox.git
/jdial1/BookmarkBackupAndRestore | Script to backup and restore Chrome and Firefox bookmarks \ https://github.com/jdial1/BookmarkBackupAndRestore.git
/InfoSeeking/CoagmentoSpring2015 | Contains server-side scripts and Firefox extension for Coagmento \ https://github.com/InfoSeeking/CoagmentoSpring2015.git
/hoche/BookmarkCuller | Python/Qt script to help cull bookmarks from Firefox \ https://github.com/hoche/BookmarkCuller.git
/lucasajones-aurora/jsMDNtutorial | Java Script practice from the Firefox MDN developer network \ https://github.com/lucasajones-aurora/jsMDNtutorial.git
/jsinghrai/Firefox-Dev-Installation | Firefox Dev Edition Installation script for Ubuntu/Debian based distros. \ https://github.com/jsinghrai/Firefox-Dev-Installation.git
/costaronaldo/atualiza-firefox | Script para facilitar a atualização manual do Firefox no Linux \ https://github.com/costaronaldo/atualiza-firefox.git
/cmdlette/Set-BrowserHomepage | Scripts to set homepages in Chrome and Firefox per user. \ https://github.com/cmdlette/Set-BrowserHomepage.git
/arwinthoriq/script-imacros-BOT-YLH | kumpulan script imacros untuk youlikehits dengan mozila firefox 55 \ https://github.com/arwinthoriq/script-imacros-BOT-YLH.git
/thedumbterminal/user-scripts | Various user scripts for the grease monkey firefox addon \ https://github.com/thedumbterminal/user-scripts.git
/yingkailiang/firefoxOsSampleCode | Write firefox os sample code using html5 and java script \ https://github.com/yingkailiang/firefoxOsSampleCode.git
/nisaacson/loggly-imacros | Send log data to Loggly from iMacros for firefox scripts \ https://github.com/nisaacson/loggly-imacros.git
/thunderpy/firefoxInstall | Powershell script to install firefox by mentioning version number. \ https://github.com/thunderpy/firefoxInstall.git
/msridhar/multi-column-articles | Greasemonkey script for multi-column articles in Firefox \ https://github.com/msridhar/multi-column-articles.git
/NotWoods/firefox-worker-blob-bug | Simple script to reproduce Firefox bug that crashes the tab \ https://github.com/NotWoods/firefox-worker-blob-bug.git
/herrernst/docwrite-block-ff | Firefox extension to prevent document.writing script tags with src \ https://github.com/herrernst/docwrite-block-ff.git
/aravindh-browserstack/URLGetters | Scripts to read URLs from active windows of Firefox/IE \ https://github.com/aravindh-browserstack/URLGetters.git
/thoughtsunificator/browser-extension-reload-firefox |  Firefox userchrome scripts for live-reloading your extensions \ https://github.com/thoughtsunificator/browser-extension-reload-firefox.git
/firefueled/gm_scripts | A collection of fun hacky GreaseMonkey scripts. Used on Firefox. \ https://github.com/firefueled/gm_scripts.git
/eguarc/update-firefox | A simple bash script to update Firefox from public binaries. \ https://github.com/eguarc/update-firefox.git
/EricRahm/oxidation-stats | Scripts used to calculate percentage of Rust used in Firefox \ https://github.com/EricRahm/oxidation-stats.git
/vEnhance/venueQ | Wrapper scripts so that Evan can stop opening firefox \ https://github.com/vEnhance/venueQ.git
/stevenalexander/WebdriverIO-test | Simple test script to download Selenium Server standalone and run a test sc \ https://github.com/stevenalexander/WebdriverIO-test.git
/ogladkov/Google-Images-Selenium-Parser | This Python 3 script uses Selenium driver for Firefox browser. Do install S \ https://github.com/ogladkov/Google-Images-Selenium-Parser.git
/yobukodori/firefox-mobile-script-menu | Script menu for firefox mobile 79+(fenix) using ublock origin. You can run  \ https://github.com/yobukodori/firefox-mobile-script-menu.git
/mdigiorgio/cookies-biter | Bash script to selectively delete cookies from Mozilla Firefox's database. \ https://github.com/mdigiorgio/cookies-biter.git
/shrinidhi666/firejail-scripts | Scripts to securely launch firefox and google-chrome without hampering the  \ https://github.com/shrinidhi666/firejail-scripts.git
/mattmah/greased-chrome-scripts | A repository containing my user scripts for Google Chrome ala Greasemonkey  \ https://github.com/mattmah/greased-chrome-scripts.git
/taye/moz-theme-sass-init | A script to create a firefox theme using SASS and @imports from the classic \ https://github.com/taye/moz-theme-sass-init.git
/Pehrsons/msgtracing-fixer | Script for fixing Firefox audio traces taken with MOZ_LOG=MSGTracing:5,raw \ https://github.com/Pehrsons/msgtracing-fixer.git
/alex-matty/FirefoxPrivacyEnhancer | Set of files and scripts to improve privacy and security of Firefox web bro \ https://github.com/alex-matty/FirefoxPrivacyEnhancer.git
/fuzziebrain/gmscripts-orclapex_firefox_fix | Greasemonkey script to fix issues due to line-height support introduce in F \ https://github.com/fuzziebrain/gmscripts-orclapex_firefox_fix.git
/taeram/user-scripts | My collection of User Scripts for GreaseMonkey (Firefox) or Tampermonkey (C \ https://github.com/taeram/user-scripts.git
/ianb/pageshot-history-recorder | Some scripts to get your history from Firefox, then scrape it with PageShot \ https://github.com/ianb/pageshot-history-recorder.git
/vaibhavsingh97/chrome-bookmark-importer | A Python script to import Google Chrome’s bookmarks to Firefox :rocket: :da \ https://github.com/vaibhavsingh97/chrome-bookmark-importer.git
/geordgez/yc-form-filler | Quickly cooked up a python script that completes web forms in browser with  \ https://github.com/geordgez/yc-form-filler.git
/FabienTregan/AmazonieStart | Startup script and instructions to use Firefox Portable Edition as a kioske \ https://github.com/FabienTregan/AmazonieStart.git
/sds0208/ch-qa-opb | This is a bash script that opens a url in Chrome, Firefox, and Safari priva \ https://github.com/sds0208/ch-qa-opb.git
/mad-ady/enrichFirefoxPasswords | Complementary script to https://github.com/unode/firefox_decrypt.git to add \ https://github.com/mad-ady/enrichFirefoxPasswords.git
/pdehaan/blurts-server-data-classes | The script will scrape the HIBP breaches and compare the DataClasses for ea \ https://github.com/pdehaan/blurts-server-data-classes.git
