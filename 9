/Leo-G/Data-Science-Wiki | A wiki of  DataScience, Statistics, Maths, R,Python, AI, Machine Learning,  \ https://github.com/Leo-G/Data-Science-Wiki.git
/v1s1t0r1sh3r3/airgeddon | This is a multi-use bash script for Linux systems to audit wireless network \ https://github.com/v1s1t0r1sh3r3/airgeddon.git
/juewuy/ShellClash | One-click deployment and management of Clash services using Shell scripts i \ https://github.com/juewuy/ShellClash.git
/dana-at-cp/backdoor-apk | backdoor-apk is a shell script that simplifies the process of adding a back \ https://github.com/dana-at-cp/backdoor-apk.git
/LukeSmithxyz/LARBS | Luke's Auto-Rice Bootstrapping Scripts: Installation Scripts for My Arch Li \ https://github.com/LukeSmithxyz/LARBS.git
/RoliSoft/WSL-Distribution-Switcher | Scripts to replace the distribution behind Windows Subsystem for Linux with \ https://github.com/RoliSoft/WSL-Distribution-Switcher.git
/mrworf/plexupdate | Plex Update script to simplify the life of Linux Plex Media Server users. \ https://github.com/mrworf/plexupdate.git
/AutomatedLab/AutomatedLab | AutomatedLab is a provisioning solution and framework that lets you deploy  \ https://github.com/AutomatedLab/AutomatedLab.git
/ivandavidov/minimal | Minimal Linux Live (MLL) is a tiny educational Linux distribution, which is \ https://github.com/ivandavidov/minimal.git
/Hax4us/Nethunter-In-Termux | This is a script by which you can install Kali nethunter (Kali Linux) in yo \ https://github.com/Hax4us/Nethunter-In-Termux.git
/oooldking/script | Some Linux scripts \ https://github.com/oooldking/script.git
/pch/welder | ‍Set up your Linux server with plain shell scripts \ https://github.com/pch/welder.git
/kuoruan/shell-scripts | Linux Shell Scripts \ https://github.com/kuoruan/shell-scripts.git
/microsoft/ClearScript | A library for adding scripting to .NET applications. Supports V8 (Windows,  \ https://github.com/microsoft/ClearScript.git
/jayrambhia/Install-OpenCV | shell scripts to install different version of OpenCV in different distribut \ https://github.com/jayrambhia/Install-OpenCV.git
/haydenjames/bench-scripts | A compilation of Linux server benchmarking scripts. \ https://github.com/haydenjames/bench-scripts.git
/sleventyeleven/linuxprivchecker | linuxprivchecker.py -- a Linux Privilege Escalation Check Script \ https://github.com/sleventyeleven/linuxprivchecker.git
/helixarch/debtap | A script for converting .deb packages into Arch Linux packages, focused on  \ https://github.com/helixarch/debtap.git
/the0demiurge/CharlesScripts | My awesome scripts for Arch Linux or Ubuntu Gnome latest LTS or MacBook. \ https://github.com/the0demiurge/CharlesScripts.git
/masonr/yet-another-bench-script | YABS - a simple bash script to estimate Linux server performance using fio, \ https://github.com/masonr/yet-another-bench-script.git
/dsixda/Android-Kitchen | A text-based kitchen for Android ROM customization.  Uses shell scripts and \ https://github.com/dsixda/Android-Kitchen.git
/P3TERX/warp | WARP 一键安装脚本 | Cloudflare WARP Installer | A Bash script that automatically  \ https://github.com/P3TERX/warp.sh.git
/StevenSLXie/Tutorials-for-Web-Developers | Tutorials for web developers including bash scripting, Linux commands, Mong \ https://github.com/StevenSLXie/Tutorials-for-Web-Developers.git
/1N3/PrivEsc | A collection of Windows, Linux and MySQL privilege escalation scripts and e \ https://github.com/1N3/PrivEsc.git
/gh2o/digitalocean-debian-to-arch | Script to convert a Debian installation on DigitalOcean to Arch Linux \ https://github.com/gh2o/digitalocean-debian-to-arch.git
/offensive-security/kali-arm-build-scripts | Kali Linux ARM build scripts \ https://github.com/offensive-security/kali-arm-build-scripts.git
/ralyodio/node-startup | Startup script for Linux-based systems for running node app when rebooting  \ https://github.com/ralyodio/node-startup.git
/picodotdev/alis | Arch Linux Install Script (or alis, also known as the Arch Linux executable \ https://github.com/picodotdev/alis.git
/ktap/ktap | A lightweight script-based dynamic tracing tool for Linux \ https://github.com/ktap/ktap.git
/stevejenkins/unifi-linux-utils | Helpful Linux / Unix scripts for admins of Ubiquiti (UBNT) UniFi wireless p \ https://github.com/stevejenkins/unifi-linux-utils.git
/zapty/forever-service | Provision node script as a service via forever, allowing it to automaticall \ https://github.com/zapty/forever-service.git
/Har-Kuun/OneClickDesktop | A one-click script that installs a remote desktop environment on a Linux se \ https://github.com/Har-Kuun/OneClickDesktop.git
/Jsitech/JShielder | Hardening Script for Linux Servers/ Secure LAMP-LEMP Deployer/ CIS Benchmar \ https://github.com/Jsitech/JShielder.git
/ayufan-rock64/linux-build | Rock64 Linux build scripts, tools and instructions \ https://github.com/ayufan-rock64/linux-build.git
/markus-perl/ffmpeg-build-script | The FFmpeg build script provides an easy way to build a static FFmpeg on OS \ https://github.com/markus-perl/ffmpeg-build-script.git
/scheib/chromium-latest-linux | Scripts to download and run the latest Linux build of Chromium.  A substitu \ https://github.com/scheib/chromium-latest-linux.git
/binhex/arch-delugevpn | Docker build script for Arch Linux base with Deluge, Privoxy and OpenVPN \ https://github.com/binhex/arch-delugevpn.git
/HariSekhon/DevOps-Bash-tools | 750+ DevOps Bash Scripts - AWS, GCP, Kubernetes, Docker, CI/CD, APIs, SQL,  \ https://github.com/HariSekhon/DevOps-Bash-tools.git
/ngalongc/AutoLocalPrivilegeEscalation | An automated script that download potential exploit for linux kernel from e \ https://github.com/ngalongc/AutoLocalPrivilegeEscalation.git
/bedrocklinux/bedrocklinux-userland | This tracks development for the things such as scripts and (defaults for) c \ https://github.com/bedrocklinux/bedrocklinux-userland.git
/pshved/timeout | A script to measure and limit CPU time and memory consumption of black-box  \ https://github.com/pshved/timeout.git
/so87/OSCP-PwK | This is my cheatsheet and scripts developed while taking the Offensive Secu \ https://github.com/so87/OSCP-PwK.git
/NullArray/RootHelper | A  Bash script that downloads and unzips scripts that will aid with privile \ https://github.com/NullArray/RootHelper.git
/learnbyexample/Linux_command_line | :computer: Introduction to Linux commands and Shell scripting \ https://github.com/learnbyexample/Linux_command_line.git
/b2a3e8/jekyll-theme-console | A jekyll theme inspired by linux consoles for hackers, developers and scrip \ https://github.com/b2a3e8/jekyll-theme-console.git
/JElchison/format-udf | Bash script to format a block device (hard drive or Flash drive) in UDF. Th \ https://github.com/JElchison/format-udf.git
/Lakr233/mobilePillowTalkLite | An iOS & SwiftUI server monitor tool for linux based machines using remote  \ https://github.com/Lakr233/mobilePillowTalkLite.git
/colbycheeze/dotfiles | Setup and install scripts for a new machine + dotfiles for various apps. Li \ https://github.com/colbycheeze/dotfiles.git
/hertg/egpu-switcher |  Setup script for eGPUs in Linux (Xorg) \ https://github.com/hertg/egpu-switcher.git
/zoltan-dulac/css3FontConverter | A shell script that can use other command line tools to produce @font-face  \ https://github.com/zoltan-dulac/css3FontConverter.git
/jlblancoc/suitesparse-metis-for-windows | CMake scripts for painless usage of SuiteSparse+METIS from Visual Studio an \ https://github.com/jlblancoc/suitesparse-metis-for-windows.git
/DingGuodong/LinuxBashShellScriptForOps | Linux Bash Shell Script and Python Script For Ops and Devops \ https://github.com/DingGuodong/LinuxBashShellScriptForOps.git
/stockmind/gpd-pocket-ubuntu-respin | Collection of scripts and tweaks to adapt Ubuntu and Linux Mint ISO images  \ https://github.com/stockmind/gpd-pocket-ubuntu-respin.git
/pier-cli/pier | A Linux script management CLI written in Rust \ https://github.com/pier-cli/pier.git
/stockmind/dell-xps-9560-ubuntu-respin | Collection of scripts and tweaks to adapt Ubuntu and Linux Mint ISO images  \ https://github.com/stockmind/dell-xps-9560-ubuntu-respin.git
/x08d/lockdown | Lockdown your linux install. The simple zero config linux hardening script \ https://github.com/x08d/lockdown.sh.git
/Hax4us/TermuxAlpine | Use TermuxAlpine.sh calling to install Alpine Linux in Termux on Android. T \ https://github.com/Hax4us/TermuxAlpine.git
/KonradIT/gopro-linux | Bash script which helps with post production for GoPro cameras in Linux, ca \ https://github.com/KonradIT/gopro-linux.git
/chrishantha/install-java | Installation script for setting up Java on Linux \ https://github.com/chrishantha/install-java.git
/mpv-player/mpv-build |  Helper scripts to compile mpv on Linux \ https://github.com/mpv-player/mpv-build.git
/offensive-security/nethunter-LRT | The Nethunter Linux Root Toolkit is a collection of bash scripts which inst \ https://github.com/offensive-security/nethunter-LRT.git
/mubaris/motivate | :zap: motivate :zap: - A simple script to print random motivational quotes. \ https://github.com/mubaris/motivate.git
/ynniv/vagrant-opengenera | Convenience scripts to run Open Genera on Mac OS X or a modern Linux. \ https://github.com/ynniv/vagrant-opengenera.git
/oracle/centos2ol | Script and documentation to switch CentOS Linux to Oracle Linux \ https://github.com/oracle/centos2ol.git
/petrstepanov/gnome-macos-remap | Script remaps default GNOME keyboard shortcuts to macOS standards. This pro \ https://github.com/petrstepanov/gnome-macos-remap.git
/notthebee/macos_usb | A script that creates a bootable macOS installer on Linux and macOS \ https://github.com/notthebee/macos_usb.git
/mstorsjo/msvc-wine | Scripts for setting up and running MSVC in Wine on Linux \ https://github.com/mstorsjo/msvc-wine.git
/tytydraco/KTweak | A no-nonsense kernel tweak script for Linux and Android systems, backed by  \ https://github.com/tytydraco/KTweak.git
/urbenlegend/netimpair | An easy-to-use network impairment script for Linux written in Python \ https://github.com/urbenlegend/netimpair.git
/nan0s7/nfancurve | A small and lightweight POSIX script for using a custom fan curve in Linux  \ https://github.com/nan0s7/nfancurve.git
/trustedsec/hardcidr | hardCIDR is a Linux Bash script, but also functions under macOS. Your milea \ https://github.com/trustedsec/hardcidr.git
/rand0m1ze/ezsploit | Linux bash script automation for metasploit \ https://github.com/rand0m1ze/ezsploit.git
/pzmarzly/mic_over_mumble | Use Android/iOS device as your PC's remote microphone, using Mumble + Plumb \ https://github.com/pzmarzly/mic_over_mumble.git
/halpomeranz/lmg | Script for automating Linux memory capture and analysis \ https://github.com/halpomeranz/lmg.git
/graysky2/lostfiles | Simple script that identifies files not owned by any Arch Linux package. \ https://github.com/graysky2/lostfiles.git
/scriptdev2/scriptdev2 | Replacement for the Script Library that comes with MaNGOS, written in C++ a \ https://github.com/scriptdev2/scriptdev2.git
/longsleep/build-pine64-image | Pine64 Linux build scripts, tools and instructions \ https://github.com/longsleep/build-pine64-image.git
/fohtla/Fallout3Terminal | A recreation of the Fallout 3 terminal via a linux bash script! Requires co \ https://github.com/fohtla/Fallout3Terminal.git
/binhex/arch-rtorrentvpn | Docker build script for Arch Linux base with ruTorrent, rTorrent, autodl-ir \ https://github.com/binhex/arch-rtorrentvpn.git
/atarallo/TECMINT_MONITOR | A Shell Script to Monitor Network, Disk Usage, Uptime, Load Average and RAM \ https://github.com/atarallo/TECMINT_MONITOR.git
/Heckie75/eQ-3-radiator-thermostat | Full-Featured shell script in order to control the eQ-3 radiator thermostat \ https://github.com/Heckie75/eQ-3-radiator-thermostat.git
/vivien/vim-linux-coding-style | Vim plugin to respect the Linux kernel coding style http://www.vim.org/scri \ https://github.com/vivien/vim-linux-coding-style.git
/esden/summon-arm-toolchain | This project is not under active development any more. Consider using https \ https://github.com/esden/summon-arm-toolchain.git
/rbrito/usbmount | Simple set of scripts to automount removable devices for a Linux system \ https://github.com/rbrito/usbmount.git
/gaenserich/hostsblock | an ad- and malware-blocking script for Linux \ https://github.com/gaenserich/hostsblock.git
/victoriadrake/dotfiles | Dotfiles and automagic set-up scripts for Linux flavours \ https://github.com/victoriadrake/dotfiles.git
/erikdubois/Archi3 | Automated script to install i3 and all its programs on Arch Linux  \ https://github.com/erikdubois/Archi3.git
/osresearch/safeboot | Scripts to slightly improve the security of the Linux boot process with UEF \ https://github.com/osresearch/safeboot.git
/Taoviqinvicible/Tools-termux | 1.[Script Termux] -Cmatrix *apt-get update *apt-get upgrade *apt-get instal \ https://github.com/Taoviqinvicible/Tools-termux.git
/YangMame/Arch-Linux-Installer | Arch-Linux-Install-Script/Arch Linux 安装脚本 \ https://github.com/YangMame/Arch-Linux-Installer.git
/fcaviggia/hardening-script-el6 | DISA STIG/USGCB/NSA SNAC Hardening Scripts for Red Hat Enterprise Linux 6 \ https://github.com/fcaviggia/hardening-script-el6.git
/Senscape/Dagon | Dagon is a game engine especially tailored for adventure games and based on \ https://github.com/Senscape/Dagon.git
/IsaacSchemm/MultiCD | A shell script package for creating combination disks from Linux ISOs. \ https://github.com/IsaacSchemm/MultiCD.git
/qrti/shrink | Linux bash script to resize Raspberry SD card images \ https://github.com/qrti/shrink.git
/tclahr/uac | UAC is a Live Response collection script for Incident Response that makes u \ https://github.com/tclahr/uac.git
/LevisWings/Auto-PWE | Script en Bash que te permite convertir una distribución de Linux en un ent \ https://github.com/LevisWings/Auto-PWE.git
/janosgyerik/bashoneliners | A collection of practical or just pure awesome bash one-liners or shell scr \ https://github.com/janosgyerik/bashoneliners.git
/c9s/Vimana | Vimana is an easy to use system for searching , installing, and downloading \ https://github.com/c9s/Vimana.git
/ivandavidov/minimal-linux-script | One script which generates live Linux ISO image with minimal effort. Based  \ https://github.com/ivandavidov/minimal-linux-script.git
/fsquillace/kyrat | SSH wrapper script that brings your dotfiles always with you on Linux and O \ https://github.com/fsquillace/kyrat.git
/KsenijaS/krakenx | Python script to control NZXT cooler Kraken X52/X62 in Linux \ https://github.com/KsenijaS/krakenx.git
/duyuanch/shell | All useful linux shell scripts \ https://github.com/duyuanch/shell.git
/WolverineFan/YNABLinuxInstall | Install script for YNAB 4 on Linux \ https://github.com/WolverineFan/YNABLinuxInstall.git
/SolomonSklash/htbenum | A Linux enumeration script for Hack The Box \ https://github.com/SolomonSklash/htbenum.git
/ggeorgovassilis/linuxscripts | Script collection for linux \ https://github.com/ggeorgovassilis/linuxscripts.git
/brunodles/linux-second-screen | Scripts to repurpose old android device as second monitor on linux \ https://github.com/brunodles/linux-second-screen.git
/exceedhl/toft | toft is a library currently supporting testing infrastructure code such as  \ https://github.com/exceedhl/toft.git
/PacktPublishing/Linux-Shell-Scripting-Cookbook-Third-Edition | Linux Shell Scripting Cookbook Third Edition, published by Packt \ https://github.com/PacktPublishing/Linux-Shell-Scripting-Cookbook-Third-Edition.git
/bontibon/digitalocean-alpine | Script to install Alpine Linux on a Digital Ocean droplet \ https://github.com/bontibon/digitalocean-alpine.git
/calandoa/movescreen | Linux script to move windows across screens \ https://github.com/calandoa/movescreen.git
/Cretezy/Swap | Simple swap setup script for Linux. \ https://github.com/Cretezy/Swap.git
/aws/amazon-ecs-logs-collector | The script will be used to collect general os logs as well as Docker and ec \ https://github.com/aws/amazon-ecs-logs-collector.git
/coreos/scripts | Build and maintenance scripts for Container Linux \ https://github.com/coreos/scripts.git
/binhex/arch-qbittorrentvpn | Docker build script for Arch Linux base with qBittorrent, Privoxy and OpenV \ https://github.com/binhex/arch-qbittorrentvpn.git
/dburr/linux-ibeacon | Python script that creates an iBeacon-compatible Bluetooth LE beacon using  \ https://github.com/dburr/linux-ibeacon.git
/brandleesee/ePSXe64Ubuntu | USE DuckStation. ePSXe64Ubuntu is an interactive script that installs ePSXe \ https://github.com/brandleesee/ePSXe64Ubuntu.git
/bmcgonag/docker_installs | Docker and Docker-Compose install scripts for various linux distros and ver \ https://github.com/bmcgonag/docker_installs.git
/openresty/openresty-packaging | Official OpenResty packaging source and scripts for various Linux distribut \ https://github.com/openresty/openresty-packaging.git
/codingtony/udev-monitor-hotplug | Script that get triggered when monitors are plugged in or out in Linux \ https://github.com/codingtony/udev-monitor-hotplug.git
/EmilGus/install_raspi-config | Script to install raspi-config on Raspberry Pi devices with an Linux OS tha \ https://github.com/EmilGus/install_raspi-config.git
/nicolaschan/minecraft-backup | Backup script for Minecraft servers on Linux. Supports screen, tmux, and RC \ https://github.com/nicolaschan/minecraft-backup.git
/avielw/kplugs | KPlugs is a Linux kernel module which provides an interface for dynamically \ https://github.com/avielw/kplugs.git
/altercation/archblocks | Arch Linux Modular Install Script \ https://github.com/altercation/archblocks.git
/miklevin/Pipulate | Free and Open Source SEO Software. Automate Google Sheets without plug-ins. \ https://github.com/miklevin/Pipulate.git
/robotdad/vclinux | Unofficial scripts and stuff related to the Visual C++ for Linux Developmen \ https://github.com/robotdad/vclinux.git
/zma/usefulscripts | Useful Shell scripts on Linux or macOS \ https://github.com/zma/usefulscripts.git
/Diolinux/Linux-Mint-19 | Shell Script de pós instalação do Linux Mint 19.x para utilização pessoal. \ https://github.com/Diolinux/Linux-Mint-19.x-PosInstall.git
/gavinlyonsrepo/cylon | A CLI TUI menu driven bash shell script supporting updates, maintenance, ba \ https://github.com/gavinlyonsrepo/cylon.git
/jonchun/macify-linux | Automated setup scripts to transform Linux into macOS. \ https://github.com/jonchun/macify-linux.git
/LucaCanali/Linux_tracing_scripts | Scripts and tools for troubleshooting and performance analysis in Linux. Th \ https://github.com/LucaCanali/Linux_tracing_scripts.git
/mytbk/liveusb-builder | A script suite to create multiboot USB stick for GNU/Linux distributions \ https://github.com/mytbk/liveusb-builder.git
/cfg2html/cfg2html | cfg2html is a UNIX shell script similar to supportinfo, getsysinfo or get_c \ https://github.com/cfg2html/cfg2html.git
/aldeed/deploymeteor | The deploymeteor script makes it as easy as possible to deploy a meteor app \ https://github.com/aldeed/deploymeteor.git
/archlinux/arch-install-scripts | Useful scripts for installing Arch Linux \ https://github.com/archlinux/arch-install-scripts.git
/hak5darren/wp6 | Linux Internet Connection Sharing script for 6th generation WiFi Pineapples \ https://github.com/hak5darren/wp6.git
/IcaliaLabs/kaishi | A shell script to convert any Mac OS X or Linux computer into a real develo \ https://github.com/IcaliaLabs/kaishi.git
/createthis/linux_gpu_mining | Some useful scripts for GPU mining on Linux \ https://github.com/createthis/linux_gpu_mining.git
/classy-giraffe/easy-arch | Script for boostrapping Arch Linux with BTRFS, snapshots and LUKS encryptio \ https://github.com/classy-giraffe/easy-arch.git
/diegofn/TuneIn-Radio-VLC | TuneIn Radio LUA Script for VLC 2.x. and 3.x. Its compatible with VLC for W \ https://github.com/diegofn/TuneIn-Radio-VLC.git
/lagerspetz/linux-stuff | Useful Linux Stuff, such as linux hybrid graphics scripts for LMDE. \ https://github.com/lagerspetz/linux-stuff.git
/BorisWilhelms/create-dotnet-devcert | A simple script that creates and trusts a self-signed development certifica \ https://github.com/BorisWilhelms/create-dotnet-devcert.git
/rsvp/speedtest-linux | Get download/upload speeds via speedtest.net or fast.com from command line  \ https://github.com/rsvp/speedtest-linux.git
/Juanhacker051/FOTOSPLOIT- | *FotoSploit*  $ git clone https://github.com/Cesar-Hack-Gray/FotoSploit $ c \ https://github.com/Juanhacker051/FOTOSPLOIT-.git
/rickellis/ArchMatic | Arch Linux post-installation setup and config scripts \ https://github.com/rickellis/ArchMatic.git
/moomindani/aws-mon-linux | Bash script that reports custom metric data about Linux performance to Amaz \ https://github.com/moomindani/aws-mon-linux.git
/LRA-QC/arch_installer | script to install arch linux very quickly \ https://github.com/LRA-QC/arch_installer.git
/kravietz/blacklist-scripts | Various IP blacklisting scripts for Linux and OpenWRT \ https://github.com/kravietz/blacklist-scripts.git
/dmi3/bin | Useful scripts and configs for Linux users \ https://github.com/dmi3/bin.git
/funtoo/merge-scripts | Funtoo Linux scripts for managing kits and merges \ https://github.com/funtoo/merge-scripts.git
/vaamonde/ubuntu-2004 | :large_blue_circle: Curso GRÁTIS de GNU/Linux Ubuntu Server 20.04.x LTS - D \ https://github.com/vaamonde/ubuntu-2004.git
/keenerd/pacmatic | A little wrapper script to keep Arch Linux from shooting you in the foot. \ https://github.com/keenerd/pacmatic.git
/geefr/beatsaber-linux-goodies | Mod installation scripts and other goodies to support Beat Saber on Linux \ https://github.com/geefr/beatsaber-linux-goodies.git
/tduehr/ragweed | scriptable Win32/Linux/OSX debugger written in ruby \ https://github.com/tduehr/ragweed.git
/mediabots/Linux-to-Windows-with-QEMU | One Script for Auto installation of Windows Server into a Linux Server.  Sc \ https://github.com/mediabots/Linux-to-Windows-with-QEMU.git
/andrewd18/df-lnp-installer | An installation script for the Dwarf Fortress Lazy Newb Pack, for Linux. \ https://github.com/andrewd18/df-lnp-installer.git
/dennishucd/FFmpeg4Android | This project contains the ffmpeg source code and build script for andriod o \ https://github.com/dennishucd/FFmpeg4Android.git
/PierreGode/Linux-Active-Directory-join-script | Active directory Join script for Ubuntu, Debian, CentOS, Linux Mint, Fedora \ https://github.com/PierreGode/Linux-Active-Directory-join-script.git
/cloudnull/InstanceSync | Bash Script to Sync Linux Instances from one to another \ https://github.com/cloudnull/InstanceSync.git
/goffinet/virt-scripts | Bash scripts for Linux KVM labs. Only for educational purposes. \ https://github.com/goffinet/virt-scripts.git
/ElectricRCAircraftGuy/eRCaGuy_dotfiles | .bashrc file, terminal prompt that shows current git branch, Arduino setup, \ https://github.com/ElectricRCAircraftGuy/eRCaGuy_dotfiles.git
/jaromaz/yosild | Your simple Linux distro - Yosild is a single shell script that builds a fu \ https://github.com/jaromaz/yosild.git
/mdrights/LiveSlak | 中文化的隐私加强 GNU/Linux 系统 - Forked from Alien Bob's powerful building script fo \ https://github.com/mdrights/LiveSlak.git
/tom5760/arch-install | Simple bash script to install Arch Linux. \ https://github.com/tom5760/arch-install.git
/shiro/map2 | A scripting language that allows complex key remapping on Linux. \ https://github.com/shiro/map2.git
/amarjeetanandsingh/jps_stat | Bash script to moniter current_heap_memory , max_heap_till_now , current_ra \ https://github.com/amarjeetanandsingh/jps_stat.git
/wimleers/sudoku | Fancy, feature-complete, cross-platform Sudoku app written in C++/Qt. Inclu \ https://github.com/wimleers/sudoku.git
/tatsushid/docker-tinycore | Tiny Core Linux Docker image building scripts and Dockerfile \ https://github.com/tatsushid/docker-tinycore.git
/hieplpvip/ubuntu_canon_printer | Script for installing the Linux CAPT Printer Driver for Canon LBP printers  \ https://github.com/hieplpvip/ubuntu_canon_printer.git
/septag/darkhammer | darkHAMMER is a lightweight, open-source, multiplatform game engine. writte \ https://github.com/septag/darkhammer.git
/rocketraman/sane-scan-pdf | Sane command-line scan-to-pdf script on Linux with OCR and deskew support \ https://github.com/rocketraman/sane-scan-pdf.git
/SEPIA-Framework/sepia-installation-and-setup | Instructions, scripts, tools and files to install, setup and run the SEPIA- \ https://github.com/SEPIA-Framework/sepia-installation-and-setup.git
/bdamele/unix-privesc-check | Shell script that runs on UNIX systems (tested on Solaris 9, HPUX 11, vario \ https://github.com/bdamele/unix-privesc-check.git
/SeedboxCreator/SeedboxCreationScript | Scripts and related items for creating a fully featured Seedbox on various  \ https://github.com/SeedboxCreator/SeedboxCreationScript.git
/tobykurien/NSA_b_gone | A Linux shell script to improve your privacy online \ https://github.com/tobykurien/NSA_b_gone.git
/frdmn/service-daemons | :japanese_ogre: This repository contains a lot of proper working start/stop \ https://github.com/frdmn/service-daemons.git
/Technomux/hackerpro | Hackerpro - All in One Hacking Tool for Linux & Android (Termux) Special fo \ https://github.com/Technomux/hackerpro.git
/mncoppola/Linux-Kernel-CTF | Helper scripts for hosting a Linux kernel exploitation CTF challenge \ https://github.com/mncoppola/Linux-Kernel-CTF.git
/mrclksr/linux-browser-installer | Script to install Linux browsers under a Linux chroot on FreeBSD \ https://github.com/mrclksr/linux-browser-installer.git
/smathot/zotero_installer | Bash script for automated Zotero standalone installation on Linux \ https://github.com/smathot/zotero_installer.git
/gheift/ght-acme | a linux shell script to sign certifactes by the letsencrypt CA \ https://github.com/gheift/ght-acme.sh.git
/GoXLR-on-Linux/goxlr-on-linux | Documentation and scripts to make the GoXLR and GoXLR Mini useful on Linux. \ https://github.com/GoXLR-on-Linux/goxlr-on-linux.git
/globalcitizen/lxc-gentoo | lxc-gentoo: Linux Containers Gentoo Guest Template Script \ https://github.com/globalcitizen/lxc-gentoo.git
/JayabharathP/The-Python-Mega-Course-Build-10-Real-World-Applications- | The Python Mega Course is one of the top online Python courses with over 10 \ https://github.com/JayabharathP/The-Python-Mega-Course-Build-10-Real-World-Applications-.git
/miguelgfierro/scripts | A collection of useful shell scripts for Linux, Windows & Mac \ https://github.com/miguelgfierro/scripts.git
/graysky2/clean-chroot-manager | Wrapper script for managing clean chroots under Arch Linux \ https://github.com/graysky2/clean-chroot-manager.git
/vermaden/scripts | Various scripts I wrote when using FreeBSD/Linux/UNIX systems for 15+ years \ https://github.com/vermaden/scripts.git
/melezhik/sparrow | Sparrow - script distribution platform for Linux OS \ https://github.com/melezhik/sparrow.git
/ScottGarman/thinkpad_t440s | Some configuration and scripts I use to run Linux on the Lenovo ThinkPad T4 \ https://github.com/ScottGarman/thinkpad_t440s.git
/antony-jr/lenovo-legion5-15arh05-scripts | Simple scripts and guides to work around with issues on running linux in Le \ https://github.com/antony-jr/lenovo-legion5-15arh05-scripts.git
/fuhry/linux-memory-dumper | Script that dumps running process memory from Linux systems using /proc. \ https://github.com/fuhry/linux-memory-dumper.git
/opensourceway/rsync-backup-script | A script to accompany https://opensource.com/article/17/1/rsync-backup-linu \ https://github.com/opensourceway/rsync-backup-script.git
/osiegmar/cloudwatch-mon-scripts-python | Linux monitoring scripts for CloudWatch \ https://github.com/osiegmar/cloudwatch-mon-scripts-python.git
/dimgel/cpp-linux-scripts | Writing linux scripts in C++ \ https://github.com/dimgel/cpp-linux-scripts.git
/deajan/tcpping | tcpping script for smokeping that runs with newer linux traceroute binaries \ https://github.com/deajan/tcpping.git
/pontikis/bash-cloud-backup | bash-cloud-backup is a set of bash scripts, which can be used to automate l \ https://github.com/pontikis/bash-cloud-backup.git
/fagiani/shellstack | ShellStack is a collection of bash scripts to install apps on ubuntu linux \ https://github.com/fagiani/shellstack.git
/pleiszenburg/zugbruecke | Calling routines in Windows DLLs from Python scripts running under Linux, M \ https://github.com/pleiszenburg/zugbruecke.git
/ropnop/kerberos_windows_scripts | Collection of scripts for interacting with AD Kerberos from Linux \ https://github.com/ropnop/kerberos_windows_scripts.git
/android-linux-stable/script | A script to help with merging linux-stable into your own repository \ https://github.com/android-linux-stable/script.git
/Wh1t3Rh1n0/ssh-phone-home | Pentest dropbox setup scripts for Kali Linux \ https://github.com/Wh1t3Rh1n0/ssh-phone-home.git
/narbehaj/bash-backup | Simple backup script for GNU/Linux servers \ https://github.com/narbehaj/bash-backup.git
/RackunSec/debian-custom-iso-scripts | These are scripts I made to help with the design and customization of a Deb \ https://github.com/RackunSec/debian-custom-iso-scripts.git
/angristan/local-dns-resolver | Script to install a local Unbound DNS resolver on your Linux machine with D \ https://github.com/angristan/local-dns-resolver.git
/Grippy98/Asus-E200HA-Linux-Post-Install-Script | A Linux Post install script for The Asus E200HA, X206HA and other Intel Che \ https://github.com/Grippy98/Asus-E200HA-Linux-Post-Install-Script.git
/yamnikov-oleg/switch-layout | A simple script to fix keyboard layout switching on gnome-derived Linux dis \ https://github.com/yamnikov-oleg/switch-layout.git
/FedoraSwift/fedora-swift | Scripts to build Swift language on Fedora and CentOS x64 linux distribution \ https://github.com/FedoraSwift/fedora-swift.git
/giswqs/manjaro-linux | Shell scripts for setting up Manjaro Linux for Python programming and deep  \ https://github.com/giswqs/manjaro-linux.git
/starcitizen-lug/lug-helper | Star Citizen's Linux Users Group Helper Script \ https://github.com/starcitizen-lug/lug-helper.git
/patriksvensson/machine | Contains my install scripts and configurations for Windows and Linux \ https://github.com/patriksvensson/machine.git
/Fleshgrinder/nginx-sysvinit-script | Linux Standard Base compliant SysVinit script for nginx. \ https://github.com/Fleshgrinder/nginx-sysvinit-script.git
/gjpin/arch-linux | Simple and opinionated Arch Linux (post-)install scripts \ https://github.com/gjpin/arch-linux.git
/ctuning/ck-env | CK repository with components and automation actions to enable portable wor \ https://github.com/ctuning/ck-env.git
/Arr0way/linux-local-enumeration-script | Linux Local Enumeration Script \ https://github.com/Arr0way/linux-local-enumeration-script.git
/keeganjk/kali-anonymous | :bust_in_silhouette: The `anonymous` script from ParrotSec OS and BackBox L \ https://github.com/keeganjk/kali-anonymous.git
/asakura42/manyame | anime cli xdcc download script for linux/win/mac/android \ https://github.com/asakura42/manyame.git
/threatexpress/threatbox | ThreatBox is a standard and controlled Linux based attack platform. I've us \ https://github.com/threatexpress/threatbox.git
/aws/aws-ec2-instance-connect-config | This is the ssh daemon configuration and necessary EC2 instance scripting t \ https://github.com/aws/aws-ec2-instance-connect-config.git
/PacktPublishing/Mastering-Linux-Shell-Scripting-Second-Edition | Mastering Linux Shell Scripting - Second Edition, published by Packt \ https://github.com/PacktPublishing/Mastering-Linux-Shell-Scripting-Second-Edition.git
/newville/pyshortcuts | create desktop shortcuts to python scripts on Windows, Mac, or Linux \ https://github.com/newville/pyshortcuts.git
/zhangyunhao116/Python-script-converter | This is a tiny tool used to convert a python script to a executable file(on \ https://github.com/zhangyunhao116/Python-script-converter.git
/jankammerath/iptvx | IPTV player and streamer for Linux that allows to play any stream that LibV \ https://github.com/jankammerath/iptvx.git
/sqall01/LSMS | Linux Security and Monitoring Scripts \ https://github.com/sqall01/LSMS.git
/arcolinuxd/arco-i3 | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-i3.git
/fin-ger/logitech-m720-config | A configuration script for Logitech M720 that remaps mouse buttons (Linux) \ https://github.com/fin-ger/logitech-m720-config.git
/peterbay/sysinfo | Python based scripts for obtaining system information from Linux. \ https://github.com/peterbay/sysinfo.git
/40Cakes/PlexMOTD | MOTD scripts for Linux to display various Plex & Transmission statistics. \ https://github.com/40Cakes/PlexMOTD.git
/krglaws/MyLFS | Giant bash script to build my own Linux distro based on LFS + BLFS \ https://github.com/krglaws/MyLFS.git
/Hood3dRob1n/Linux-RDP | Linux RDP Scanner and Bruteforcer Scripts \ https://github.com/Hood3dRob1n/Linux-RDP.git
/MasterButcher/kali-cleaner |  Little cleaner script for Kali linux.Clean apt cache,Removing old config f \ https://github.com/MasterButcher/kali-cleaner.git
/betweenbrain/linux-stuff | A collection of Linux tricks, tips, shell scripts, and general knowledge co \ https://github.com/betweenbrain/linux-stuff.git
/bianjp/archlinux-installer | Shell scripts that help install and setup Arch Linux \ https://github.com/bianjp/archlinux-installer.git
/tprasadtp/ubuntu-post-install | Effortless, Flexible and Simple Post Install Script for Ubuntu, Linux Mint, \ https://github.com/tprasadtp/ubuntu-post-install.git
/yandex-cloud/skbtrace | Helper tool for generating and running BPFTrace scripts which trace and mea \ https://github.com/yandex-cloud/skbtrace.git
/ppc64le/build-scripts | Build scripts for open source projects on Linux on POWER LE \ https://github.com/ppc64le/build-scripts.git
/lunatik-ng/lunatik-ng | Linux Kernel Lua Scripting Engine \ https://github.com/lunatik-ng/lunatik-ng.git
/luisgbm/lfs-scripts | Instructions and scripts to build Linux From Scratch (LFS) as simply as pos \ https://github.com/luisgbm/lfs-scripts.git
/Brian-Lam/Logitech-MX-Master-Key-Mapper-Linux | In lieu of Logitech providing Linux drivers for the MX Master series mice,  \ https://github.com/Brian-Lam/Logitech-MX-Master-Key-Mapper-Linux.git
/lucab85/log4j-cve-2021-44228 | Ansible detector scanner playbook to verify target Linux hosts using the of \ https://github.com/lucab85/log4j-cve-2021-44228.git
/fengfu/jtoolkit | JToolkit is a tool set for Java troubleshooting. It integrates various Linu \ https://github.com/fengfu/jtoolkit.git
/crazyadmins/useful-scripts | Useful shell scripts for Hadoop/Linux system administrator  \ https://github.com/crazyadmins/useful-scripts.git
/TelekomLabs/packer-rhel | Packer scripts for CentOS 6, RedHat 6 and Oracle Linux 6 \ https://github.com/TelekomLabs/packer-rhel.git
/alxlg/nativefier-freedesktop | Script to automate the installation of Nativefier (Electron) web apps on Li \ https://github.com/alxlg/nativefier-freedesktop.git
/nozaq/amazon-linux-cis | Bootstrap script for Amazon Linux to comply CIS Amazon Linux Benchmark v2.0 \ https://github.com/nozaq/amazon-linux-cis.git
/kristrev/multihomed-routing | Tools and scripts for configuring multihomed routing on Linux \ https://github.com/kristrev/multihomed-routing.git
/stablestud/adsorber | Ad-blocker for Linux systems purely built on POSIX-compliant shell scripts. \ https://github.com/stablestud/adsorber.git
/garrym/raspberry-pi-alpine | Instructions and scripts for setting up Alpine Linux on the Raspberry Pi \ https://github.com/garrym/raspberry-pi-alpine.git
/vaeth/zram-init | A wrapper script for the zram linux kernel module with zsh and openrc suppo \ https://github.com/vaeth/zram-init.git
/FeralInteractive/ferallinuxscripts | General use repository for scripts used by Feral Interactive Linux games \ https://github.com/FeralInteractive/ferallinuxscripts.git
/SDRausty/TermuxPRoot | SetupTermuxPRoot.sh  shall install Linux distributions in Termux on Androi \ https://github.com/SDRausty/TermuxPRoot.git
/mxdpeep/linux-bash-scripts | A batch of useful Linux scripts. \ https://github.com/mxdpeep/linux-bash-scripts.git
/JohnHammond/archlinux | These are my notes and setup scripts while installing and preparing my Arch \ https://github.com/JohnHammond/archlinux.git
/apollonzinos/php-login-advanced | A simple, but secure PHP login script. Register, login, logout, email verif \ https://github.com/apollonzinos/php-login-advanced.git
/nmilford/stormLauncher | Script to control the Dream Cheeky Storm & Thunder USB Missile Launchers in \ https://github.com/nmilford/stormLauncher.git
/dglt1/optimus-switch-gdm | modified version to work with gdm/gnome. includes install script. made for  \ https://github.com/dglt1/optimus-switch-gdm.git
/oracle/oracle-linux | Scripts, examples, and tutorials to get started with Oracle Linux \ https://github.com/oracle/oracle-linux.git
/qcif/nextcloud-sync-cron | Cron job script for running the Linux/Unix Nextcloud command line client \ https://github.com/qcif/nextcloud-sync-cron.git
/ctf-o-matic/capture-the-flag | Helper scripts to remaster Linux Live CD images for the purpose of creating \ https://github.com/ctf-o-matic/capture-the-flag.git
/cbeley/beleyenv | A dev-focused, idempotent system bootstrap script for ChromeOS's officially \ https://github.com/cbeley/beleyenv.git
/mempo/mempo-kernel | Deterministic kernel build scripts, for Linux, mainly for Debian \ https://github.com/mempo/mempo-kernel.git
/ephraim/lcurse | Python script to have a "curse" compatible client for linux \ https://github.com/ephraim/lcurse.git
/abrochard/spartan-arch | Collections of script to create a minimal dev environment based on Arch Lin \ https://github.com/abrochard/spartan-arch.git
/swisscom/PowerGRR | PowerGRR is an API client library in PowerShell working on Windows, Linux a \ https://github.com/swisscom/PowerGRR.git
/kayofeld/script-installation-ordinateur-epitech | Script d'installation pour OS basés LINUX pour travailler à Epitech. CECI N \ https://github.com/kayofeld/script-installation-ordinateur-epitech.git
/asymptotik/crosstool-arm-osx | Scripts to install crosstool-ng and generate a cross compiler on osx for ta \ https://github.com/asymptotik/crosstool-arm-osx.git
/node-red/linux-installers | Node-RED install scripts for various flavours of Linux \ https://github.com/node-red/linux-installers.git
/secana/EnhancedSessionMode | Contains scripts to enable "Hyper-V Enhanced Session Mode" for Linux \ https://github.com/secana/EnhancedSessionMode.git
/binhex/arch-privoxyvpn | Docker build script for Arch Linux base with Privoxy and OpenVPN \ https://github.com/binhex/arch-privoxyvpn.git
/callmezatiel/zarch | The Ultimate Script For Arch Linux \ https://github.com/callmezatiel/zarch.git
/mriza/XMind-Linux-Installer | A simple BASH script to install XMind in Linux \ https://github.com/mriza/XMind-Linux-Installer.git
/Fincer/openra-tibsunra2 | Provides automatic installation scripts for OpenRA with Tiberian Sun & Red  \ https://github.com/Fincer/openra-tibsunra2.git
/sivel/bonding | A script used to configure bonding on Linux machines, and to determine whic \ https://github.com/sivel/bonding.git
/ferion11/LogosLinuxInstaller | LogosLinuxInstaller is a bash script for installation of Logos Bible on Lin \ https://github.com/ferion11/LogosLinuxInstaller.git
/SimplyLinuxFAQ/health-check-script | Linux system health check shell script. \ https://github.com/SimplyLinuxFAQ/health-check-script.git
/Wh1t3Rh1n0/deb2kali | A Script to Convert Debian Linux into Kali Linux \ https://github.com/Wh1t3Rh1n0/deb2kali.git
/Kr328/clash-tun-for-linux | Scripts to setup clash with tun for Linux \ https://github.com/Kr328/clash-tun-for-linux.git
/Xentrk/Asuswrt-Merlin-Linux-Shell-Scripts | Miscellaneous Linux Shell Scripts developed for Asuswrt-Merlin  \ https://github.com/Xentrk/Asuswrt-Merlin-Linux-Shell-Scripts.git
/julianpoy/eGPUScripts | Some simple bash scripts to make hotswap eGPU work on Linux without restart \ https://github.com/julianpoy/eGPUScripts.git
/dschrempf/syncthing-resolve-conflicts | A small bash script that handles synchronization conflicts with Syncthing.  \ https://github.com/dschrempf/syncthing-resolve-conflicts.git
/libersoft/proxmox-init | Python script to deploy GNU/Linux cloud images, cloud-style, on Proxmox KVM \ https://github.com/libersoft/proxmox-init.git
/EgeBalci/The-Eye | Simple security surveillance script for linux distributions. \ https://github.com/EgeBalci/The-Eye.git
/Bonveio/BonvScripts | Collection of shell scripts written in bash for automation and easy-to-use  \ https://github.com/Bonveio/BonvScripts.git
/arcolinuxd/arco-xfce | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-xfce.git
/dvilelaf/alfred | A script to install all your favourite applications and perform the most co \ https://github.com/dvilelaf/alfred.git
/SCILabsMX/yaraZeekAlert | This script scans the files extracted by Zeek with YARA rules located on th \ https://github.com/SCILabsMX/yaraZeekAlert.git
/native-toolkit/hxp |  Write scripts in Haxe, and execute them on Windows, macOS or Linux \ https://github.com/native-toolkit/hxp.git
/brendaningram/linux-audio-setup-scripts | Scripts to get you running with a professional audio quality Linux system. \ https://github.com/brendaningram/linux-audio-setup-scripts.git
/burntcustard/x11-fractional-display-scaling | Script and instructions to get fractional display scaling working nicely on \ https://github.com/burntcustard/x11-fractional-display-scaling.git
/jgregmac/hyperv-fix-for-devs | Installation Script for the Hyper-V / WSL2 Network Fix for Linux Developers \ https://github.com/jgregmac/hyperv-fix-for-devs.git
/arcolinuxd/arco-bspwm | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-bspwm.git
/ecly/dotfiles | My dotfiles and scripts for Arch Linux with i3-gaps \ https://github.com/ecly/dotfiles.git
/paradigm/bedrocklinux-userland | This tracks development for the things such as scripts and (defaults for) c \ https://github.com/paradigm/bedrocklinux-userland.git
/erikdubois/Themes-Icons-Pack | Script to download and install all interesting themes and icons for Linux M \ https://github.com/erikdubois/Themes-Icons-Pack.git
/facerecog/auto-ssh-tunnel | Automatic SSH Tunnel is a Python script which can be used to create a Rever \ https://github.com/facerecog/auto-ssh-tunnel.git
/inetquestion/Java-JRE-JDK-Downloader | KSH script to automatically download lastest version of the java JRE & JDK  \ https://github.com/inetquestion/Java-JRE-JDK-Downloader.git
/homer6/frequent-cron | A linux daemon that you can call scripts more frequently than once per minu \ https://github.com/homer6/frequent-cron.git
/pwnagentsmith/IR_Tool | Script for Forensic on Linux \ https://github.com/pwnagentsmith/IR_Tool.git
/kitor/wsl | Windows Subsystem for Linux scripts \ https://github.com/kitor/wsl.git
/Allar/linux-perforce-installer | A shell script that will automate setting up a perforce server on a linux h \ https://github.com/Allar/linux-perforce-installer.git
/willianjusten/script-dev | A simple script for basic installation of web development programs for Linu \ https://github.com/willianjusten/script-dev.git
/CEMULinux/cemutil | Simple script to assist in installing and launching CEMU on Linux \ https://github.com/CEMULinux/cemutil.git
/jprochazka/adsb-exchange | ADS-B Exchange Linux Setup Scripts \ https://github.com/jprochazka/adsb-exchange.git
/brpaz/my-linux-setup | My Fedora Linux list of installed applications and Ansible provision script \ https://github.com/brpaz/my-linux-setup.git
/SecFathy/Bugzee | Simple Script to install recommended Bug Bounty Hunting Tools In Your Linux \ https://github.com/SecFathy/Bugzee.git
/techchipnet/KaliRPIVNCSetup | This script will auto setup vncserver in Kali Linux Raspberry Pi 3 and Rasp \ https://github.com/techchipnet/KaliRPIVNCSetup.git
/ivan-hc/Arch-Deployer | A script to bulk download an Arch Linux package with all its dependencies t \ https://github.com/ivan-hc/Arch-Deployer.git
/groeck/linux-build-test | Scripts to build and test Linux kernels \ https://github.com/groeck/linux-build-test.git
/aaronfranke/Linux-tools | A few Linux tools and useful scripts. \ https://github.com/aaronfranke/Linux-tools.git
/HereInPlainSight/gshade_installer | GShade Installer / Updater Bash Script for Linux \ https://github.com/HereInPlainSight/gshade_installer.git
/marcelobaptista/packettracer | Script para instalação do Cisco Packet Tracer em ambientes Linux \ https://github.com/marcelobaptista/packettracer.git
/utsanjan/Tsunami-Bomber | A simple but powerful OTP SMS and Call flooding script with unlimited sendi \ https://github.com/utsanjan/Tsunami-Bomber.git
/Jimmy-Z/grub-iso-boot | GRUB script to boot various Linux live CD/DVD ISO images \ https://github.com/Jimmy-Z/grub-iso-boot.git
/aidenbell/getdents | Simple tool for listing large (millions) numbers of files on Linux systems  \ https://github.com/aidenbell/getdents.git
/chin123/archlinux-4044C | A guide with accompanying scripts to get a working arch linux chroot on the \ https://github.com/chin123/archlinux-4044C.git
/CNTRUN/Termux-command | char const* const commands[] = { "aapt", " aapt", " zipalign", "abduco", "  \ https://github.com/CNTRUN/Termux-command.git
/iachievedit/package-swift | Set of scripts for building and packaging Swift on Ubuntu Linux \ https://github.com/iachievedit/package-swift.git
/EnergizedProtection/Energized_Linux | Energized All-in-One Script for Linux Distros \ https://github.com/EnergizedProtection/Energized_Linux.git
/SiENcE/lovecodify | LoveCodify is a Wrapper Class to run CODEA/CODIFY Scripts with LÖVE on Mac/ \ https://github.com/SiENcE/lovecodify.git
/mangosArchives/Mangos-One-scripts-old | * Current Repo: mangosone/scripts *    Replacement for the Script Library t \ https://github.com/mangosArchives/Mangos-One-scripts-old.git
/f18m/CPU-MEM-monitor | A simple script to log Linux CPU and memory usage (using top or pidstat com \ https://github.com/f18m/CPU-MEM-monitor.git
/brvphoenix/wrtbwmon | Shell scripts for bandwidth monitor on linux \ https://github.com/brvphoenix/wrtbwmon.git
/offensive-security/Kali-WSL-chroot | Kali Linux Windows App chroot builder script \ https://github.com/offensive-security/Kali-WSL-chroot.git
/Beckhoff/CX9020 | Scripts to build a Debian based Linux system for the CX9020 Embedded PC \ https://github.com/Beckhoff/CX9020.git
/dasunsrule32/radeon-scripts | Scripts to manage various aspects of the AMD line of cards in Linux \ https://github.com/dasunsrule32/radeon-scripts.git
/jgamblin/Kali-VirtualBox | A Python Script To Automatically Download, Provision and Update a Kali Linu \ https://github.com/jgamblin/Kali-VirtualBox.git
/davidpanic/Kali-MiTM-Evil-twin | A script that creates a wifi hotspot on kali linux that can view usernames  \ https://github.com/davidpanic/Kali-MiTM-Evil-twin.git
/pyside/BuildScripts | Build scripts for building PySide from the Git repositories. Supports sever \ https://github.com/pyside/BuildScripts.git
/EUA/AsrLed | AsRock LED Device Driver Script for Linux \ https://github.com/EUA/AsrLed.git
/btittelbach/openmtbmap_openvelomap_linux | Linux script to extract and compile garmin *.img map files from openmtbmap. \ https://github.com/btittelbach/openmtbmap_openvelomap_linux.git
/susam/timebox | A timer script for Windows/Linux/Unix/macOS to practice timeboxing (the tim \ https://github.com/susam/timebox.git
/FINRAOS/HiveQLUnit | Test your Hive scripts inside your favorite IDE with HiveQLUnit! Increase y \ https://github.com/FINRAOS/HiveQLUnit.git
/cryzed/bin | Scripts I'm using on my Arch Linux installation \ https://github.com/cryzed/bin.git
/Yepoleb/gogextract | Script for unpacking GOG Linux installers \ https://github.com/Yepoleb/gogextract.git
/artiomn/NAS | Scripts and config files for the secure Linux-based multiservice server on  \ https://github.com/artiomn/NAS.git
/jnvsor/screencap | Blazing fast screencapture script for linux \ https://github.com/jnvsor/screencap.git
/asppsa/archlinux-nix | Bash script for managing the Nix package manager on Arch Linux \ https://github.com/asppsa/archlinux-nix.git
/vfhky/shell-tools | Useful shell and python scripts in linux. \ https://github.com/vfhky/shell-tools.git
/neilhwatson/nustuff | Useful scripting and Linux configuration examples \ https://github.com/neilhwatson/nustuff.git
/nikhilkumarsingh/terminal-image-viewer | A Simple Python Script to Display Images in Linux Terminal \ https://github.com/nikhilkumarsingh/terminal-image-viewer.git
/musket33/VMR-MDK-Kali2-Kali2016 | WPS Locked Intrusion Script for Kali Linux 2.0 and 2016 \ https://github.com/musket33/VMR-MDK-Kali2-Kali2016.git
/saxenap/install-redis-amazon-linux-centos | his is a installation script to setup Redis 2.6 as a service on Amazon Linu \ https://github.com/saxenap/install-redis-amazon-linux-centos.git
/haxorof/centos-bench-security | CentOS Bench for Security is a script that implements checks which follows  \ https://github.com/haxorof/centos-bench-security.git
/wrzlbrmft/arch-pi | A simple script automatically installing Arch Linux for the Raspberry Pi. \ https://github.com/wrzlbrmft/arch-pi.git
/Soreepeong/XivMitmLatencyMitigator | Double weave on high latency man-in-the-middle packet modification script r \ https://github.com/Soreepeong/XivMitmLatencyMitigator.git
/potts99/Linux-Post-Install | Scripts to Automate Linux Post Install's \ https://github.com/potts99/Linux-Post-Install.git
/virtapi/installimage | bash scripts for deploying every linux system \ https://github.com/virtapi/installimage.git
/mikemol/gentoo-install | An install script for Gentoo Linux \ https://github.com/mikemol/gentoo-install.git
/AxelTB/nejePrint | Linux script for Neje Laser engraver \ https://github.com/AxelTB/nejePrint.git
/texane/lfs | scripts and configurations to build linux from scratch based systems \ https://github.com/texane/lfs.git
/BobSteagall/gcc-builder | A collection of scripts for building GCC on Linux \ https://github.com/BobSteagall/gcc-builder.git
/mitchellkrogza/linux-server-administration-scripts | Simple bash administration scripts for Linux to make your life easier. \ https://github.com/mitchellkrogza/linux-server-administration-scripts.git
/foyzulkarim/linux-playbook-javascript | Linux software installation automation script (Linux playbook) using JavaSc \ https://github.com/foyzulkarim/linux-playbook-javascript.git
/postmanlabs/postman-updater-linux | A simple bash script to update Postman from the command line (for Linux) \ https://github.com/postmanlabs/postman-updater-linux.git
/geminis3/simplyarch | The blazing fast ⚡ Arch Linux ⚡ installation script that puts you on contro \ https://github.com/geminis3/simplyarch.git
/eprigorodov/mkosxinstallusb | Linux shell script that creates USB flash drive booting OS X installer \ https://github.com/eprigorodov/mkosxinstallusb.git
/Klairm/Linux-Gaming-Setup | A python script which allow users to install drivers and programs of utilit \ https://github.com/Klairm/Linux-Gaming-Setup.git
/devpytech/scripts | Various linux scripts \ https://github.com/devpytech/scripts.git
/itoffshore/alpine-linux-scripts | Alpine Linux Setup Scripts \ https://github.com/itoffshore/alpine-linux-scripts.git
/firebitsbr/HardeningONE | Scripts-Scanner de hardening de SO (Linux, OpenBSD, FreeBSD, apache, PHP e  \ https://github.com/firebitsbr/HardeningONE.git
/dergraf/PacketScript | PacketScript enables the scripting of Linux Netfilter extensions using the  \ https://github.com/dergraf/PacketScript.git
/arcolinuxd/arco-awesome | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-awesome.git
/susundberg/pebble-linux-remote | Pebble C-app to send app-messages and python side scripts to receive those  \ https://github.com/susundberg/pebble-linux-remote.git
/dderby/debian900 | DebiaN900 - A set of scripts to facilitate the installation of Devuan or De \ https://github.com/dderby/debian900.git
/LethalEthan/Bluetooth-Unlock | Simple script to unlock your Linux based Computer using a Bluetooth device  \ https://github.com/LethalEthan/Bluetooth-Unlock.git
/ericpaulbishop/iptables_torify | Script to add iptables rules (on a linux system) that force all traffic thr \ https://github.com/ericpaulbishop/iptables_torify.git
/mmone/marlintool | A shell script for setting up a standalone Marlin build environment on Rasp \ https://github.com/mmone/marlintool.git
/Janhouse/4g-connect-linux | Huawei E3276 USB LTE modem connection script for Linux that uses AT command \ https://github.com/Janhouse/4g-connect-linux.git
/siredmar/winepatchfusion360installer | Contains a script that makes the Fusion 360 installer install in Linux usin \ https://github.com/siredmar/winepatchfusion360installer.git
/ahmedelhori/install-arch | A script to automate arch linux installation \ https://github.com/ahmedelhori/install-arch.git
/surajx/qemu-arm-linux | Script for compiling Linux, BusyBox for AMR and running it on QEMU. \ https://github.com/surajx/qemu-arm-linux.git
/adionditsak/shellconf | Tiny (2.7K) remote configuration with shell scripts for UNIX/Linux systems \ https://github.com/adionditsak/shellconf.py.git
/C-X1/PyFlashAero | Python scripts for using the Toshiba® FlashAir® Wifi SD Cards on Linux, you \ https://github.com/C-X1/PyFlashAero.git
/pro-root/Fix-Termux | Termux,Kali Linux,script, Commands \ https://github.com/pro-root/Fix-Termux.git
/neurobin/oraji | Oracle java installler script for linux \ https://github.com/neurobin/oraji.git
/binhex/arch-int-vpn | Docker build script for Arch Linux base with OpenVPN, WireGuard, Privoxy (h \ https://github.com/binhex/arch-int-vpn.git
/Hanson/ngrok-script | A script to run local ngrok client for linux and windows \ https://github.com/Hanson/ngrok-script.git
/LibrePhotos/librephotos-linux | Here you can find the installation script for a local Linux install. \ https://github.com/LibrePhotos/librephotos-linux.git
/binhex/arch-sabnzbdvpn | Docker build script for Arch Linux base with SABnzbd, Privoxy and OpenVPN \ https://github.com/binhex/arch-sabnzbdvpn.git
/Cyclenerd/benchmark | ️ Bash Script which runs several Linux benchmarks (Sysbench, UnixBench and \ https://github.com/Cyclenerd/benchmark.git
/leveste/EternalBasher | Collection of bash scripts for different aspects of Doom Eternal modding, m \ https://github.com/leveste/EternalBasher.git
/zszszszsz/ | # # Automatically generated file; DO NOT EDIT. # OpenWrt Configuration # CO \ https://github.com/zszszszsz/.config.git
/BunsenLabs/bunsen-welcome |  Post installation script for BunsenLabs Linux \ https://github.com/BunsenLabs/bunsen-welcome.git
/minhdanh/Linux-Kernel-Tuning-and-Hardening | Bash script for optimizing performance and hardening Linux kernel. \ https://github.com/minhdanh/Linux-Kernel-Tuning-and-Hardening.git
/houssoli/linux-shell-scripting-projects | Linux Shell Scripting: A Project-Based Approach to Learning Learn how to sh \ https://github.com/houssoli/linux-shell-scripting-projects.git
/jnaqsh/ffmpeg_installer | A Linux Shell Script for compiling, installing and uninstalling FFmpeg in C \ https://github.com/jnaqsh/ffmpeg_installer.git
/xanmanning/alarm-fake-hwclock | Fake HWClock script for RPi Arch Linux Arm (replicates Raspbian's fake-hwcl \ https://github.com/xanmanning/alarm-fake-hwclock.git
/DanySK/Gravis-CI | Set of scripts for running Java / Gradle / Maven builds on Travis CI on Win \ https://github.com/DanySK/Gravis-CI.git
/paul-ridgway/aero-keyboard | Protocols and linux scripts for controlling the Gigabyte Aero 15 Keyboard b \ https://github.com/paul-ridgway/aero-keyboard.git
/akhiljalagam/pulseaudio-airpods | a shell script for managing airpods and airpods pro on linux. \ https://github.com/akhiljalagam/pulseaudio-airpods.git
/wrzlbrmft/arch-install | A highly configurable script automatically installing Arch Linux. \ https://github.com/wrzlbrmft/arch-install.git
/Andrewpk/Microsoft--SQL-Server--ODBC-Driver-1 | Microsoft SQL Server ODBC Driver 1.0 for Linux Fixed Install Scripts \ https://github.com/Andrewpk/Microsoft--SQL-Server--ODBC-Driver-1.0-for-Linux-Fixed-Install-Scripts.git
/RomainClaret/lfs-7 | Set of Shell scripts to automate Linux from Scratch, based on the book 7.8 \ https://github.com/RomainClaret/lfs-7.8.git
/jdupl/QnapFreeLCD | Script to display linux system information on LCD \ https://github.com/jdupl/QnapFreeLCD.git
/networkingguru/backup_script | Universal Free Backup Script for Linux \ https://github.com/networkingguru/backup_script.git
/blha303/puush-linux | A Bash script for using puush from linux. \ https://github.com/blha303/puush-linux.git
/JohnTroony/LUKS-OPs | A bash script to automate the most basic usage of LUKS volumes in Linux VPS \ https://github.com/JohnTroony/LUKS-OPs.git
/illvart/termux-alpine | Bash script for installing Alpine Linux in Termux - 100 MB. \ https://github.com/illvart/termux-alpine.git
/yuk7/arch-systemctl-alt | systemctl alternative script package for Arch Linux container/WSL environme \ https://github.com/yuk7/arch-systemctl-alt.git
/davidcarne/iceBurn | Python script for programming the iCEBlink40 development board under linux \ https://github.com/davidcarne/iceBurn.git
/PureArtistry/dotfiles | repo for my linux config files and scripts \ https://github.com/PureArtistry/dotfiles.git
/orhun/dotfiles | Orhun's Arch Linux configuration files and scripts  \ https://github.com/orhun/dotfiles.git
/oicu/vpn-over-ssh | Poor mans VPN over SSH, script which can help to setup VPN based on OpenSSH \ https://github.com/oicu/vpn-over-ssh.git
/frederickding/xenserver-kickstart | Kickstart scripts for installing paravirtualized Linux guests, with distrib \ https://github.com/frederickding/xenserver-kickstart.git
/Feriman22/portscan-protection | This script helps to avoid portscanning on Linux systems. \ https://github.com/Feriman22/portscan-protection.git
/ktsol/dwarfing | Set of scripts for clever geeks for using linux on mining rigs \ https://github.com/ktsol/dwarfing.git
/rafaelh/update-kali | Scripts to set up Kali Linux with additional tools, and maintain them. \ https://github.com/rafaelh/update-kali.git
/mikhailklassen/research-diary-project | Use TeX/LaTeX to keep a research diary on your UNIX/Linux system, with usef \ https://github.com/mikhailklassen/research-diary-project.git
/mgarratt/spotify-control | Python script to control Spotify Linux via DBus \ https://github.com/mgarratt/spotify-control.git
/altercation/arch-by-hand | Arch Linux install script to be used with Archboot install media in EFI mod \ https://github.com/altercation/arch-by-hand.git
/xdarklight/gigabyte_ambientled_ctrl | Scripts for controlling the Ambient LEDs found on some GIGABYTE mainboards  \ https://github.com/xdarklight/gigabyte_ambientled_ctrl.git
/kivy/kivy-sdk-packager | Scripts for Kivy SDK generation on Windows, OS X and Linux \ https://github.com/kivy/kivy-sdk-packager.git
/cr3a70r/licru | Linux server-side scripts i use everyday \ https://github.com/cr3a70r/licru.git
/egee-irl/distro-delves | Checklists & Scripts to help review or test Linux distributions. \ https://github.com/egee-irl/distro-delves.git
/DeadSix27/python_cross_compile_script | Easy to use Linux to Windows cross compile script. \ https://github.com/DeadSix27/python_cross_compile_script.git
/wrzlbrmft/arch-odroid | A simple script automatically installing Arch Linux for the ODROID. \ https://github.com/wrzlbrmft/arch-odroid.git
/npisanti/of_vscode | bash script for generating openFrameworks projects for Visual Studio Code o \ https://github.com/npisanti/of_vscode.git
/jmaxwilson/wsl-docker-git-setup | Shell script to configure Windows Subsystem for Linux (WSL) & Ubuntu on Win \ https://github.com/jmaxwilson/wsl-docker-git-setup.git
/strich/HeadlessCrowdEmulator | Wrapper scripts for running and crowd sourcing emulated games on a headless \ https://github.com/strich/HeadlessCrowdEmulator.git
/nateshmbhat/rm-trash | A "rm-trash" is meant to be used in place of rm system command in linux . T \ https://github.com/nateshmbhat/rm-trash.git
/rramatchandran/big-o-performance-java | # big-o-performance A simple html app to demonstrate performance costs of d \ https://github.com/rramatchandran/big-o-performance-java.git
/Stolz/linux-cheat-sheets | My Linux scripts & cheat sheets \ https://github.com/Stolz/linux-cheat-sheets.git
/zephray/prinux | Tools and scripts for running Linux on HP Prime calculator \ https://github.com/zephray/prinux.git
/bensuperpc/scripts | Collection of useful scripts for Linux (git, docker, LUKS, Archlinux...) \ https://github.com/bensuperpc/scripts.git
/PacktPublishing/Learn-Linux-Shell-Scripting-Fundamentals-of-Bash-4 | Learn Linux Shell Scripting Fundamentals of Bash 4.4, published by Packt \ https://github.com/PacktPublishing/Learn-Linux-Shell-Scripting-Fundamentals-of-Bash-4.4.git
/pmenhart/make_chroot_jail | Script to easily setup a chroot jail for ssh / scp / sftp with Linux \ https://github.com/pmenhart/make_chroot_jail.git
/multipath-tcp/mptcp-virtual | Script to allow using Multipath TCP on Mac OSX/Linux without any modificati \ https://github.com/multipath-tcp/mptcp-virtual.git
/cqsupport/jstackSeries | Script for capturing a series of thread dumps from a Java process using jst \ https://github.com/cqsupport/jstackSeries.sh.git
/fabianfett/amazonlinux-swift | Scripts and Dockerfiles to build Swift on Amazon Linux. \ https://github.com/fabianfett/amazonlinux-swift.git
/Askannz/nvidia-force-comp-pipeline | Simple script for Linux that enables "Force Composition Pipeline" on all mo \ https://github.com/Askannz/nvidia-force-comp-pipeline.git
/Duncaen/dotfiles | Portable configuration files and utility scripts for Linux and OpenBSD \ https://github.com/Duncaen/dotfiles.git
/FitzgeraldKrudde/spotify-reverse-playlist | This Linux bash script reverses the tracks in a playlist. It creates a new  \ https://github.com/FitzgeraldKrudde/spotify-reverse-playlist.git
/Sodium-Hydrogen/SSH-Attack-Stats | A simple script that will run in MOTD on a linux server and will tell you t \ https://github.com/Sodium-Hydrogen/SSH-Attack-Stats.git
/einalex/pok3r-flash-tool | Beginning of a python script that allows reading and writing the flash of a \ https://github.com/einalex/pok3r-flash-tool.git
/jcfr/qt-easy-build | Scripts allowing to easily build Qt with OpenSSL support on Linux, macOS or \ https://github.com/jcfr/qt-easy-build.git
/archlinux/dbscripts | Arch Linux repository management scripts (read-only mirror) \ https://github.com/archlinux/dbscripts.git
/joeytwiddle/dotfiles | Config scripts I use in my $HOME for various Linux apps \ https://github.com/joeytwiddle/dotfiles.git
/john-tipper/Cross-compile-toolchain-for-linux-on-OSX | A script to create a GCC toolchain on OSX for Linux \ https://github.com/john-tipper/Cross-compile-toolchain-for-linux-on-OSX.git
/dcthomson/mkvdts2ac3 | python script for linux, windows or os x which can be used to convert the D \ https://github.com/dcthomson/mkvdts2ac3.py.git
/smxi/sgfxi | sgfxi is a self-updating nvidia, ati/amd fglrx, and xorg free driver instal \ https://github.com/smxi/sgfxi.git
/seapagan/ubuntu-win-bootstrap | DEPRECIATED! Use "linux-comfy-chair" instead. A very simple bootstrap scrip \ https://github.com/seapagan/ubuntu-win-bootstrap.git
/hackcrypto/fluxion | Fluxion is a security auditing and social-engineering research tool. It is  \ https://github.com/hackcrypto/fluxion.git
/sathisharthar/Admin-Scripts | Linux Admin Scripts \ https://github.com/sathisharthar/Admin-Scripts.git
/totalamateurhour/oracle-12 | Oracle Database 12.2.0.1 installation scripts based on latest Oracle Linux  \ https://github.com/totalamateurhour/oracle-12.2-vagrant.git
/cranstonide/linux-minecraft-scripts | Scripts to aid in the hosting of Minecraft servers on a Linux enviornment \ https://github.com/cranstonide/linux-minecraft-scripts.git
/alexriss/keyboard-layout-converter | A simple python script to convert a Windows .klc keyboard layout to a Linux \ https://github.com/alexriss/keyboard-layout-converter.git
/TWolczanski/linux-autoscroll | A simple Python script for Windows-like autoscroll experience on Linux. \ https://github.com/TWolczanski/linux-autoscroll.git
/shunmukesh/spoofsms | Spoofsms for "KALI-LINUX"           -Script that generates an Android App t \ https://github.com/shunmukesh/spoofsms.git
/xulongwu4/nvidia-optimus-manager | A python script to manage the status of NVIDIA graphics card on an Optimus  \ https://github.com/xulongwu4/nvidia-optimus-manager.git
/centminmod/centminmodbench | For CentOS/Redhat/Oracle Linux - centminmodbench.sh custom system benchmark \ https://github.com/centminmod/centminmodbench.git
/raducotescu/vmware-server-linux-2 | provides a bash script and a patch for installing VMware Server 2.0.x on th \ https://github.com/raducotescu/vmware-server-linux-2.6.3x-kernel.git
/Janhouse/lighter | Script for LINUX to automatically control Macbook Air (2012) screen and key \ https://github.com/Janhouse/lighter.git
/nixsavy/shell-scripts | Linux shell scripts \ https://github.com/nixsavy/shell-scripts.git
/nodester/nodester-installer | MacOSX and Linux Install Scripts \ https://github.com/nodester/nodester-installer.git
/Marcel0Sousa/nethunter-termux | Script de instalação do Kali linux no Termux \ https://github.com/Marcel0Sousa/nethunter-termux.git
/thiagoralves/ScadaBR_Installer | Script to install ScadaBR on Linux machines (x86 and x64 only) \ https://github.com/thiagoralves/ScadaBR_Installer.git
/xCryptoPandax/Brave-Rewards-Automation | Script for Windows and Linux that does simple actions within the brave brow \ https://github.com/xCryptoPandax/Brave-Rewards-Automation.git
/unixnut/scripts | Small, useful platform-agnostic scripts (mostly just for Linux) that don't  \ https://github.com/unixnut/scripts.git
/grufocom/vee-mail | Simple Script to get Mails from Free Veeam Agent for Linux \ https://github.com/grufocom/vee-mail.git
/thestinger/hardening-wrapper | Wrapper scripts for building hardened executables by default (deprecated, r \ https://github.com/thestinger/hardening-wrapper.git
/PHLAK/Soxy | Bash script for starting and stopping a SOCKS proxy tunnel over SSH in Linu \ https://github.com/PHLAK/Soxy.git
/mre/teams-call | Shell script to detect when you're in a Microsoft Teams Call. Supports Linu \ https://github.com/mre/teams-call.git
/bwight/CloudInit | CloudInit.NET is a service like the linux CloudInit application but designe \ https://github.com/bwight/CloudInit.NET.git
/asmehra95/wiseowl | This is a Fact based Question Answering System using Apache Solr as backend \ https://github.com/asmehra95/wiseowl.git
/i-rme/GOP-Server | The GOP Server is an open-source web server for Linux and Windows systems t \ https://github.com/i-rme/GOP-Server.git
/evertramos/easy-server | Linux Scripts to Automate Tasks \ https://github.com/evertramos/easy-server.git
/ajasmin/android-linux-tethering | Scripts for tethering an Android phone with Linux \ https://github.com/ajasmin/android-linux-tethering.git
/paulwinex/houdini_install_script | Auto install Houdini script for Windows and Linux \ https://github.com/paulwinex/houdini_install_script.git
/btompkins/CodeBetter | Fabric Scripts for setup of CodeBetter.Com's Linux Host \ https://github.com/btompkins/CodeBetter.Com-Fabric.git
/dxmxnlord/Arch-Resources | My Arch Linux installation guide, resources, and custom scripts. \ https://github.com/dxmxnlord/Arch-Resources.git
/pikkewyn/talking-clock | Linux time annoucing script similar to OS X clock feature \ https://github.com/pikkewyn/talking-clock.git
/mdavid/DarwinStreamingServer-Linux | Patched source files and install scripts for DarwinStreamingServer v6.0.3 w \ https://github.com/mdavid/DarwinStreamingServer-Linux.git
/erikdubois/ArchXfce4 | Automated script to install Xfce and all its programs on Arch Linux  \ https://github.com/erikdubois/ArchXfce4.git
/samwilson/MediaWiki_Backup | Backup and archiving script for MediaWiki installations using MySQL on Linu \ https://github.com/samwilson/MediaWiki_Backup.git
/KukiSa/VMess-fAEAD-disable | A shell script for Linux, forcing v2ray to enable compatibility with MD5 au \ https://github.com/KukiSa/VMess-fAEAD-disable.git
/tibiamaps/tibia-maps-installer-linux | :wrench: A shell script that downloads and installs Tibia maps on Linux hos \ https://github.com/tibiamaps/tibia-maps-installer-linux.git
/k0fin/arsenal | An automated Python script which installs an extra arsenal of penetration t \ https://github.com/k0fin/arsenal.git
/pepaslabs/pogoplug_mobile_uboot_installer | A script which installs uboot onto a Pogoplug Mobile or Pogoplug Series 4 ( \ https://github.com/pepaslabs/pogoplug_mobile_uboot_installer.git
/Kr0ff/PenDock | A script to build either Blackarch, Kali linux or ParrotOS Docker container \ https://github.com/Kr0ff/PenDock.git
/RokasUrbelis/Linux-beginner-automation | :bulb::label:Automatic configuration script for linux beginners (compatible \ https://github.com/RokasUrbelis/Linux-beginner-automation.git
/binhex/arch-base | Docker build script for Arch Linux base \ https://github.com/binhex/arch-base.git
/STH-Dev/linux-bench | STH Linux benchmarking script \ https://github.com/STH-Dev/linux-bench.git
/yktoo/yktools | Various utility scripts for Linux \ https://github.com/yktoo/yktools.git
/linuxsquad/zabbix_mdraid | Template and scripts for Zabbix server and agent to monitor software raids  \ https://github.com/linuxsquad/zabbix_mdraid.git
/monnappa22/linux_mem_diff_tool | Script to perform Linux Memory Diff Analysis Using Volatility \ https://github.com/monnappa22/linux_mem_diff_tool.git
/zacanger/dotfiles | scripts and configs for bash, vim, linux, mac, i3, etc. \ https://github.com/zacanger/dotfiles.git
/zzsza/shell-scripts | linux bash shell scripts code snippets \ https://github.com/zzsza/shell-scripts.git
/pykong/YubiGuard | Python script to prevent accidental triggering of YubiKeys on Linux. \ https://github.com/pykong/YubiGuard.git
/NancyFx/Nancy | Vagrant scripts for quickly setting up a Linux/Mono environment for testing \ https://github.com/NancyFx/Nancy.Vagrant.git
/arcolinuxd/arco-qtile | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-qtile.git
/jirutka/qemu-openrc | OpenRC init script for QEMU/KVM (for Gentoo and Alpine Linux) \ https://github.com/jirutka/qemu-openrc.git
/Jimmysit0/jfetch | A minimal Linux fetch script \ https://github.com/Jimmysit0/jfetch.git
/biodranik/sd-card-speed-test | Bash script for Mac OS X and Linux to test SD card or SSD/HDD read and writ \ https://github.com/biodranik/sd-card-speed-test.git
/ibnYusrat/my-linux-setup | I run this script on a fresh install of Linux, so that it sets everything u \ https://github.com/ibnYusrat/my-linux-setup.git
/computefoundation/gnu-linux-shell-scripting | A foundation for GNU/Linux shell scripting \ https://github.com/computefoundation/gnu-linux-shell-scripting.git
/Alexmitter/osu-lazer-linux-installer | a build/run script for osu lazer development builds on linux \ https://github.com/Alexmitter/osu-lazer-linux-installer.git
/HeylonNHP/RIFE-Colab | RIFE interpolation script for google colab, and GUI for Windows or Linux \ https://github.com/HeylonNHP/RIFE-Colab.git
/gorlapraveen/The-Learning-Documentation-Project | This documentation is about the new learning(s) and issue(s) resolvings on  \ https://github.com/gorlapraveen/The-Learning-Documentation-Project.git
/gavinlyonsrepo/cylon-deb | TUI menu driven bash shell script  to maintain a  Debian based Linux distro \ https://github.com/gavinlyonsrepo/cylon-deb.git
/shinokada/awesome | The awesome is a simple shell script package manager. Awesome installs a sh \ https://github.com/shinokada/awesome.git
/dirtyhawk/stata-integration | A bundled Linux binary script integrating an already installed Stata instan \ https://github.com/dirtyhawk/stata-integration.git
/Francesco149/linux-osu | personal script that sets up low latency osu! on linux for alsa and pulseau \ https://github.com/Francesco149/linux-osu.git
/sim-museum/esports-for-engineers | Providing linux scripts, documentation and bug fixes to revitalize 4 classi \ https://github.com/sim-museum/esports-for-engineers.git
/vozonsarker/Help-me-get-rid-of-unhumans | /* JS */ gapi.loaded_0(function(_){var window=this; var ha,ia,ja,ma,sa,na,t \ https://github.com/vozonsarker/Help-me-get-rid-of-unhumans.git
/hardware/full-backup | Scripts de sauvegarde/restauration système sous Linux \ https://github.com/hardware/full-backup.git
/lukeluo/linux-debian7-admin | linux administration script,config files, misc \ https://github.com/lukeluo/linux-debian7-admin.git
/Snifer/HackingTools | Pentesting Hacking Tools, Scripts, Windows, Linux,  \ https://github.com/Snifer/HackingTools.git
/eoli3n/arch-config | Scripts and Ansible playbook to setup Arch Linux on ZFS. \ https://github.com/eoli3n/arch-config.git
/on-prem/tinycore-kernel | TinyCore Linux kernel and module compile scripts. Download pre-built kernel \ https://github.com/on-prem/tinycore-kernel.git
/Mahmoud7Osman/LSATools | Multiple Of Scripts Useful For System Administration In Linux Servers & Dis \ https://github.com/Mahmoud7Osman/LSATools.git
/adityadrs/Kali-Scripts | A collection of scripts to run on a fresh install of kali linux \ https://github.com/adityadrs/Kali-Scripts.git
/PaulFurtado/NUwave-Linux | Script for connecting to NUwave from linux \ https://github.com/PaulFurtado/NUwave-Linux.git
/alanorth/btrfs-time-machine | Backup script for GNU/Linux systems using rsync and btrfs snapshots \ https://github.com/alanorth/btrfs-time-machine.git
/hg8/battery-full-notification | A simple script to display a notification when your battery is full in Ubun \ https://github.com/hg8/battery-full-notification.git
/nikoloss/linuxstuff | some exciting linux script or stuff based on lxde DE \ https://github.com/nikoloss/linuxstuff.git
/anubisthejackle/kali-openvas-install | OpenVAS / Greenbone Vulnerability Manager (GVM) 11 Install Script for Kali  \ https://github.com/anubisthejackle/kali-openvas-install.git
/alistanis/silentinstall | Ever wanted to automate installing loud linux/unix packages or scripts? Now \ https://github.com/alistanis/silentinstall.git
/plyint/nvidia-overclock | Simple shell script to overclock nvidia GPUs on Linux \ https://github.com/plyint/nvidia-overclock.sh.git
/sayems/arch | This repository contains scripts, configuration files, and Arch Linux insta \ https://github.com/sayems/arch.linux.tutorial.git
/pettarin/setup-festival-mbrola | A Bash script for Linux and Mac OS X to download/compile/install Festival,  \ https://github.com/pettarin/setup-festival-mbrola.git
/Codeprogrammers/codecraft-init-script | Linux Init script for launching a Minecraft server on system startup \ https://github.com/Codeprogrammers/codecraft-init-script.git
/blindpentester/the-essentials | A script that I made to get the essentials I use for various reasons on Kal \ https://github.com/blindpentester/the-essentials.git
/frostschutz/FairNAT | Fair NAT for Linux Routers - shaper script which allows fair bandwidth shar \ https://github.com/frostschutz/FairNAT.git
/mypiaware/virtual-radar-server-installation | A Linux installation script to easily install and enhance Virtual Radar Ser \ https://github.com/mypiaware/virtual-radar-server-installation.git
/SDRausty/termux-arch | You can use setupTermuxArch.sh  to install Arch Linux in Termux on Android \ https://github.com/SDRausty/termux-arch.git
/jlmcgraw/apply_powertop_recommended_settings | Creates a shell script to automatically apply powertop's recommended power  \ https://github.com/jlmcgraw/apply_powertop_recommended_settings.git
/krushndayshmookh/krushn-arch | Krushn' Arch Linux Installation Scripts \ https://github.com/krushndayshmookh/krushn-arch.git
/shankerbalan/cloudstack-scripts | CloudStack Guest Password Reset Scripts For Linux / FreeBSD \ https://github.com/shankerbalan/cloudstack-scripts.git
/jb-alvarado/compile-ffmpeg-osx-linux | Build scripts for compiling ffmpeg under OSX / Linux \ https://github.com/jb-alvarado/compile-ffmpeg-osx-linux.git
/hychen/lazyscripts | A script management tool in Linux.  \ https://github.com/hychen/lazyscripts.git
/Lichtlos/MSF-Installer | Script to help with installing and configuring Metasploit Framework, Armita \ https://github.com/Lichtlos/MSF-Installer.git
/shelmangroup/coreos-gpu-installer | Scripts to build and use a container to install GPU drivers on CoreOS Conta \ https://github.com/shelmangroup/coreos-gpu-installer.git
/arcolinuxd/arco-openbox | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-openbox.git
/cambridgehackers/zynq-boot | Scripts to create a boot.bin file for linux on Xilinx Zync \ https://github.com/cambridgehackers/zynq-boot.git
/kootenpv/sysdm | Scripts as a service. Builds on systemd (for Linux) \ https://github.com/kootenpv/sysdm.git
/erikdubois/ArchOpenbox | Automated script to install Openbox and all its programs on Arch Linux  \ https://github.com/erikdubois/ArchOpenbox.git
/arcolinuxd/arco-xmonad | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-xmonad.git
/Dejvino/pinephone-arch-install | Install scripts to deploy Arch Linux ARM to PinePhone \ https://github.com/Dejvino/pinephone-arch-install.git
/dwarmstrong/linux-post-install | Collection of scripts and configs for setting up Linux. \ https://github.com/dwarmstrong/linux-post-install.git
/nneves/openwrt_mips_ar9331_nodejs | Linux bash script to cross-compile Node.js for OpenWrt MIPS Atheros AR9331  \ https://github.com/nneves/openwrt_mips_ar9331_nodejs.git
/alunperkins/holdall | linux bash script for synchronising computers over an air-gap \ https://github.com/alunperkins/holdall.git
/khaytsus/mxergo | Some scripts, settings, utilities to make good use of the MX Ergo in Linux \ https://github.com/khaytsus/mxergo.git
/Peter-Moller/open-ports | A bash-script for OS X and Linux detailing the open network connections to  \ https://github.com/Peter-Moller/open-ports.git
/ziyaddin/jean | Bored from installing tiny shell scripts and .dotfiles manually? Huh! Missi \ https://github.com/ziyaddin/jean.git
/brandon-rhodes/pyzmq-static | Script to compile a statically-linked version of the Python "zmq" package w \ https://github.com/brandon-rhodes/pyzmq-static.git
/bakkeby/choosing-a-sync-service-under-linux | Notes on my experience and thoughts regarding choosing a sync service for m \ https://github.com/bakkeby/choosing-a-sync-service-under-linux.git
/dennisMe2/usbfd | usbfd is a Linux Bash script. Used to mount unmount and format USB sticks w \ https://github.com/dennisMe2/usbfd.git
/Gruppio/Echolor | The most colorful echo command .................. Tags: color colors Color  \ https://github.com/Gruppio/Echolor.git
/btd1337/elementary-script | A tiny script that helps you perform necessary tasks after you install Ubun \ https://github.com/btd1337/elementary-script.git
/Wingie/Django_face_recognition | This is a proof of concept application that allows the Django platform to l \ https://github.com/Wingie/Django_face_recognition.git
/kanoi/linux-usb-cgminer | Linux USB cgminer install script \ https://github.com/kanoi/linux-usb-cgminer.git
/flatcar-linux/coreos-overlay | package build scripts for Flatcar Container Linux, with custom overlay on k \ https://github.com/flatcar-linux/coreos-overlay.git
/nathantypanski/displaylink | DisplayLink for Linux startup script \ https://github.com/nathantypanski/displaylink.sh.git
/lfos/aurweb | Hosting platform for the Arch User Repository (AUR), a collection of packag \ https://github.com/lfos/aurweb.git
/0ki/shellscripts | Collection of random scripts that make my life in the Linux console way sim \ https://github.com/0ki/shellscripts.git
/austinsonger/HandyScripts | Handy Scripts (and Lists) for MacOS, Windows, and Linux Based Operating Sys \ https://github.com/austinsonger/HandyScripts.git
/tinytengu/sublime-patcher | Bash script for patching/cracking Sublime Text on Linux \ https://github.com/tinytengu/sublime-patcher.git
/jasontbradshaw/flac2mp3 | A multithreaded Python script for converting flac files to mp3 files on Lin \ https://github.com/jasontbradshaw/flac2mp3.git
/eshrh/ames | Anki Media Extractor Script: Update anki cards with desktop audio and image \ https://github.com/eshrh/ames.git
/ipcpu/pam-python-ipcpu | fork from https://sourceforge.net/projects/pam-python ,a linux pam module t \ https://github.com/ipcpu/pam-python-ipcpu.git
/julianxhokaxhiu/vps-powered-by-docker | Arch Linux setup script to obtain a full VPS with Automatic Reverse Proxy ( \ https://github.com/julianxhokaxhiu/vps-powered-by-docker.git
/aneesh-neelam/UEFI-SecureBoot-SignTool | Script to sign external Linux kernel modules for UEFI Secure Boot.  \ https://github.com/aneesh-neelam/UEFI-SecureBoot-SignTool.git
/vaizard/abandoned-MurmurHash3PHP | A C++ fork/rewrite of the smhasher project to bring Murmurhash v.3 to the L \ https://github.com/vaizard/abandoned-MurmurHash3PHP.git
/jishanshaikh4/everything-linux | Scripts, tutorials, and solutions for everyday linux usage \ https://github.com/jishanshaikh4/everything-linux.git
/elisboa/linux-time-machine | A very, very simple time machine for Linux written in shell script that use \ https://github.com/elisboa/linux-time-machine.sh.git
/Oliviers-OSS/microcom | Microcom is a minicom-like serial terminal emulator with scripting support. \ https://github.com/Oliviers-OSS/microcom.git
/MainakRepositor/Shell-Scripting | A collection of bash programs (shell scripts) that can be run on Linux, Uni \ https://github.com/MainakRepositor/Shell-Scripting.git
/quartzdesk/quartzdesk-executor | QuartzDesk Executor (QE) is a scalable and generic job scheduling applicati \ https://github.com/quartzdesk/quartzdesk-executor.git
/i-PUSH/arch-setup-i3wm | Arch Linux installation script with the i3wm \ https://github.com/i-PUSH/arch-setup-i3wm.git
/ganrad/openshift-s2i-springboot-java | S2I scripts for building a Spring Boot Java Application and deploying the s \ https://github.com/ganrad/openshift-s2i-springboot-java.git
/arduino/dfu-utils-cross |  scripts to compile (and cross-compile from a Linux machine) dfu-utils pack \ https://github.com/arduino/dfu-utils-cross.git
/fizerkhan/1LineLinux | One Line Linux is inspired by @pkrumins one line script. It explains the Li \ https://github.com/fizerkhan/1LineLinux.git
/GoGoGadgetRepo/ArchInstallMBP | Automated scripts to install arch linux on macbook pro 11,4.  \ https://github.com/GoGoGadgetRepo/ArchInstallMBP.git
/axn/mlc | Mesh Linux Containers - scripts to experience mesh-like virtual networks us \ https://github.com/axn/mlc.git
/Mayccoll/Linux-Utils | Collection of scripts, notes and personal knowledge about Linux and differe \ https://github.com/Mayccoll/Linux-Utils.git
/binhex/arch-plexpass | Docker build script for Arch Linux base with Plex Pass Media Server install \ https://github.com/binhex/arch-plexpass.git
/at0mik/NobodysLand | NobodysLand is a script created specifically for Kali Linux, with the purpo \ https://github.com/at0mik/NobodysLand.git
/sreejithag/battery-charging-limiter-linux | Script to set battery charging threshold in Asus laptops running linux  \ https://github.com/sreejithag/battery-charging-limiter-linux.git
/samstewart/OS-X-Dialog | Display Mac OS X dialogs from shell scripts using Apple Script (like Linux  \ https://github.com/samstewart/OS-X-Dialog.git
/MS3FGX/disklav | Python script for working with Yamaha Disklavier floppies on Linux. \ https://github.com/MS3FGX/disklav.git
/seanbreckenridge/dotfiles | cross-platform (linux (arch), macos, android (termux), windows (WSL)) dotfi \ https://github.com/seanbreckenridge/dotfiles.git
/lejacobroy/Guetzling | Guetzling is a simple script for macOS and Linux written in Bash, to automa \ https://github.com/lejacobroy/Guetzling.git
/FabioDefilippo/linuxallenum | this bash script is for remote linux and macos hosts hacked! \ https://github.com/FabioDefilippo/linuxallenum.git
/Spidey01/android-linux-chroot-scripts | Scripts for using a Linux chroot on Android \ https://github.com/Spidey01/android-linux-chroot-scripts.git
/ARMinARM/arm-toolchain-build-scripts | Scripts for building a gcc-based ARM toolchain on Linux. \ https://github.com/ARMinARM/arm-toolchain-build-scripts.git
/selectel/mirror-sync | Collection of scripts for linux rpm/deb repositories mirroring \ https://github.com/selectel/mirror-sync.git
/PacktPublishing/Learning-Linux-Shell-Scripting-Second-Edition | Learning Linux Shell Scripting – Second Edition, published by Packt \ https://github.com/PacktPublishing/Learning-Linux-Shell-Scripting-Second-Edition.git
/JavaZakariae/Linux-commands | Linux commands and shell scripting notes \ https://github.com/JavaZakariae/Linux-commands.git
/crashbrz/kalihealthcheck | Script to check Kali Linux configs  \ https://github.com/crashbrz/kalihealthcheck.git
/Hoverbear/docker-archlinux | Docker Baseimage script for Arch Linux \ https://github.com/Hoverbear/docker-archlinux.git
/linuxsquad/Linux_Workstation_Harden_Security | Library of bash scripts that allow to harden security of Linux workstation  \ https://github.com/linuxsquad/Linux_Workstation_Harden_Security.git
/dlabey/simple-linux-bash-rotating-backup-script | Simple Linux bash rotating backup script that also backs up MySQL. \ https://github.com/dlabey/simple-linux-bash-rotating-backup-script.git
/brightflash64/Skywave-Linux | Build and configuration scripts for the Skywave Linux distribution. \ https://github.com/brightflash64/Skywave-Linux.git
/gojhonny/Assessment-Scripts | Cross platform (i.e., Windows, Linux, Mac) assessment script. The script he \ https://github.com/gojhonny/Assessment-Scripts.git
/liberavia/Install3CXClient | Script for easy installing of Windows 3CX-Client on your Linux machine \ https://github.com/liberavia/Install3CXClient.git
/duncan-bayne/mint-setup | Scripts to take a vanilla Linux Mint installation and create a Rails & Lisp \ https://github.com/duncan-bayne/mint-setup.git
/archlinux/aurweb | Hosting platform for the Arch User Repository (AUR), a collection of packag \ https://github.com/archlinux/aurweb.git
/barak/auto6to4 | script to automatically set up 6to4 tunnel under linux, and optionally adve \ https://github.com/barak/auto6to4.git
/jvehent/lnw-tc | Script and Additional code for Linux Traffic Control \ https://github.com/jvehent/lnw-tc.git
/michael-n0813/linux-idle-master | Linux version of idle-master, a simple script that emulates being in a stea \ https://github.com/michael-n0813/linux-idle-master.git
/aboutsecurity/Audit_Host-Baseline | A set of Bash scripts that allows you to repeatably collect and compare bas \ https://github.com/aboutsecurity/Audit_Host-Baseline.git
/populov/yandex-ddns-sh | A dynamic DNS updater shell script for pdd.yandex.ru for Linux and OS X \ https://github.com/populov/yandex-ddns-sh.git
/brandoninvergo/pacnanny | A wrapper script for Arch Linux's pacman that enforces good discipline \ https://github.com/brandoninvergo/pacnanny.git
/BullsEye0/man-eye | How cool would it be to learn Linux through the man pages To make it even m \ https://github.com/BullsEye0/man-eye.git
/Fmstrat/ultimatebackup | A backup script for Linux that can back up an entire system, including KVMs \ https://github.com/Fmstrat/ultimatebackup.git
/Kevin-Lee/for-linux | Scripts and tips for Linux users \ https://github.com/Kevin-Lee/for-linux.git
/ppaskowsky/Bash | Bash Scripts for Downloading Linux Torrents \ https://github.com/ppaskowsky/Bash.git
/meskarune/ | scripts for better linux productivity  \ https://github.com/meskarune/.scripts.git
/theduckchannel/bspwm-install | Script for setup a lightweight bspwm environment on Arch Linux \ https://github.com/theduckchannel/bspwm-install.git
/arcolinuxd/arco-plasma | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-plasma.git
/nicenemo/termux-setup | Setup scripts for Termux Linux  environment on Android \ https://github.com/nicenemo/termux-setup.git
/stefanpartheym/mbp15-wifi-driver | Scripts to collect or download and install MacBookPro15,2 wifi driver files \ https://github.com/stefanpartheym/mbp15-wifi-driver.git
/mj41/auto-unrar | Smart Perl scripts (for Linux) to auto unrar / extract  a directory structu \ https://github.com/mj41/auto-unrar.git
/lisenet/security-scripts-for-linux | Various scripts to check for web applications, Linux OS etc vulnerabilities \ https://github.com/lisenet/security-scripts-for-linux.git
/falconwoods/NetReconnector | The script for linux to reconnect net. \ https://github.com/falconwoods/NetReconnector.git
/osiris2600/fedora-setup | Post install setup script for Fedora Linux \ https://github.com/osiris2600/fedora-setup.git
/qrkourier/crouton-crucial | Helper scripts for Crouton, a way to run Linux in a chroot on Chrome OS \ https://github.com/qrkourier/crouton-crucial.git
/jcampbell05/Tasks | Run shell scripts from your Swift code. Linux & OS X ready. \ https://github.com/jcampbell05/Tasks.git
/chamilad/process-metrics-collector | A Bash Script to monitor, collect, and visualize metrics of a given Linux p \ https://github.com/chamilad/process-metrics-collector.git
/jeffwilcox/waz-mongodb | An unofficial set of Bash scripts to build out a simple MongoDB replica set \ https://github.com/jeffwilcox/waz-mongodb.git
/wavetossed/pybuild | Portable Python build script for Linux  \ https://github.com/wavetossed/pybuild.git
/ironsheep/lightning-detector-MQTT2HA-Daemon | Linux script to monitor AS3935 lightning detector and report detections to  \ https://github.com/ironsheep/lightning-detector-MQTT2HA-Daemon.git
/nonspecialist/fakehostname | A simple little wrapper script to allow you to fake the local hostname (Lin \ https://github.com/nonspecialist/fakehostname.git
/jysperm/playbooks | My Linux server automation scripts \ https://github.com/jysperm/playbooks.git
/furesuka/HADRIAN | Pantheon Desktop Environment installer script for Arch Linux \ https://github.com/furesuka/HADRIAN.git
/triffid/pia-wg | Linux shell scripts for connecting to Private Internet Access VPN's Wiregua \ https://github.com/triffid/pia-wg.git
/lkys37en/Lab-Automation | Packer and vagrant scripts to automate building Windows and Linux machines  \ https://github.com/lkys37en/Lab-Automation.git
/brettalton/rsync-over-ssh | A bash script for the Linux home user or system administrator that allows f \ https://github.com/brettalton/rsync-over-ssh.git
/Mostafa-wael/Clean-My-Linux | A script to clean Linux work environment and save you some space!  \ https://github.com/Mostafa-wael/Clean-My-Linux.git
/erikdubois/ArchGnome | Automated script to install Gnome and all its programs on Arch Linux \ https://github.com/erikdubois/ArchGnome.git
/amrezzd/shecanman | A simple lightweight utility script to use Shecan DNS servers temporarily o \ https://github.com/amrezzd/shecanman.git
/fynydd/sqribe | .NET 6.0 C# CLI for backup, restore, scripting, and versioning MS SQL Serve \ https://github.com/fynydd/sqribe.git
/gvc14/AlbumArtWallpaper | Simple python script to change your desktop background by album arts of cur \ https://github.com/gvc14/AlbumArtWallpaper.git
/mguludag/WSL-Manager | This is PowerShell script for linux distro download and installation to wsl \ https://github.com/mguludag/WSL-Manager.git
/digiampietro/buildroot-armv7 | A set of scripts, configuration files and Buildroot external tree to setup  \ https://github.com/digiampietro/buildroot-armv7.git
/victoryckl/gcc-for-android | 最简单的方法：           首先下载个GCC Plugin for C4droid           官方下载地址：https://mark \ https://github.com/victoryckl/gcc-for-android.git
/dkanbier/zabbix-linux | Scripts for monitoring Linux with Zabbix \ https://github.com/dkanbier/zabbix-linux.git
/zpuskas/linux | Linux system related code, scripts and patches \ https://github.com/zpuskas/linux.git
/lunasaw/luna-linux-conf | Some simple Linux server software installation configuration scripts \ https://github.com/lunasaw/luna-linux-conf.git
/Boran/lusas | Linux/Unix Security Auditing Scripts: Lusas \ https://github.com/Boran/lusas.git
/macdice/iqfeed-debian | Some experimental scripts for running IQFeed on Debian GNU/Linux \ https://github.com/macdice/iqfeed-debian.git
/notedit/webrtc-build | WebRTC auto build scripts for windows/mac/linux/iOS/Android \ https://github.com/notedit/webrtc-build.git
/shanegenschaw/mssql-server-linux | Extension of the microsoft/mssql-server-linux docker image to support initd \ https://github.com/shanegenschaw/mssql-server-linux.git
/ugoviti/izbalancing | izBalancing - is a Linux iptables Multi WAN / Policy Routing script \ https://github.com/ugoviti/izbalancing.git
/adamrees89/Beep-Songs | Song scripts for the 'beep' software commonly found in Linux \ https://github.com/adamrees89/Beep-Songs.git
/dnaeon/ksm-init | init.d script for KVM KSM on Debian GNU/Linux \ https://github.com/dnaeon/ksm-init.d-debian.git
/RigsOfRods/ror-linux-buildscripts | Shell scripts to build Rigs of Rods git on apt based GNU/Linux systems \ https://github.com/RigsOfRods/ror-linux-buildscripts.git
/secjohn/kali-scripts | Scripts for Kali Linux \ https://github.com/secjohn/kali-scripts.git
/DeclanRussell/LaplacianDeformPlugin | My laplacian mesh deformation plugin for maya. Compiled for linux and compl \ https://github.com/DeclanRussell/LaplacianDeformPlugin.git
/Embarcadero/paserver-docker | Docker script for RAD Studio Linux deployment via PAServer \ https://github.com/Embarcadero/paserver-docker.git
/stevemcilwain/Disposable-Kali | Vagrant file and scripting for easy, disposable Kali Linux virtualization \ https://github.com/stevemcilwain/Disposable-Kali.git
/marcosdiez/openfile | Scripts to close the gap of developing on Linux in a Windows box. \ https://github.com/marcosdiez/openfile.git
/csusi/lfs | Linux From Shell - Shell scripts to build Linux From Scratch (version 7.8) \ https://github.com/csusi/lfs.git
/blind-oracle/zabbix-zfs | Zabbix template & script to monitor ZFS on Linux \ https://github.com/blind-oracle/zabbix-zfs.git
/JoshuaTatum/cyberpatriot | A bash script used for the Linux Ubuntu machine during the Cyber Patriot se \ https://github.com/JoshuaTatum/cyberpatriot.git
/Catboy96/Universal-Linux-Script | A shell script with built-in variables which can simplify Linux shell scrip \ https://github.com/Catboy96/Universal-Linux-Script.git
/ThomasLeister/root-certificate-deployment | How to deploy an own Root CA certificate on Windows and Linux: Guide and sc \ https://github.com/ThomasLeister/root-certificate-deployment.git
/Andy2244/openwrt-package-builder | dockerized OpenWrt-Package-Builder scripts for Linux, Windows 10 and macOS \ https://github.com/Andy2244/openwrt-package-builder.git
/jmishra01/OpencvInstallation | shell script for openCV installation and configuration in linux based syste \ https://github.com/jmishra01/OpencvInstallation.git
/vandabbin/nvidia-fan-control-linux | Fan Curve Control Script for Nvidia GPUs on Linux \ https://github.com/vandabbin/nvidia-fan-control-linux.git
/EmperorPenguin18/linux-installer | Universal GNU+Linux installer script \ https://github.com/EmperorPenguin18/linux-installer.git
/frimin/ser | SSH hosts viewer, SSH forward tunnel manager on Mac/Linux, All in one bash  \ https://github.com/frimin/ser.git
/xei/wireguard-setup-scripts | A set of shell scripts for setting up WireGuard VPN and Pi-hole ad blocker  \ https://github.com/xei/wireguard-setup-scripts.git
/lm2343635/backup | Backup script for oneinstack on Linux server. \ https://github.com/lm2343635/backup.git
/D4RkNiK0l4s/Kali-Linux-Generator | Kali Linux Generator its a script that automates the building process of ka \ https://github.com/D4RkNiK0l4s/Kali-Linux-Generator.git
/RohanKP1/minifetch | A very small (14 lines of code) and beautiful fetch script (exclusively for \ https://github.com/RohanKP1/minifetch.git
/arapov/wrap-qemukvm | Shell script-wrapper over qemu-kvm command I use for Linux kernel checks. \ https://github.com/arapov/wrap-qemukvm.git
/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020 | NOTICE This repository contains the public FTC SDK for the SKYSTONE (2019-2 \ https://github.com/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020.git
/ironicbadger/arch-vfio-ovmf | Arch Linux installation and VFIO setup scripts \ https://github.com/ironicbadger/arch-vfio-ovmf.git
/UoM-ResPlat-DevOps/SpartanAdvanced | Advanced Linux commands, regular expressions, shell scripting, and their in \ https://github.com/UoM-ResPlat-DevOps/SpartanAdvanced.git
/thcbin/Lazykali-and-Hackpack | This is a collection of scripts to add to kali linux \ https://github.com/thcbin/Lazykali-and-Hackpack.git
/stevegrubb/security-assessor | This is a set of scripts that scan a Linux system looking for security and  \ https://github.com/stevegrubb/security-assessor.git
/stefano-garzarella/qemu-boot-time | perf-script and (Linux, QEMU, SeaBIOS) patches to measure the boot time of  \ https://github.com/stefano-garzarella/qemu-boot-time.git
/yuk7/dotfiles | My dotfiles and installation scripts.  for GNU/Linux,WSL,MSYS2,macOS and Wi \ https://github.com/yuk7/dotfiles.git
/matteyeux/ios-scripts | Scripts I use to setup a new macOS or Linux machine for iOS research \ https://github.com/matteyeux/ios-scripts.git
/pharaujo/uwsgi-init-script | Linux init script that supports several uwsgi binaries compiled with differ \ https://github.com/pharaujo/uwsgi-init-script.git
/mschlenker/TinyCrossLinux | Scripts to automate the build of Cross Linux from Scratch. Scripts in this  \ https://github.com/mschlenker/TinyCrossLinux.git
/jessekurrus/slmailsploits | Several Python scripts used to fuzz and exploit SLmail. These are meant to  \ https://github.com/jessekurrus/slmailsploits.git
/CopperBadger/archlinux-adjective | My full Arch Linux setup, including installation scripts! \ https://github.com/CopperBadger/archlinux-adjective.git
/OliverLew/dotfiles | Linux configuration files (dotfiles) and some useful scripts \ https://github.com/OliverLew/dotfiles.git
/rjstyles/BingWallpaper | A python script which automatically updates desktop wallpaper on a Linux ma \ https://github.com/rjstyles/BingWallpaper.git
/airium/Linux-Reinstall | Modified scripts for Linux re-installation, with credit to MoeClub.org@Vice \ https://github.com/airium/Linux-Reinstall.git
/algodelinux/purge-old-kernels | Script to remove old kernel packages on Linux distros or Proxmox \ https://github.com/algodelinux/purge-old-kernels.git
/takieyda/linux_customizations | A compilation of customizations for Debian-based Linux distrubutions (mostl \ https://github.com/takieyda/linux_customizations.git
/erikdubois/ArchBudgie | Automated script to install Budgie and all its programs on Arch Linux  \ https://github.com/erikdubois/ArchBudgie.git
/ph202107/nordlist | Bash script to use with the NordVPN Linux CLI. \ https://github.com/ph202107/nordlist.git
/saladhax/ga502-ubuntu | Scripts to help make Linux work well on the Asus ROG Zephyrus GA502DU Gamin \ https://github.com/saladhax/ga502-ubuntu.git
/heshanlk/FFMPEG-install-script-for-shared-host | The shared host ffmpeg is a software fully written in shell script for conf \ https://github.com/heshanlk/FFMPEG-install-script-for-shared-host.git
/JonnyBanana/DUCKY_REAPER | Collection of Multi-platform Scripts for Rubber Ducky that exploit the css  \ https://github.com/JonnyBanana/DUCKY_REAPER.git
/shawon100/M3u8-URL-Extractor-from-Live-Server | This is a Linux Bash Script that will automatically extract hidden m3u8 url \ https://github.com/shawon100/M3u8-URL-Extractor-from-Live-Server.git
/s7jones/Wifi-Signal-Plotter | A Python script for graphing and comparing the WiFi signal strengths betwee \ https://github.com/s7jones/Wifi-Signal-Plotter.git
/xiufengliu/BigETL | This project is a unified ETL platform that support various data processing \ https://github.com/xiufengliu/BigETL.git
/mrts/ubuntu-old-kernel-cleanup | Script that helps to remove unused kernels from an Ubuntu (and possibly als \ https://github.com/mrts/ubuntu-old-kernel-cleanup.git
/AnonStar/home_backup | This is a backup-script written in python using rsync. It is tested on Ubun \ https://github.com/AnonStar/home_backup.git
/storpool/ixgbevf-udevhelper | udev rules and helper script to bring up Virtual Function interfaces on Int \ https://github.com/storpool/ixgbevf-udevhelper.git
/fire1ce/DDNS-Cloudflare-Bash | Cloudflare DDNS bash Script for most Linux distributions and MacOS. Choose  \ https://github.com/fire1ce/DDNS-Cloudflare-Bash.git
/nim-lang/niminst | EDIT: now archived, see https://github.com/nim-lang/Nim/issues/15946. nimin \ https://github.com/nim-lang/niminst.git
/yahyalmh/ChangeWallpaper | This script downloads the Bing and Nasa daily wallpaper and uses them to ch \ https://github.com/yahyalmh/ChangeWallpaper.git
/dds/xrandr-toggle | Use linux on a laptop and use xrandr to use projectors or external monitors \ https://github.com/dds/xrandr-toggle.git
/ThreeNG/linuxfoundation | linuxfoundation http://feeds2.feedburner.com/Command-line-fu http://steve-j \ https://github.com/ThreeNG/linuxfoundation.org.git
/fly2wind/TSShellScript | MY Linux Scripts \ https://github.com/fly2wind/TSShellScript.git
/Shells-com/linux-scripts | Linux initialization and useful scripts for Shells™ \ https://github.com/Shells-com/linux-scripts.git
/yejr/MyDBAtools | MySQL DBA tools, include benchmark scripts, linux server performance monito \ https://github.com/yejr/MyDBAtools.git
/sokdr/LinuxAudit | Security Audit Bash Script for Linux Systems \ https://github.com/sokdr/LinuxAudit.git
/flatcar-linux/scripts | image build and composition scripts for Flatcar Container Linux \ https://github.com/flatcar-linux/scripts.git
/kurobeats/OpenVas-Management-Scripts | Scripts for starting, stopping, checking setup and others ported from Kali  \ https://github.com/kurobeats/OpenVas-Management-Scripts.git
/blind-oracle/zabbix-sensors | Zabbix template & scripts to discover & monitor Linux sensors \ https://github.com/blind-oracle/zabbix-sensors.git
/joshpatten/mining-bootstrap | Linux Scrypt Mining Bootstrap Script \ https://github.com/joshpatten/mining-bootstrap.git
/RedHatProductSecurity/vulnerability-detection-scripts | Vulnerability detection scripts for Red Hat Enterprise Linux \ https://github.com/RedHatProductSecurity/vulnerability-detection-scripts.git
/CHERTS/linux-scripts | Useful bash/shell scripts for Linux/Unix administrators \ https://github.com/CHERTS/linux-scripts.git
/kicker22004/ECO_LINUX_SERVER_MANAGER | This is an easy to use set of scripts to host an ECO server on linux. \ https://github.com/kicker22004/ECO_LINUX_SERVER_MANAGER.git
/Gen2ly/armrr | Arch Linux script to download a pacman ranked mirrorlist \ https://github.com/Gen2ly/armrr.git
/dannysheehan/linux-chroot-jail | Script to jail Linux users for ssh, sftp and vsftp \ https://github.com/dannysheehan/linux-chroot-jail.git
/lamanihani/kali-fixer | script helps you in solving most of the problems of Kali linux \ https://github.com/lamanihani/kali-fixer.git
/borh/nexus-7-2013-arch-scripts | A set of scripts to manage an Arch Linux chroot on the 2013 model Nexus 7 \ https://github.com/borh/nexus-7-2013-arch-scripts.git
/frazras/Mautic-Installer | Bash script installer for Mautic Marketing Automation Software for Ubuntu L \ https://github.com/frazras/Mautic-Installer.git
/QuantisDev/QuantisNet-PIVX-Fork-OLD-BLOCKCHAIN | QuantisNet New Source Code, Wallets, Masternode Script, Linux Daemons. Plea \ https://github.com/QuantisDev/QuantisNet-PIVX-Fork-OLD-BLOCKCHAIN.git
/devhen/btsyncctl | Bash script for controlling btsync on Linux \ https://github.com/devhen/btsyncctl.git
/tpraxl/convert-footage | Provide scripts to convert video footage for Davinci Resolve 14 Free (Linux \ https://github.com/tpraxl/convert-footage.git
/HansSJTU/initMyEnv | This repo is to quickly initialize the environment for Mac OSX and Linux, i \ https://github.com/HansSJTU/initMyEnv.git
/kneutron/ansitest | ansible test stuff and root/bin bash scripts for Linux / OSX admins \ https://github.com/kneutron/ansitest.git
/jamalshahverdiev/carp-ucarp-unix-linux | The python script automatically installs and configures CARP for UNIX (Free \ https://github.com/jamalshahverdiev/carp-ucarp-unix-linux.git
/binhex/arch-plex | Docker build script for Arch Linux base with Plex Media Server \ https://github.com/binhex/arch-plex.git
/sanguis/vhostx | A script for Debian based Linux to create virtual hosts under nginx \ https://github.com/sanguis/vhostx.git
/jambler-io/bitcoin-mixer | A Jambler.io partner mixer template for easy deployment on a Linux server.  \ https://github.com/jambler-io/bitcoin-mixer.git
/Mostly-BSD/void-pine64 | Build scripts for void linux images on Pine64 boards. \ https://github.com/Mostly-BSD/void-pine64.git
/lawrenceamer/zero-attacker | bash script to help you , doing many penetration testing based on kali linu \ https://github.com/lawrenceamer/zero-attacker.git
/masyamandev/Showwin-script | Linux script for quick switching active window using hot keys  \ https://github.com/masyamandev/Showwin-script.git
/BiteDasher/kesboot | Script for automating work with EFI Kernel Stub (linux) \ https://github.com/BiteDasher/kesboot.git
/tynick/PynamicDNS | Python script to perform dynamic DNS using AWS Route53 on a Raspberry Pi or \ https://github.com/tynick/PynamicDNS.git
/ralphys/unlockme | Bash script App for Ubuntu based distros - Linux Mint Cinnamon, MATE, Xfce, \ https://github.com/ralphys/unlockme.git
/regsvr32/Yes-R-G-B- | A very "useful" script makes your linux shell have R!G!B! \ https://github.com/regsvr32/Yes-R-G-B-.git
/dunkelstern/symbolicate_crash | Ruby script to symbolicate Apple crash reports on a linux or osx server, ne \ https://github.com/dunkelstern/symbolicate_crash.git
/mushketer888/pyrtd2660i2c | Realtek RTD2660/2662 programmer for Linux through I2C bus. Based on ghent36 \ https://github.com/mushketer888/pyrtd2660i2c.git
/kevinlekiller/nvidia-control-linux | Bash script to control clock speed, memory speed, power limit, user defined \ https://github.com/kevinlekiller/nvidia-control-linux.git
/Shaped/amdpwrman | Please see the newer 'gpumgr' instead -- amdpwrman is a BASH shell script f \ https://github.com/Shaped/amdpwrman.git
/coreymwamba/bash-fuzzy-clock | bash-fuzzy-clock is a natural language or "fuzzy" clock script, written in  \ https://github.com/coreymwamba/bash-fuzzy-clock.git
/VoidSec/shopping-cart | Shopping Cart is a free, open source web application provided to allow secu \ https://github.com/VoidSec/shopping-cart.git
/Negative-py/SubScan | SubScan is a script and a Python module that is used to find directories an \ https://github.com/Negative-py/SubScan.git
/marmollie101/https-agpl |  <!DOCTYPE html> <html lang="">   <head>     <meta charset="utf-8" />       \ https://github.com/marmollie101/https-agpl.fsf.org-.git
/foundriesio/lmp-manifest | Repo manifest and scripts for Linux microPlatform. \ https://github.com/foundriesio/lmp-manifest.git
/YangMame/Gentoo-Installer | Gentoo-Linux-Install-Script \ https://github.com/YangMame/Gentoo-Installer.git
/lithid/Scripts | A collection scripts for android and linux \ https://github.com/lithid/Scripts.git
/michaeljclark/musl-riscv-toolchain | riscv-linux musl gcc toolchain bootstrap scripts \ https://github.com/michaeljclark/musl-riscv-toolchain.git
/jfdelnero/LinuxFromScratch | Cross compiler + Linux system build scripts. \ https://github.com/jfdelnero/LinuxFromScratch.git
/alexcherry83/net-useful | Useful Splynx, Mikrotik router OS and Linux scripts \ https://github.com/alexcherry83/net-useful.git
/gajop/batch2bash | Simple windows batch to Linux/Unix bash script converter  \ https://github.com/gajop/batch2bash.git
/ullamonster/mintCardanoNFTs | Bash scripts for use on Linux for minting Cardano NFTs \ https://github.com/ullamonster/mintCardanoNFTs.git
/ninjablocks/utilities | Linux Utilities that support the client (drivers, config script, updates, s \ https://github.com/ninjablocks/utilities.git
/codingtony/acer-brightness-linux-acpi | ACPI scripts to enable the brighness control on linux FN-Left and FN-Right  \ https://github.com/codingtony/acer-brightness-linux-acpi.git
/rwmjones/fedora-riscv-kernel | Linux kernel build scripts and patches for Fedora/RISC-V \ https://github.com/rwmjones/fedora-riscv-kernel.git
/theno/fabsetup | Yet another setup script for linux software, configurations and services. \ https://github.com/theno/fabsetup.git
/7thCore/sesrv-script | Space Engineers dedicated server script for the Linux operating system. \ https://github.com/7thCore/sesrv-script.git
/tfmagician/setup_scripts | Scripts to setup some apps for linux server. \ https://github.com/tfmagician/setup_scripts.git
/doonze/EmbyUpdate | A python script for automatically updating Emby to the latest version on Li \ https://github.com/doonze/EmbyUpdate.git
/plesk/wpchk | Scan script for a quick security check of all installed WordPress instances \ https://github.com/plesk/wpchk.git
/rubensstarke/vhost-manager | A bash script to manager Vhosts in Apache 2 linux \ https://github.com/rubensstarke/vhost-manager.git
/tlorach/USD_build | repository containing scripts to build Pixar's USD on Ubuntu Linux system \ https://github.com/tlorach/USD_build.git
/leyrer/linux-home | Scripts and configs for my Linux home \ https://github.com/leyrer/linux-home.git
/fuhry/archmaker | Scripts that generate Arch Linux VMs \ https://github.com/fuhry/archmaker.git
/gojimmypi/build_esp8266 | Bash Script to Build MicroPython for ESP8266 on Raspberry Pi or Debian Linu \ https://github.com/gojimmypi/build_esp8266.git
/sudorook/archlinux | Installation and post-installation scripts for Arch Linux. \ https://github.com/sudorook/archlinux.git
/secynic/nfsinkhole | nfsinkhole is a Python library and scripts for setting up a Linux server as \ https://github.com/secynic/nfsinkhole.git
/jlinoff/gcc-4 |   Bash script to install gcc-4.9.2 and boost-1.57 on CentOS 5.x, CentOS 6.x \ https://github.com/jlinoff/gcc-4.9.2-boost-1.57.git
/mbirth/UnixTools | A collection of scripts I use and wrote to make my everyday Linux life easi \ https://github.com/mbirth/UnixTools.git
/LinkFly/lisp-dev-tools | Linux shell scripts for automatization download, compilation and configurin \ https://github.com/LinkFly/lisp-dev-tools.git
/ShaneMilton/ProRes-conversion-bash-script | This is a script to use ffmpeg to convert videos to apple prores for use in \ https://github.com/ShaneMilton/ProRes-conversion-bash-script.git
/michaelmiklis/netatmo | Linux Bash Script for reading values from the Netatmo Weather API by only u \ https://github.com/michaelmiklis/netatmo.sh.git
/tur1ngb0x/powertop-autostart | Powertop binary script and startup service for extending battery life on la \ https://github.com/tur1ngb0x/powertop-autostart.git
/Maboroshy/Bash-note | Shell script for GNU/Linux to help you dealing with plain-text markdown not \ https://github.com/Maboroshy/Bash-note.git
/hpssjellis/google-magenta-midi-music-on-linux-hello-world | Bash install scripts to get Google Magenta working easily on a linux ubuntu \ https://github.com/hpssjellis/google-magenta-midi-music-on-linux-hello-world.git
/benschweizer/dsnapshot | The dsnapshot script provides a high-level interface to the Linux Logical V \ https://github.com/benschweizer/dsnapshot.git
/paul-reilly/WSL2-Xming-Init | Powershell script to set IP addresses in Windows and Linux for Xming and WS \ https://github.com/paul-reilly/WSL2-Xming-Init.git
/hiulit/cross-compile-godot-raspberry-pi | A script to easily cross-compile Godot binaries for the Raspberry Pi from L \ https://github.com/hiulit/cross-compile-godot-raspberry-pi.git
/owl4ce/linucc224 | :syringe: Easily patch your own Linux simplefb. This script needs to be ref \ https://github.com/owl4ce/linucc224.git
/cristianovitorino/figwrapper | Figwrapper is a script that fully integrates the Figma design tool (web ver \ https://github.com/cristianovitorino/figwrapper.git
/techarkit/nagios | Linux Monitoring Script \ https://github.com/techarkit/nagios.git
/nicolargo/loicinstaller | This script installs, updates and runs LOIC on Linux. \ https://github.com/nicolargo/loicinstaller.git
/Hood3dRob1n/Inf0rm3r | Inf0rm3r - A Linux Info & Ssytem Enumeration Script \ https://github.com/Hood3dRob1n/Inf0rm3r.git
/diffpy/diffpy-release | Scripts for building binary release bundle for Linux and Mac. \ https://github.com/diffpy/diffpy-release.git
/servo/osmesa-src | OSMesa source code and cargo build scripts to compile on Linux and Mac \ https://github.com/servo/osmesa-src.git
/williamhallatt/qtscripts | Qt Related Linux Scripts \ https://github.com/williamhallatt/qtscripts.git
/MichaIng/hacks | Personal Linux system configs, scripts and hacks \ https://github.com/MichaIng/hacks.git
/dperelman/gamepad-util | Scripts to help setting up gamepads on Linux \ https://github.com/dperelman/gamepad-util.git
/wertarbyte/ifupdown-scripts | several useful ifupdown-scripts for the Debian GNU/Linux distribution \ https://github.com/wertarbyte/ifupdown-scripts.git
/arcolinuxd/arco-gnome | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-gnome.git
/Z3R0th-13/LinEnum | Simple bash script to enumerate Linux machines \ https://github.com/Z3R0th-13/LinEnum.git
/romanornr/Linux-Security | Linux Security script \ https://github.com/romanornr/Linux-Security.git
/jonhoo/cloud-arch | Script for generating Arch Linux cloud images \ https://github.com/jonhoo/cloud-arch.git
/binhex/arch-deluge | Docker build script for Arch Linux base with Deluge \ https://github.com/binhex/arch-deluge.git
/ilbuonmarcio/lydia | a featureful, yet simple Arch Linux install script \ https://github.com/ilbuonmarcio/lydia.git
/mmacia/dotfiles | My Linux dot files configuration and other handy scripts \ https://github.com/mmacia/dotfiles.git
/henrychen95/AWS-AMI-Auto-Backup | Shell Script to auto make AMI backup and delete old backups for Amazon Linu \ https://github.com/henrychen95/AWS-AMI-Auto-Backup.git
/lenisko/k400_plus | Logitech K400 Plus - Linux helper scripts \ https://github.com/lenisko/k400_plus.git
/fortinet-solutions-cse/testbeds | Linux scripts to quickly boot up Fortinet virtual devices on KVM \ https://github.com/fortinet-solutions-cse/testbeds.git
/nficano/dotfiles | My MacOS/Linux dotfiles and various utility shell scripts. \ https://github.com/nficano/dotfiles.git
/gabrielesvelto/symbol-scrapers | A bunch of scripts to scrape symbols from Linux distributions \ https://github.com/gabrielesvelto/symbol-scrapers.git
/vigeek/ddoSutil | ddoSutil is a series of Linux scripts intended to help deal with various dd \ https://github.com/vigeek/ddoSutil.git
/rc-chuah/Kali-Nethunter-In-Termux | This is a script by which you can install Kali nethunter (Kali Linux) in yo \ https://github.com/rc-chuah/Kali-Nethunter-In-Termux.git
/binhex/arch-krusader | Docker build script for Arch Linux base with Krusader \ https://github.com/binhex/arch-krusader.git
/Gr1mmie/loogle | A quick script to install google on linux \ https://github.com/Gr1mmie/loogle.git
/msperlin/UBUNTU-Fresh-Install | Bash script for R users in Linux Mint and Ubuntu \ https://github.com/msperlin/UBUNTU-Fresh-Install.git
/NLKNguyen/alpine-shellcheck | Docker image for Alpine Linux with latest ShellCheck, a static analysis too \ https://github.com/NLKNguyen/alpine-shellcheck.git
/jspw/Cleaner | A python script to clean unnecessary and caches in Debian based Linux OS  \ https://github.com/jspw/Cleaner.git
/S0AndS0/Debian-Kit-Mods | Scripts and methods of modifying ARM Linux distributions made available by  \ https://github.com/S0AndS0/Debian-Kit-Mods.git
/saminnet/spotify-adblock-script | 🦞 Simple shell script to modify host file in linux/mac for blocking Spotify \ https://github.com/saminnet/spotify-adblock-script.git
/abhra0897/gowin-easy-linux | Easy setup of GoWin FPGA SDK on Linux. A single script (main_launcher) auto \ https://github.com/abhra0897/gowin-easy-linux.git
/IGEL-Community/IGEL-Custom-Partitions | IGEL OS is built on a highly secure Linux distribution. Properly deployed,  \ https://github.com/IGEL-Community/IGEL-Custom-Partitions.git
/binhex/arch-jackett | Docker build script for Arch Linux base with Jackett \ https://github.com/binhex/arch-jackett.git
/Depau/wsl-startup | Scripts to set up a "normal" GNU/Linux GUI environment on WSL \ https://github.com/Depau/wsl-startup.git
/rileyrg/linux-init | Emacs org-file based suite of Linux config files and scripts \ https://github.com/rileyrg/linux-init.git
/joshbrunty/SysScout | SysScout is a fully encapsulated script that quickly and easily pulls local \ https://github.com/joshbrunty/SysScout.git
/giuliojiang/AMD-Linux-Power-Management | Some simple scripts to set power levels and monitor GPU frequencies under l \ https://github.com/giuliojiang/AMD-Linux-Power-Management.git
/slacker007/Bro-NetworkSecurityMonitoring | collection of bro and bash scripts that when run from the same directory on \ https://github.com/slacker007/Bro-NetworkSecurityMonitoring.git
/Medo2l7alabe/VJS | The script specializes in collecting information about sites, protocols and \ https://github.com/Medo2l7alabe/VJS.git
/welcheb/pptx2txt | command line bash shell script to convert PowerPoint pptx format to text on \ https://github.com/welcheb/pptx2txt.sh.git
/owl4ce/winebox | :satellite: Easily install `winbox` on GNU/Linux. This script needs to be r \ https://github.com/owl4ce/winebox.git
/patrickcurl/ngtool | NG Tool is Bash Script to allow create,  delete, enable all, disable all, e \ https://github.com/patrickcurl/ngtool.git
/jaityron/new-pac-wiki | <!DOCTYPE html> <html lang="en">   <head>     <meta charset="utf-8">   <lin \ https://github.com/jaityron/new-pac-wiki.git
/kiyoya/gentoo-install-scripts | (Obsolete) Scripts to install Gentoo Linux \ https://github.com/kiyoya/gentoo-install-scripts.git
/binhex/arch-pycharm | Docker build script for Arch Linux base with PyCharm \ https://github.com/binhex/arch-pycharm.git
/althea-net/installer | Installation scripts for exits and clients on Linux \ https://github.com/althea-net/installer.git
/radsec/AmazonLinux-2-CIS | Ansible Amazon Linux 2 - CIS Benchmark Hardening Script \ https://github.com/radsec/AmazonLinux-2-CIS.git
/kivisade/kernel-purge | A simple bash script to remove (purge) unused linux kernels \ https://github.com/kivisade/kernel-purge.git
/ewancoder/eal | Ewancoder Arch Linux Install script \ https://github.com/ewancoder/eal.git
/BlackArch/bactl | Script to control BlackArch Linux related environment. \ https://github.com/BlackArch/bactl.git
/HankB/Linux_ZFS_Root | Commands/script to install Linux on ZFS root \ https://github.com/HankB/Linux_ZFS_Root.git
/buke/autoreload | Autoreload is small script to reload process. Use inotify on linux.  \ https://github.com/buke/autoreload.git
/wnayes/bose-scripts | Small scripts to control a networked Bose audio system on Linux. \ https://github.com/wnayes/bose-scripts.git
/binhex/arch-minidlna | Docker build script for Arch Linux base with MiniDLNA \ https://github.com/binhex/arch-minidlna.git
/kannan-raveendran-nair/prpc-pe-linux | Installation script for PEGA Personal Edition for Linux \ https://github.com/kannan-raveendran-nair/prpc-pe-linux.git
/arcolinuxd/arco-dwm | All scripts necessary to have an awesome deskop experience on ArcoLinux or  \ https://github.com/arcolinuxd/arco-dwm.git
/leomao/arch-bootstrap | scripts for bootstrapping an Arch Linux system \ https://github.com/leomao/arch-bootstrap.git
/eblazquez/fakelib | Simple tool/script for generating malicious Linux shared libraries \ https://github.com/eblazquez/fakelib.sh.git
/mariuz/kernelcompile | Python Compile Scripts for Stable / Mainline / Longterm Linux Kernels on an \ https://github.com/mariuz/kernelcompile.git
/justsml/system-setup-tools | My common Linux server and workstation setup steps in handy script form \ https://github.com/justsml/system-setup-tools.git
/klockeph/grep-linux-patch-statistics | Scripts to show tool impact on recent linux kernel development \ https://github.com/klockeph/grep-linux-patch-statistics.git
/Krofek/MySpotIsHot | WiFi access point setup scripts for linux and windows \ https://github.com/Krofek/MySpotIsHot.git
/droberin/remarkable2-tools | reMarkable 2 CLI Scripts for GNU/Linux users \ https://github.com/droberin/remarkable2-tools.git
/jcormier/TI_BLE_CC2650_Linux_Convert | Conversion script to allow building CC2650 code on linux \ https://github.com/jcormier/TI_BLE_CC2650_Linux_Convert.git
/frankuit/zfs-arcstats-bash | Various bash scripts and tools for ZFS on linux (Debian tested) \ https://github.com/frankuit/zfs-arcstats-bash.git
/ktoso/g73-keyboard-backlight-sh | A super simple script to enable the G73 notebook series keyboard backlight  \ https://github.com/ktoso/g73-keyboard-backlight-sh.git
/suikan4github/kaiten-yaki | Ubuntu / Void Linux Install script for Full Disk Encryption \ https://github.com/suikan4github/kaiten-yaki.git
/fat-tire/resolve | Container scripts to build and run DaVinci Resolve [Studio] for Linux using \ https://github.com/fat-tire/resolve.git
/npyl/runnix | Run linux executables or scripts from withing Windows without opening Bash \ https://github.com/npyl/runnix.git
/cankush625/CLI-To-Whatsapp | Script to send the CLI output of the linux command to the whatsapp contact  \ https://github.com/cankush625/CLI-To-Whatsapp.git
/abdes/arch-i3-polybar-dotfiles-autosetup | My Arch Linux development environment using i3wm and polybar with the compl \ https://github.com/abdes/arch-i3-polybar-dotfiles-autosetup.git
/fceschmidt/bullshit-arch | The Plan9 bullshit script on Arch Linux \ https://github.com/fceschmidt/bullshit-arch.git
/am6539/backdoor-apk-master | backdoor-apk is a shell script that simplifies the process of adding a back \ https://github.com/am6539/backdoor-apk-master.git
/Phifo/yaourt | A very simple bash script that install yaourt for Arch Linux. \ https://github.com/Phifo/yaourt.git
/zhouxingtuan/gammaServer | A server framework with multi threads. Base on epoll and provides socket,ht \ https://github.com/zhouxingtuan/gammaServer.git
/PlankCipher/dotfiles | dotfiles for my Arch Linux rice with full installation script \ https://github.com/PlankCipher/dotfiles.git
/Synlvejo/buaalogin | a script for linux system to login to visit Internet \ https://github.com/Synlvejo/buaalogin.git
/alexeevdv/dename | Bash script to detect linux desktop environment name and version \ https://github.com/alexeevdv/dename.git
/yavincl/nvoc | Nvidia overclocking script for Linux (useful for autostarting!) \ https://github.com/yavincl/nvoc.git
/alecthegeek/CCHS_Raspian_for_IoT | Scripts and Instructions to get Raspian Linux updated with tools for Intern \ https://github.com/alecthegeek/CCHS_Raspian_for_IoT.git
/k4yt3x/linum | Linum is yet another Linux enumeration script written in shell script. \ https://github.com/k4yt3x/linum.git
/AlphaLawless/arch-base-install |  Arch Linux installation guide and packages-scripts for Desktop Environmen \ https://github.com/AlphaLawless/arch-base-install.git
/thibmaek/linux-confs |  Some (personal) linux configs & scripts for systemd, bash, nginx, etc. Us \ https://github.com/thibmaek/linux-confs.git
/Desbeers/Make-Books | Scripts to convert Markdown to PDF and ePub books with Pandoc. Command line \ https://github.com/Desbeers/Make-Books.git
/ominitay/shellsaber | !! MAINTENANCE MODE !! ShellSaber is a mod manager written in POSIX-complia \ https://github.com/ominitay/shellsaber.git
/MarcoGomezGT/desktop-manager-ahk | An AutoHotKey script to emulate Linux's hot corners and virtual desktop man \ https://github.com/MarcoGomezGT/desktop-manager-ahk.git
/KeithIMyers/Crostini-Machine-Learning | Installation script to automate the process of installing several machine l \ https://github.com/KeithIMyers/Crostini-Machine-Learning.git
/puneetsl/Romadeva | It is a simple tool to convert roman script to indic(Devanagari) script. As \ https://github.com/puneetsl/Romadeva.git
/thor27/media-folder-sync | For improved html5 support, most servers needs to keep 2 or more copys of y \ https://github.com/thor27/media-folder-sync.git
/SlaSerX/TorrentFinder | TorrentFinder.sh is a "simple" bash script that uses wget, grep, etc. to li \ https://github.com/SlaSerX/TorrentFinder.git
/emzec/Best-Mantis-theme-updated | MantisBT is a web based bug tracking system that was first made available t \ https://github.com/emzec/Best-Mantis-theme-updated.git
/N30nHaCkZ/linux |   Linux kernel release 3.x <http://kernel.org/>  These are the release note \ https://github.com/N30nHaCkZ/linux.git
/swati1024/torrents | Skip to content   Search… All gists Back to GitHub Sign in Sign up Instantl \ https://github.com/swati1024/torrents.git
/orangepi-xunlong/scripts | The scripts for Orange Pi Linux SDK \ https://github.com/orangepi-xunlong/scripts.git
