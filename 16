/public-apis/public-apis.git | A collective list of free APIs \ https://github.com/public-apis/public-apis.git
/puppeteer/puppeteer.git | Headless Chrome Node.js API \ https://github.com/puppeteer/puppeteer.git
/typicode/json-server.git | Get a full fake REST API with zero coding in less than 30 seconds (seriousl.. \ https://github.com/typicode/json-server.git
/strapi/strapi.git |  Open source Node.js Headless CMS to easily build customisable APIs \ https://github.com/strapi/strapi.git
/ageitgey/face_recognition.git | The world's simplest facial recognition api for Python and the command line \ https://github.com/ageitgey/face_recognition.git
/hoppscotch/hoppscotch.git |  Open source API development ecosystem - https://hoppscotch.io \ https://github.com/hoppscotch/hoppscotch.git
/fighting41love/funNLP.git | //.. \ https://github.com/fighting41love/funNLP.git
/iamkun/dayjs.git |  Day.js 2kB immutable date-time library alternative to Moment.js with the .. \ https://github.com/iamkun/dayjs.git
/microsoft/playwright.git | Playwright is a framework for Web Testing and Automation. It allows testing.. \ https://github.com/microsoft/playwright.git
/slatedocs/slate.git | Beautiful static documentation for your API \ https://github.com/slatedocs/slate.git
/hashicorp/terraform.git | Terraform enables you to safely and predictably create, change, and improve.. \ https://github.com/hashicorp/terraform.git
/Kong/kong.git |  The Cloud-Native API Gateway  \ https://github.com/Kong/kong.git
/preactjs/preact.git |  Fast 3kB React alternative with the same modern API. Components & Virtua.. \ https://github.com/preactjs/preact.git
/freeCodeCamp/devdocs.git | API Documentation Browser \ https://github.com/freeCodeCamp/devdocs.git
/nocodb/nocodb.git |    Open Source Airtable Alternative - turns any MySQL, Postgres, SQLite .. \ https://github.com/nocodb/nocodb.git
/hasura/graphql-engine.git | Blazing fast, instant realtime GraphQL APIs on your DB with fine grained ac.. \ https://github.com/hasura/graphql-engine.git
/xkcoding/spring-boot-demo.git |  actuator()admin()logback()aopLog(AOPweb).. \ https://github.com/xkcoding/spring-boot-demo.git
/ccxt/ccxt.git | A JavaScript / Python / PHP cryptocurrency trading API with support for mor.. \ https://github.com/ccxt/ccxt.git
/Binaryify/NeteaseCloudMusicApi.git |  Node.js API service \ https://github.com/Binaryify/NeteaseCloudMusicApi.git
/littlecodersh/ItChat.git | A complete and graceful API for Wechat.  \ https://github.com/littlecodersh/ItChat.git
/swagger-api/swagger-ui.git | Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamic.. \ https://github.com/swagger-api/swagger-ui.git
/httpie/httpie.git | As easy as /aitch-tee-tee-pie/  Modern, user-friendly command-line HTTP cl.. \ https://github.com/httpie/httpie.git
/Kong/insomnia.git | The open-source, cross-platform API client for GraphQL, REST, and gRPC. \ https://github.com/Kong/insomnia.git
/ray-project/ray.git | An open source framework that provides a simple, universal API for building.. \ https://github.com/ray-project/ray.git
/localForage/localForage.git |  Offline storage, improved. Wraps IndexedDB, WebSQL, or localStorage using.. \ https://github.com/localForage/localForage.git
/necolas/react-native-web.git | React Native Components and APIs for the Web \ https://github.com/necolas/react-native-web.git
/marmelab/react-admin.git | A frontend Framework for building B2B applications running in the browser o.. \ https://github.com/marmelab/react-admin.git
/parse-community/parse-server.git | API server module for Node/Express \ https://github.com/parse-community/parse-server.git
/js-cookie/js-cookie.git | A simple, lightweight JavaScript API for handling browser cookies \ https://github.com/js-cookie/js-cookie.git
/discordjs/discord.js.git | A powerful JavaScript library for interacting with the Discord API \ https://github.com/discordjs/discord.js.git
/afollestad/material-dialogs.git |  A beautiful, fluid, and extensible dialogs API for Kotlin & Android. \ https://github.com/afollestad/material-dialogs.git
/microsoft/api-guidelines.git | Microsoft REST API Guidelines \ https://github.com/microsoft/api-guidelines.git
/redisson/redisson.git | Redisson - Redis Java client with features of In-Memory Data Grid. Over 50 .. \ https://github.com/redisson/redisson.git
/PostgREST/postgrest.git | REST API for any Postgres database \ https://github.com/PostgREST/postgrest.git
/n0shake/Public-APIs.git |  A public list of APIs from round the web. \ https://github.com/n0shake/Public-APIs.git
/appsmithorg/appsmith.git | Low code project to build admin panels, internal tools, and dashboards. Int.. \ https://github.com/appsmithorg/appsmith.git
/Redocly/redoc.git |   OpenAPI/Swagger-generated API Reference Documentation \ https://github.com/Redocly/redoc.git
/shieldfy/API-Security-Checklist.git | Checklist of the most important security countermeasures when designing, te.. \ https://github.com/shieldfy/API-Security-Checklist.git
/directus/directus.git | The Modern Data Stack   Directus is an instant REST+GraphQL API and intui.. \ https://github.com/directus/directus.git
/dotnet/roslyn.git | The Roslyn .NET compiler provides C# and Visual Basic languages with rich c.. \ https://github.com/dotnet/roslyn.git
/briannesbitt/Carbon.git | A simple PHP API extension for DateTime. \ https://github.com/briannesbitt/Carbon.git
/yabwe/medium-editor.git | Medium.com WYSIWYG editor clone. Uses contenteditable API to implement a ri.. \ https://github.com/yabwe/medium-editor.git
/limetext/lime.git | Open source API-compatible alternative to the text editor Sublime Text \ https://github.com/limetext/lime.git
/madrobby/zepto.git | Zepto.js is a minimalist JavaScript library for modern browsers, with a jQu.. \ https://github.com/madrobby/zepto.git
/ChainSafe/web3.js.git | Ethereum JavaScript API \ https://github.com/ChainSafe/web3.js.git
/Ebazhanov/linkedin-skill-assessments-quizzes.git | Full reference of LinkedIn answers 2022 for skill assessments (aws-lambda, .. \ https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes.git
/chrislusf/seaweedfs.git | SeaweedFS is a fast distributed storage system for blobs, objects, files, a.. \ https://github.com/chrislusf/seaweedfs.git
/swagger-api/swagger-codegen.git | swagger-codegen contains a template-driven engine to generate documentation.. \ https://github.com/swagger-api/swagger-codegen.git
/feathersjs/feathers.git | A framework for real-time applications and REST APIs with JavaScript and Ty.. \ https://github.com/feathersjs/feathers.git
/PerfectlySoft/Perfect.git | Server-side Swift. The Perfect core toolset and framework for Swift Develop.. \ https://github.com/PerfectlySoft/Perfect.git
/interagent/http-api-design.git | HTTP API design guide extracted from work on the Heroku Platform API \ https://github.com/interagent/http-api-design.git
/youfou/wxpy.git |  /  API  \ https://github.com/youfou/wxpy.git
/Budibase/budibase.git | Budibase is a low-code platform for creating internal apps, workflows, and .. \ https://github.com/Budibase/budibase.git
/jsdoc/jsdoc.git | An API documentation generator for JavaScript. \ https://github.com/jsdoc/jsdoc.git
/gollum/gollum.git | A simple, Git-powered wiki with a sweet API and local frontend. \ https://github.com/gollum/gollum.git
/ory/hydra.git | OpenID Certified OpenID Connect and OAuth Provider written in Go - cloud n.. \ https://github.com/ory/hydra.git
/fangzesheng/free-api.git | ,api \ https://github.com/fangzesheng/free-api.git
/zhisheng17/flink-learning.git | flink learning blog. http://www.54tianzhisheng.cn/   Flink .. \ https://github.com/zhisheng17/flink-learning.git
/OpenAPITools/openapi-generator.git | OpenAPI Generator allows generation of API client libraries (SDK generation.. \ https://github.com/OpenAPITools/openapi-generator.git
/snail007/goproxy.git |   Proxy is a high performance HTTP(S) proxies, SOCKS5 proxies,WEBSOCKET, T.. \ https://github.com/snail007/goproxy.git
/visionmedia/supertest.git |  Super-agent driven library for testing node.js HTTP servers using a fluen.. \ https://github.com/visionmedia/supertest.git
/Automattic/wp-calypso.git | The JavaScript and API powered WordPress.com \ https://github.com/Automattic/wp-calypso.git
/Tencent/rapidjson.git | A fast JSON parser/generator for C++ with both SAX/DOM style API \ https://github.com/Tencent/rapidjson.git
/bkaradzic/bgfx.git | Cross-platform, graphics API agnostic, "Bring Your Own Engine/Framework" st.. \ https://github.com/bkaradzic/bgfx.git
/graphql/dataloader.git | DataLoader is a generic utility to be used as part of your application's da.. \ https://github.com/graphql/dataloader.git
/slimphp/Slim.git | Slim is a PHP micro framework that helps you quickly write simple yet power.. \ https://github.com/slimphp/Slim.git
/micro/micro.git | API first development platform \ https://github.com/micro/micro.git
/nightwatchjs/nightwatch.git | End-to-end testing framework written in Node.js and using the W3C Webdriver.. \ https://github.com/nightwatchjs/nightwatch.git
/255kb/stack-on-a-budget.git | A collection of services with great free tiers for developers on a budget. .. \ https://github.com/255kb/stack-on-a-budget.git
/browserstate/history.js.git | History.js gracefully supports the HTML5 History/State APIs (pushState, rep.. \ https://github.com/browserstate/history.js.git
/Rapptz/discord.py.git | An API wrapper for Discord written in Python. \ https://github.com/Rapptz/discord.py.git
/star7th/showdoc.git | ShowDoc is a tool greatly applicable for an IT team to share documents onli.. \ https://github.com/star7th/showdoc.git
/mockery/mockery.git | Mockery is a simple yet flexible PHP mock object framework for use in unit .. \ https://github.com/mockery/mockery.git
/mailhog/MailHog.git | Web and API based SMTP testing \ https://github.com/mailhog/MailHog.git
/ToolJet/ToolJet.git | Extensible low-code framework for building business applications. Connect t.. \ https://github.com/ToolJet/ToolJet.git
/electron/electron-api-demos.git | Explore the Electron APIs \ https://github.com/electron/electron-api-demos.git
/googleapis/google-api-nodejs-client.git | Google's officially supported Node.js client library for accessing Google A.. \ https://github.com/googleapis/google-api-nodejs-client.git
/bitwarden/server.git | The core infrastructure backend (API, database, Docker, etc). \ https://github.com/bitwarden/server.git
/JakeWharton/RxBinding.git | RxJava binding APIs for Android's UI widgets. \ https://github.com/JakeWharton/RxBinding.git
/square/javapoet.git | A Java API for generating .java source files. \ https://github.com/square/javapoet.git
/tflearn/tflearn.git | Deep learning library featuring a higher-level API for TensorFlow. \ https://github.com/tflearn/tflearn.git
/JakeWharton/timber.git | A logger with a small, extensible API which provides utility on top of Andr.. \ https://github.com/JakeWharton/timber.git
/ruby-grape/grape.git | An opinionated framework for creating REST-like APIs in Ruby. \ https://github.com/ruby-grape/grape.git
/vuestorefront/vue-storefront.git | The open-source frontend for any eCommerce. Built with a PWA and headless a.. \ https://github.com/vuestorefront/vue-storefront.git
/apidoc/apidoc.git | RESTful web API Documentation Generator. \ https://github.com/apidoc/apidoc.git
/r-spacex/SpaceX-API.git | :rocket: Open Source REST API for SpaceX launch, rocket, core, capsule, sta.. \ https://github.com/r-spacex/SpaceX-API.git
/pion/webrtc.git | Pure Go implementation of the WebRTC API \ https://github.com/pion/webrtc.git
/dingo/api.git | A RESTful API package for the Laravel and Lumen frameworks. \ https://github.com/dingo/api.git
/apache/apisix.git | The Cloud-Native API Gateway \ https://github.com/apache/apisix.git
/mswjs/msw.git | Seamless REST/GraphQL API mocking library for browser and Node.js. \ https://github.com/mswjs/msw.git
/lihengming/spring-boot-api-project-seed.git | :seedling::rocket:Spring Boot & MyBatisAPIRESTful API.. \ https://github.com/lihengming/spring-boot-api-project-seed.git
/falconry/falcon.git | The no-nonsense web data plane API and microservices framework for Python d.. \ https://github.com/falconry/falcon.git
/chakra-core/ChakraCore.git | ChakraCore is an open source Javascript engine with a C API. \ https://github.com/chakra-core/ChakraCore.git
/gitbucket/gitbucket.git | A Git platform powered by Scala with easy installation, high extensibility .. \ https://github.com/gitbucket/gitbucket.git
/microsoft/Windows-universal-samples.git | API samples for the Universal Windows Platform. \ https://github.com/microsoft/Windows-universal-samples.git
/HackerNews/API.git | Documentation and Samples for the Official HN API \ https://github.com/HackerNews/API.git
/apex/up.git | Deploy infinitely scalable serverless apps, apis, and sites in seconds to A.. \ https://github.com/apex/up.git
/google/go-github.git | Go library for accessing the GitHub v3 API \ https://github.com/google/go-github.git
/restsharp/RestSharp.git | Simple REST and HTTP API Client for .NET \ https://github.com/restsharp/RestSharp.git
/apiaryio/api-blueprint.git | API Blueprint \ https://github.com/apiaryio/api-blueprint.git
/astrit/css.gg.git | 700+ Pure CSS, SVG & Figma UI Icons Available in SVG Sprite, styled-compone.. \ https://github.com/astrit/css.gg.git
/oldboyxx/jira_clone.git | A simplified Jira clone built with React/Babel (Client), and Node/TypeScrip.. \ https://github.com/oldboyxx/jira_clone.git
/mgonto/restangular.git | AngularJS service to handle Rest API Restful Resources properly and easily \ https://github.com/mgonto/restangular.git
/SwiftGen/SwiftGen.git | The Swift code generator for your assets, storyboards, Localizable.strings,.. \ https://github.com/SwiftGen/SwiftGen.git
/TonnyL/Awesome_APIs.git | :octocat: A collection of APIs \ https://github.com/TonnyL/Awesome_APIs.git
/mediaelement/mediaelement.git | HTML5 <audio> or <video> player with support for MP4, WebM, and MP3 as well.. \ https://github.com/mediaelement/mediaelement.git
/trello/RxLifecycle.git | Lifecycle handling APIs for Android apps using RxJava \ https://github.com/trello/RxLifecycle.git
/jonobr1/two.js.git | A renderer agnostic two-dimensional drawing api for the web. \ https://github.com/jonobr1/two.js.git
/node-fetch/node-fetch.git | A light-weight module that brings the Fetch API to Node.js \ https://github.com/node-fetch/node-fetch.git
/sindresorhus/ky.git |  Tiny & elegant JavaScript HTTP client based on the browser Fetch API \ https://github.com/sindresorhus/ky.git
/PureLayout/PureLayout.git | The ultimate API for iOS & OS X Auto Layout  impressively simple, immensel.. \ https://github.com/PureLayout/PureLayout.git
/Jackett/Jackett.git | API Support for your favorite torrent trackers \ https://github.com/Jackett/Jackett.git
/api-platform/api-platform.git | Create REST and GraphQL APIs, scaffold Jamstack webapps, stream changes in .. \ https://github.com/api-platform/api-platform.git
/TykTechnologies/tyk.git | Tyk Open Source API Gateway written in Go, supporting REST, GraphQL, TCP an.. \ https://github.com/TykTechnologies/tyk.git
/SaschaWillems/Vulkan.git | Examples and demos for the new Vulkan API \ https://github.com/SaschaWillems/Vulkan.git
/vuejs/pinia.git |  Intuitive, type safe, light and flexible Store for Vue using the composit.. \ https://github.com/vuejs/pinia.git
/lecho/hellocharts-android.git | Charts/graphs library for Android compatible with API 8+, several chart typ.. \ https://github.com/lecho/hellocharts-android.git
/JakeWharton/ActionBarSherlock.git | [DEPRECATED] Action bar implementation which uses the native action bar on .. \ https://github.com/JakeWharton/ActionBarSherlock.git
/Kapeli/Dash-iOS.git | Dash gives your iPad and iPhone instant offline access to 200+ API document.. \ https://github.com/Kapeli/Dash-iOS.git
/ThreeMammals/Ocelot.git | .NET core API Gateway \ https://github.com/ThreeMammals/Ocelot.git
/ranaroussi/yfinance.git | Download market data from Yahoo! Finance's API \ https://github.com/ranaroussi/yfinance.git
/swagger-api/swagger-core.git | Examples and server integrations for generating the Swagger API Specificati.. \ https://github.com/swagger-api/swagger-core.git
/Urinx/WeixinBot.git | API \ https://github.com/Urinx/WeixinBot.git
/matthew-andrews/isomorphic-fetch.git | Isomorphic WHATWG Fetch API, for Node & Browserify \ https://github.com/matthew-andrews/isomorphic-fetch.git
/json-api/json-api.git | A specification for building JSON APIs \ https://github.com/json-api/json-api.git
/dotansimha/graphql-yoga.git |  Rewrite of a fully-featured GraphQL Server with focus on easy setup, perf.. \ https://github.com/dotansimha/graphql-yoga.git
/google/lovefield.git | Lovefield is a relational database for web apps. Written in JavaScript, wor.. \ https://github.com/google/lovefield.git
/APIs-guru/graphql-voyager.git |  Represent any GraphQL API as an interactive graph \ https://github.com/APIs-guru/graphql-voyager.git
/hugapi/hug.git | Embrace the APIs of the future. Hug aims to make developing APIs as simple .. \ https://github.com/hugapi/hug.git
/libretro/RetroArch.git | Cross-platform, sophisticated frontend for the libretro API. Licensed GPLv3.. \ https://github.com/libretro/RetroArch.git
/visgl/react-map-gl.git | React friendly API wrapper around MapboxGL JS \ https://github.com/visgl/react-map-gl.git
/LonamiWebs/Telethon.git | Pure Python 3 MTProto API Telegram client library, for bots too! \ https://github.com/LonamiWebs/Telethon.git
/pyeve/eve.git | REST API framework designed for human beings \ https://github.com/pyeve/eve.git
/sindresorhus/screenfull.git | Simple wrapper for cross-browser usage of the JavaScript Fullscreen API \ https://github.com/sindresorhus/screenfull.git
/flask-restful/flask-restful.git | Simple framework for creating REST APIs \ https://github.com/flask-restful/flask-restful.git
/fluent-ffmpeg/node-fluent-ffmpeg.git | A fluent API to FFMPEG (http://www.ffmpeg.org) \ https://github.com/fluent-ffmpeg/node-fluent-ffmpeg.git
/Uberi/speech_recognition.git | Speech recognition module for Python, supporting several engines and APIs, .. \ https://github.com/Uberi/speech_recognition.git
/apache/incubator-shenyu.git | ShenYu is High-Performance Java API Gateway. \ https://github.com/apache/incubator-shenyu.git
/yagop/node-telegram-bot-api.git | Telegram Bot API for NodeJS \ https://github.com/yagop/node-telegram-bot-api.git
/Dimillian/MovieSwiftUI.git | SwiftUI & Combine app using MovieDB API. With a custom Flux (Redux) impleme.. \ https://github.com/Dimillian/MovieSwiftUI.git
/swaggo/swag.git | Automatically generate RESTful API documentation with Swagger 2.0 for Go. \ https://github.com/swaggo/swag.git
/reactiveui/refit.git | The automatic type-safe REST library for .NET Core, Xamarin and .NET. Heavi.. \ https://github.com/reactiveui/refit.git
/burnash/gspread.git | Google Sheets Python API \ https://github.com/burnash/gspread.git
/SocialSisterYi/bilibili-API-collect.git | -API.... \ https://github.com/SocialSisterYi/bilibili-API-collect.git
/angular/flex-layout.git | Provides HTML UI layout for Angular applications; using Flexbox and a Respo.. \ https://github.com/angular/flex-layout.git
/aspnet/Mvc.git | [Archived] ASP.NET Core MVC is a model view controller framework for buildi.. \ https://github.com/aspnet/Mvc.git
/trpc/trpc.git |   End-to-end typesafe APIs made easy \ https://github.com/trpc/trpc.git
/operator-framework/operator-sdk.git | SDK for building Kubernetes applications. Provides high level APIs, useful .. \ https://github.com/operator-framework/operator-sdk.git
/googleapis/google-api-python-client.git |  The official Python client library for Google's discovery based APIs. \ https://github.com/googleapis/google-api-python-client.git
/encode/apistar.git | The Web API toolkit.  \ https://github.com/encode/apistar.git
/joeldev/JLRoutes.git | URL routing library for iOS with a simple block-based API \ https://github.com/joeldev/JLRoutes.git
/springfox/springfox.git | Automated JSON API documentation for API's built with Spring \ https://github.com/springfox/springfox.git
/docker/docker-py.git | A Python library for the Docker Engine API \ https://github.com/docker/docker-py.git
/yarolegovich/DiscreteScrollView.git | A scrollable list of items that centers the current element and provides ea.. \ https://github.com/yarolegovich/DiscreteScrollView.git
/graphql-editor/graphql-editor.git |  Visual Editor & GraphQL IDE. Draw GraphQL schemas using visual  nodes an.. \ https://github.com/graphql-editor/graphql-editor.git
/eternnoir/pyTelegramBotAPI.git | Python Telegram bot api. \ https://github.com/eternnoir/pyTelegramBotAPI.git
/chillzhuang/SpringBlade.git | SpringBlade SpringCloudSpringBoot.. \ https://github.com/chillzhuang/SpringBlade.git
/moxiecode/plupload.git | Plupload is JavaScript API for building file uploaders. It supports multipl.. \ https://github.com/moxiecode/plupload.git
/ory/kratos.git | Next-gen identity server (think Auth0, Okta, Firebase) with Ory-hardened au.. \ https://github.com/ory/kratos.git
/microsoft/vscode-extension-samples.git | Sample code illustrating the VS Code extension API. \ https://github.com/microsoft/vscode-extension-samples.git
/wechat-miniprogram/miniprogram-demo.git |  / API /  \ https://github.com/wechat-miniprogram/miniprogram-demo.git
/ponzu-cms/ponzu.git | Headless CMS with automatic JSON API. Featuring auto-HTTPS from Let's Encry.. \ https://github.com/ponzu-cms/ponzu.git
/postmanlabs/postman-app-support.git | Postman is an API platform for building and using APIs. Postman simplifies .. \ https://github.com/postmanlabs/postman-app-support.git
/agentejo/cockpit.git | Add content management functionality to any site - plug & play / headless /.. \ https://github.com/agentejo/cockpit.git
/apache/couchdb.git | Seamless multi-master syncing database with an intuitive HTTP/JSON API, des.. \ https://github.com/apache/couchdb.git
/liuwons/wxBot.git | PythonAPI \ https://github.com/liuwons/wxBot.git
/popcorn-time/popcorn-app.git | An experiment using the peerflix module of nodejs and connecting a bunch of.. \ https://github.com/popcorn-time/popcorn-app.git
/tumobi/nideshop.git | NideShop  APINode.js + ThinkJS \ https://github.com/tumobi/nideshop.git
/rails-api/rails-api.git | Rails for API only applications \ https://github.com/rails-api/rails-api.git
/PyGithub/PyGithub.git | Typed interactions with the GitHub API v3 \ https://github.com/PyGithub/PyGithub.git
/CameraKit/camerakit-android.git | Library for Android Camera 1 and 2 APIs. Massively increase stability and r.. \ https://github.com/CameraKit/camerakit-android.git
/kubernetes-sigs/kubebuilder.git | Kubebuilder - SDK for building Kubernetes APIs using CRDs \ https://github.com/kubernetes-sigs/kubebuilder.git
/Netflix/fast_jsonapi.git | No Longer Maintained - A lightning fast JSON:API serializer for Ruby Object.. \ https://github.com/Netflix/fast_jsonapi.git
/gfx-rs/gfx.git | [maintenance mode] A low-overhead Vulkan-like GPU API for Rust. \ https://github.com/gfx-rs/gfx.git
/cocodataset/cocoapi.git | COCO API - Dataset @ http://cocodataset.org/  \ https://github.com/cocodataset/cocoapi.git
/deployd/deployd.git | a toolkit for building realtime APIs \ https://github.com/deployd/deployd.git
/traex/RippleEffect.git | Implementation of Ripple effect from Material Design for Android API 9+ \ https://github.com/traex/RippleEffect.git
/Soundnode/soundnode-app.git | Soundnode App is the Soundcloud for desktop. Built with Electron, Angular.j.. \ https://github.com/Soundnode/soundnode-app.git
/nickoneill/PermissionScope.git | Intelligent iOS permissions UI and unified API \ https://github.com/nickoneill/PermissionScope.git
/42wim/matterbridge.git | bridge between mattermost, IRC, gitter, xmpp, slack, discord, telegram, roc.. \ https://github.com/42wim/matterbridge.git
/aisuhua/restful-api-design-references.git | RESTful API REST \ https://github.com/aisuhua/restful-api-design-references.git
/public-api-lists/public-api-lists.git | A collective list of free APIs for use in software and web development  (C.. \ https://github.com/public-api-lists/public-api-lists.git
/software-mansion/react-native-gesture-handler.git | Declarative API exposing platform native touch and gesture system to React .. \ https://github.com/software-mansion/react-native-gesture-handler.git
/scottschiller/SoundManager2.git | A JavaScript Sound API supporting MP3, MPEG4 and HTML5 audio + RTMP, provid.. \ https://github.com/scottschiller/SoundManager2.git
/gfx-rs/wgpu.git | Safe and portable GPU abstraction in Rust, implementing WebGPU API. \ https://github.com/gfx-rs/wgpu.git
/Kaggle/kaggle-api.git | Official Kaggle API \ https://github.com/Kaggle/kaggle-api.git
/goadesign/goa.git | Design-based APIs and microservices in Go \ https://github.com/goadesign/goa.git
/danielgtaylor/aglio.git | An API Blueprint renderer with theme support that outputs static HTML \ https://github.com/danielgtaylor/aglio.git
/youlookwhat/CloudReader.git |   UIAndroid ApiRetrofit2 + RxJava2 + Room + MVVM-databin.. \ https://github.com/youlookwhat/CloudReader.git
/sunshinejr/SwiftyUserDefaults.git | Modern Swift API for NSUserDefaults \ https://github.com/sunshinejr/SwiftyUserDefaults.git
/googleapis/googleapis.git | Public interface definitions of Google APIs. \ https://github.com/googleapis/googleapis.git
/MrSwitch/hello.js.git | A Javascript RESTFUL API library for connecting with OAuth2 services, such .. \ https://github.com/MrSwitch/hello.js.git
/santiq/bulletproof-nodejs.git | Implementation of a bulletproof node.js API  \ https://github.com/santiq/bulletproof-nodejs.git
/cashapp/sqldelight.git | SQLDelight - Generates typesafe Kotlin APIs from SQL \ https://github.com/cashapp/sqldelight.git
/BrasilAPI/BrasilAPI.git | Vamos transformar o Brasil em uma API? \ https://github.com/BrasilAPI/BrasilAPI.git
/dilame/instagram-private-api.git | NodeJS Instagram private API SDK. Written in TypeScript. \ https://github.com/dilame/instagram-private-api.git
/keithwhor/nodal.git | API Services Made Easy With Node.js \ https://github.com/keithwhor/nodal.git
/dherault/serverless-offline.git | Emulate AWS  and API Gateway locally when developing your Serverless proje.. \ https://github.com/dherault/serverless-offline.git
/JakeWharton/NineOldAndroids.git | [DEPRECATED] Android library for using the Honeycomb animation API on all v.. \ https://github.com/JakeWharton/NineOldAndroids.git
/sammchardy/python-binance.git | Binance Exchange API python implementation for automated trading \ https://github.com/sammchardy/python-binance.git
/discord/discord-api-docs.git | Official Discord API Documentation \ https://github.com/discord/discord-api-docs.git
/sferik/twitter.git | A Ruby interface to the Twitter API. \ https://github.com/sferik/twitter.git
/unform/unform.git | Performance-focused API for React forms  \ https://github.com/unform/unform.git
/23/resumable.js.git | A JavaScript library for providing multiple simultaneous, stable, fault-tol.. \ https://github.com/23/resumable.js.git
/TonyChen56/WeChatRobot.git | PC ApiWeChatApis.dll pythonapi   \ https://github.com/TonyChen56/WeChatRobot.git
/vendia/serverless-express.git | Run Node.js web applications and APIs using existing application frameworks.. \ https://github.com/vendia/serverless-express.git
/youtube/api-samples.git | Code samples for YouTube APIs, including the YouTube Data API, YouTube Anal.. \ https://github.com/youtube/api-samples.git
/domaindrivendev/Swashbuckle.AspNetCore.git | Swagger tools for documenting API's built on ASP.NET Core \ https://github.com/domaindrivendev/Swashbuckle.AspNetCore.git
/delta-io/delta.git | An open-source storage framework that enables building a Lakehouse architec.. \ https://github.com/delta-io/delta.git
/wuxingsanren/wildcat-vip-account.git |  - SVIPVIP.. \ https://github.com/wuxingsanren/wildcat-vip-account.git
/sitespeedio/sitespeed.io.git | Sitespeed.io is an open source tool that helps you monitor, analyze and opt.. \ https://github.com/sitespeedio/sitespeed.io.git
/cglib/cglib.git | cglib - Byte Code Generation Library is high level API to generate and tran.. \ https://github.com/cglib/cglib.git
/OscarGodson/EpicEditor.git | EpicEditor is an embeddable JavaScript Markdown editor with split fullscree.. \ https://github.com/OscarGodson/EpicEditor.git
/ttezel/twit.git | Twitter API Client for node (REST & Streaming API) \ https://github.com/ttezel/twit.git
/yajra/laravel-datatables.git | jQuery DataTables API for Laravel 4|5|6|7|8|9 \ https://github.com/yajra/laravel-datatables.git
/amdjs/amdjs-api.git | Houses the Asynchronous Module Definition API \ https://github.com/amdjs/amdjs-api.git
/CreateJS/SoundJS.git | A Javascript library for working with Audio. It provides a consistent API f.. \ https://github.com/CreateJS/SoundJS.git
/ohld/igbot.git |  Free scripts, bots and Python API wrapper. Get free followers with our au.. \ https://github.com/ohld/igbot.git
/errbit/errbit.git | The open source error catcher that's Airbrake API compliant \ https://github.com/errbit/errbit.git
/abraham/twitteroauth.git | The most popular PHP library for use with the Twitter OAuth REST API. \ https://github.com/abraham/twitteroauth.git
/loopbackio/loopback-next.git | LoopBack makes it easy to build modern API applications that require comple.. \ https://github.com/loopbackio/loopback-next.git
/redpanda-data/redpanda.git | Redpanda is a streaming data platform for developers. Kafka API compatible... \ https://github.com/redpanda-data/redpanda.git
/fuse-box/fuse-box.git | A blazing fast js bundler/loader with a comprehensive API :fire: \ https://github.com/fuse-box/fuse-box.git
/JosephusPaye/Keen-UI.git | A lightweight Vue.js UI library with a simple API, inspired by Google's Mat.. \ https://github.com/JosephusPaye/Keen-UI.git
/assemble/assemble.git | Get the rocks out of your socks! Assemble makes you fast at web development.. \ https://github.com/assemble/assemble.git
/marmelab/ng-admin.git | Add an AngularJS admin GUI to any RESTful API \ https://github.com/marmelab/ng-admin.git
/WP-API/WP-API.git | The WP REST API has been merged into WordPress core. Please do not create i.. \ https://github.com/WP-API/WP-API.git
/alibaba/coobjc.git | coobjc provides coroutine support for Objective-C and Swift. We added await.. \ https://github.com/alibaba/coobjc.git
/hagopj13/node-express-boilerplate.git | A boilerplate for building production-ready RESTful APIs using Node.js, Exp.. \ https://github.com/hagopj13/node-express-boilerplate.git
/wandb/client.git |  A tool for visualizing and tracking your machine learning experiments. Th.. \ https://github.com/wandb/client.git
/slack-go/slack.git | Slack API in Go - community-maintained fork created by the original author,.. \ https://github.com/slack-go/slack.git
/vuejs/composition-api.git | Composition API plugin for Vue 2 \ https://github.com/vuejs/composition-api.git
/mattdiamond/Recorderjs.git | A plugin for recording/exporting the output of Web Audio API nodes \ https://github.com/mattdiamond/Recorderjs.git
/plamere/spotipy.git | A light weight Python library for the Spotify Web API \ https://github.com/plamere/spotipy.git
/wang-xinyu/tensorrtx.git | Implementation of popular deep learning networks with TensorRT network defi.. \ https://github.com/wang-xinyu/tensorrtx.git
/mockoon/mockoon.git | Mockoon is the easiest and quickest way to run mock APIs locally. No remote.. \ https://github.com/mockoon/mockoon.git
/apiaryio/dredd.git | Language-agnostic HTTP API Testing Tool \ https://github.com/apiaryio/dredd.git
/joewalnes/reconnecting-websocket.git | A small decorator for the JavaScript WebSocket API that automatically recon.. \ https://github.com/joewalnes/reconnecting-websocket.git
/django-tastypie/django-tastypie.git | Creating delicious APIs for Django apps since 2010. \ https://github.com/django-tastypie/django-tastypie.git
/emissary-ingress/emissary.git | open source Kubernetes-native API gateway for microservices built on the En.. \ https://github.com/emissary-ingress/emissary.git
/jaredpalmer/react-fns.git | Browser API's turned into declarative React components and HoC's \ https://github.com/jaredpalmer/react-fns.git
/LWJGL/lwjgl3.git | LWJGL is a Java library that enables cross-platform access to popular nativ.. \ https://github.com/LWJGL/lwjgl3.git
/claudiajs/claudia.git | Deploy Node.js projects to AWS Lambda and API Gateway easily \ https://github.com/claudiajs/claudia.git
/pantsel/konga.git | More than just another GUI to Kong Admin API \ https://github.com/pantsel/konga.git
/APIs-guru/graphql-apis.git |  A collective list of public GraphQL APIs \ https://github.com/APIs-guru/graphql-apis.git
/progrium/macdriver.git | Native Mac APIs for Go \ https://github.com/progrium/macdriver.git
/go-telegram-bot-api/telegram-bot-api.git | Golang bindings for the Telegram Bot API \ https://github.com/go-telegram-bot-api/telegram-bot-api.git
/binance-exchange/binance-official-api-docs.git | Official Documentation for the Binance APIs and Streams \ https://github.com/binance-exchange/binance-official-api-docs.git
/web-animations/web-animations-js.git | JavaScript implementation of the Web Animations API \ https://github.com/web-animations/web-animations-js.git
/RomelTorres/alpha_vantage.git | A python wrapper for Alpha Vantage API for financial data. \ https://github.com/RomelTorres/alpha_vantage.git
/octokit/octokit.rb.git | Ruby toolkit for the GitHub API \ https://github.com/octokit/octokit.rb.git
/scrapinghub/splash.git | Lightweight, scriptable browser as a service with an HTTP API \ https://github.com/scrapinghub/splash.git
/jamalex/notion-py.git | Unofficial Python API client for Notion.so \ https://github.com/jamalex/notion-py.git
/android/camera-samples.git | Multiple samples showing the best practices in camera APIs on Android. \ https://github.com/android/camera-samples.git
/gotenberg/gotenberg.git | A Docker-powered stateless API for PDF files. \ https://github.com/gotenberg/gotenberg.git
/googlemaps/google-maps-services-python.git | Python client library for Google Maps API Web Services \ https://github.com/googlemaps/google-maps-services-python.git
/apocas/dockerode.git | Docker + Node = Dockerode (Node.js module for Docker's Remote API) \ https://github.com/apocas/dockerode.git
/nylas/sync-engine.git | :incoming_envelope: IMAP/SMTP sync system with modern APIs \ https://github.com/nylas/sync-engine.git
/kriasoft/relay-starter-kit.git |   Monorepo template (seed project) pre-configured with GraphQL API, Postgr.. \ https://github.com/kriasoft/relay-starter-kit.git
/ant0ine/go-json-rest.git | A quick and easy way to setup a RESTful JSON API \ https://github.com/ant0ine/go-json-rest.git
/KartikTalwar/gmail.js.git | Gmail JavaScript API \ https://github.com/KartikTalwar/gmail.js.git
/alphacep/vosk-api.git | Offline speech recognition API for Android, iOS, Raspberry Pi and servers w.. \ https://github.com/alphacep/vosk-api.git
/jinfagang/tensorflow_poems.git | tensorflow1.10 apistar \ https://github.com/jinfagang/tensorflow_poems.git
/knowm/XChange.git | XChange is a Java library providing a streamlined API for interacting with .. \ https://github.com/knowm/XChange.git
/microsoft/Windows-classic-samples.git | This repo contains samples that demonstrate the API used in Windows classic.. \ https://github.com/microsoft/Windows-classic-samples.git
/github-tools/github.git | A higher-level wrapper around the Github API. Intended for the browser. \ https://github.com/github-tools/github.git
/microsoft/Detours.git | Detours is a software package for monitoring and instrumenting API calls on.. \ https://github.com/microsoft/Detours.git
/taofed/react-web.git | A framework for building web apps with React Native compatible API. \ https://github.com/taofed/react-web.git
/developit/redaxios.git | The Axios API, as an 800 byte Fetch wrapper. \ https://github.com/developit/redaxios.git
/solo-io/gloo.git | The Feature-rich, Kubernetes-native, Next-Generation API Gateway Built on E.. \ https://github.com/solo-io/gloo.git
/xinliangnote/go-gin-api.git |  Gin  API  cors jwt zap.. \ https://github.com/xinliangnote/go-gin-api.git
/InfyOmLabs/laravel-generator.git | InfyOm Laravel Generator - API, Scaffold, Tests, CRUD Laravel Generator \ https://github.com/InfyOmLabs/laravel-generator.git
/mifi/editly.git | Slick, declarative command line video editing & API \ https://github.com/mifi/editly.git
/twitter/scalding.git | A Scala API for Cascading \ https://github.com/twitter/scalding.git
/swannodette/mori.git | ClojureScript's persistent data structures and supporting API from the comf.. \ https://github.com/swannodette/mori.git
/KhronosGroup/MoltenVK.git | MoltenVK is a Vulkan Portability implementation. It layers a subset of the .. \ https://github.com/KhronosGroup/MoltenVK.git
/shu223/iOS-10-Sampler.git | Code examples for new APIs of iOS 10. \ https://github.com/shu223/iOS-10-Sampler.git
/fogleman/gg.git | Go Graphics - 2D rendering in Go with a simple API. \ https://github.com/fogleman/gg.git
/up9inc/mizu.git | API traffic viewer for Kubernetes enabling you to view all API communicatio.. \ https://github.com/up9inc/mizu.git
/artemnovichkov/iOS-11-by-Examples.git |  Examples of new iOS 11 APIs \ https://github.com/artemnovichkov/iOS-11-by-Examples.git
/opentracing/opentracing-go.git | OpenTracing API for Go.  This library is DEPRECATED! https://github.com/op.. \ https://github.com/opentracing/opentracing-go.git
/Hanson/vbot.git | The best wechat robot base on web api! \ https://github.com/Hanson/vbot.git
/bear/python-twitter.git | A Python wrapper around the Twitter API. \ https://github.com/bear/python-twitter.git
/lynndylanhurley/devise_token_auth.git | Token based authentication for Rails JSON APIs. Designed to work with jToke.. \ https://github.com/lynndylanhurley/devise_token_auth.git
/ory/keto.git | Open Source (Go) implementation of "Zanzibar: Google's Consistent, Global A.. \ https://github.com/ory/keto.git
/stutrek/scrollmonitor.git | A simple and fast API to monitor elements as you scroll \ https://github.com/stutrek/scrollmonitor.git
/kubevirt/kubevirt.git | Kubernetes Virtualization API and runtime in order to define and manage vir.. \ https://github.com/kubevirt/kubevirt.git
/gaojiuli/toapi.git | Every web site provides APIs. \ https://github.com/gaojiuli/toapi.git
/PipedreamHQ/pipedream.git | Connect APIs, remarkably fast.  Free for developers. \ https://github.com/PipedreamHQ/pipedream.git
/dunglas/vulcain.git | Fast and idiomatic client-driven REST APIs. \ https://github.com/dunglas/vulcain.git
/wp-graphql/wp-graphql.git | :rocket: GraphQL API for WordPress \ https://github.com/wp-graphql/wp-graphql.git
/mpociot/laravel-apidoc-generator.git | Laravel API Documentation Generator \ https://github.com/mpociot/laravel-apidoc-generator.git
/slackhq/PanModal.git | An elegant and highly customizable presentation API for constructing bottom.. \ https://github.com/slackhq/PanModal.git
/spatie/laravel-query-builder.git | Easily build Eloquent queries from API requests \ https://github.com/spatie/laravel-query-builder.git
/adaltas/node-csv.git | Full featured CSV parser with simple api and tested against large datasets. \ https://github.com/adaltas/node-csv.git
/thx/gogocode.git | GoGoCode is a transformer for JavaScript/Typescript/HTML based on AST but p.. \ https://github.com/thx/gogocode.git
/mdn/webextensions-examples.git | Example Firefox add-ons created using the WebExtensions API \ https://github.com/mdn/webextensions-examples.git
/bisguzar/twitter-scraper.git | Scrape the Twitter Frontend API without authentication. \ https://github.com/bisguzar/twitter-scraper.git
/vulkano-rs/vulkano.git | Safe and rich Rust wrapper around the Vulkan API \ https://github.com/vulkano-rs/vulkano.git
/thebuilder/react-intersection-observer.git | React implementation of the Intersection Observer API to tell you when an e.. \ https://github.com/thebuilder/react-intersection-observer.git
/F-Stack/f-stack.git | F-Stack is an user space  network development kit with high performance bas.. \ https://github.com/F-Stack/f-stack.git
/square/kotlinpoet.git | A Kotlin API for generating .kt source files. \ https://github.com/square/kotlinpoet.git
/anggrayudi/android-hidden-api.git | A library that provides access to Android hidden APIs and internal resource.. \ https://github.com/anggrayudi/android-hidden-api.git
/stripe/stripe-php.git | PHP library for the Stripe API.     \ https://github.com/stripe/stripe-php.git
/danylovolokh/VideoPlayerManager.git | This is a project designed to help controlling Android MediaPlayer class. I.. \ https://github.com/danylovolokh/VideoPlayerManager.git
/databricks/koalas.git | Koalas: pandas API on Apache Spark \ https://github.com/databricks/koalas.git
/fanout/pushpin.git | Proxy server for adding push to your API \ https://github.com/fanout/pushpin.git
/facebookarchive/php-graph-sdk.git | The Facebook SDK for PHP provides a native interface to the Graph API and F.. \ https://github.com/facebookarchive/php-graph-sdk.git
/zoontek/react-native-permissions.git | An unified permissions API for React Native on iOS and Android \ https://github.com/zoontek/react-native-permissions.git
/rowyio/rowy.git | Rowy is an open-source low-code platform for your backend. Airtable-like UI.. \ https://github.com/rowyio/rowy.git
/php-telegram-bot/core.git | PHP Telegram Bot based on the official Telegram Bot API \ https://github.com/php-telegram-bot/core.git
/fagongzi/manba.git | HTTP API Gateway \ https://github.com/fagongzi/manba.git
/FasterXML/jackson-databind.git | General data-binding package for Jackson (2.x): works on streaming API (cor.. \ https://github.com/FasterXML/jackson-databind.git
/migueldeicaza/TensorFlowSharp.git | TensorFlow API for .NET languages \ https://github.com/migueldeicaza/TensorFlowSharp.git
/kishikawakatsumi/UICKeyChainStore.git | UICKeyChainStore is a simple wrapper for Keychain on iOS, watchOS, tvOS and.. \ https://github.com/kishikawakatsumi/UICKeyChainStore.git
/peterbrittain/asciimatics.git | A cross platform package to do curses-like operations, plus higher level AP.. \ https://github.com/peterbrittain/asciimatics.git
/dockersamples/docker-swarm-visualizer.git | A visualizer for Docker Swarm Mode using the Docker Remote API, Node.JS, an.. \ https://github.com/dockersamples/docker-swarm-visualizer.git
/dotnet/docfx.git | Static site generator for .NET API documentation. \ https://github.com/dotnet/docfx.git
/marmelab/awesome-rest.git | A collaborative list of great resources about RESTful API architecture, dev.. \ https://github.com/marmelab/awesome-rest.git
/zhou-you/RxEasyHttp.git | RxJava2+Retrofit2android,api,c.. \ https://github.com/zhou-you/RxEasyHttp.git
/Marswin/MarsDaemon.git | A lite library, you can make your project depend it easily, and your projec.. \ https://github.com/Marswin/MarsDaemon.git
/ClosedXML/ClosedXML.git | ClosedXML is a .NET library for reading, manipulating and writing Excel 200.. \ https://github.com/ClosedXML/ClosedXML.git
/googleapis/google-api-go-client.git | Auto-generated Google APIs for Go. \ https://github.com/googleapis/google-api-go-client.git
/doctrine/reflection.git | The Doctrine Reflection project is a simple library used by the various Doc.. \ https://github.com/doctrine/reflection.git
/cysmith/neural-style-tf.git | TensorFlow (Python API) implementation of Neural Style \ https://github.com/cysmith/neural-style-tf.git
/stripe/stripe-node.git | Node.js library for the Stripe API.     \ https://github.com/stripe/stripe-node.git
/facebookarchive/conceal.git | Conceal provides easy Android APIs for performing fast encryption and authe.. \ https://github.com/facebookarchive/conceal.git
/php-curl-class/php-curl-class.git | PHP Curl Class makes it easy to send HTTP requests and integrate with web A.. \ https://github.com/php-curl-class/php-curl-class.git
/rubenlagus/TelegramBots.git | Java library to create bots using Telegram Bots API \ https://github.com/rubenlagus/TelegramBots.git
/ssut/py-googletrans.git | (unofficial) Googletrans: Free and Unlimited Google translate API for Pytho.. \ https://github.com/ssut/py-googletrans.git
/passbolt/passbolt_api.git | Passbolt CE Backend, a JSON API written with Cakephp \ https://github.com/passbolt/passbolt_api.git
/alufers/mitmproxy2swagger.git | Automagically reverse-engineer REST APIs via capturing traffic \ https://github.com/alufers/mitmproxy2swagger.git
/ampproject/worker-dom.git | The same DOM API and Frameworks you know, but in a Web Worker. \ https://github.com/ampproject/worker-dom.git
/ThePhD/sol2.git | Sol3 (sol2 v3.0) - a C++ <-> Lua API wrapper with advanced features and top.. \ https://github.com/ThePhD/sol2.git
/nestjsx/crud.git | NestJs CRUD for RESTful APIs \ https://github.com/nestjsx/crud.git
/flasgger/flasgger.git | Easy OpenAPI specs and Swagger UI for your Flask API \ https://github.com/flasgger/flasgger.git
/tianshiyeben/wgcloud.git | linuxcpuIOsmartAPI.. \ https://github.com/tianshiyeben/wgcloud.git
/digitalocean/doctl.git | The official command line interface for the DigitalOcean API. \ https://github.com/digitalocean/doctl.git
/facebookarchive/python-instagram.git | Python Client for Instagram API \ https://github.com/facebookarchive/python-instagram.git
/neutrinojs/webpack-chain.git | A chaining API to generate and simplify the modification of Webpack configu.. \ https://github.com/neutrinojs/webpack-chain.git
/KingOfBugbounty/KingOfBugBountyTips.git | Our main goal is to share tips from some well-known bughunters. Using recon.. \ https://github.com/KingOfBugbounty/KingOfBugBountyTips.git
/vitalik/django-ninja.git |   Fast, Async-ready, Openapi, type hints based framework for building APIs \ https://github.com/vitalik/django-ninja.git
/talyssonoc/node-api-boilerplate.git | DDD/Clean Architecture inspired boilerplate for Node web APIs \ https://github.com/talyssonoc/node-api-boilerplate.git
/googlesamples/android-vision.git | Deprecated: The Mobile Vision API is now a part of ML Kit: Check out this r.. \ https://github.com/googlesamples/android-vision.git
/PokeAPI/pokeapi.git | The Pokmon API \ https://github.com/PokeAPI/pokeapi.git
/bradley/Blotter.git | A JavaScript API for drawing unconventional text effects on the web. \ https://github.com/bradley/Blotter.git
/marlimox/AloeStackView.git | A simple class for laying out a collection of views with a convenient API, .. \ https://github.com/marlimox/AloeStackView.git
/flowjs/flow.js.git | A JavaScript library providing multiple simultaneous, stable, fault-toleran.. \ https://github.com/flowjs/flow.js.git
/eolinker/goku_lite.git | A Powerful HTTP API Gateway in pure golangGoku API Gateway  API .. \ https://github.com/eolinker/goku_lite.git
/fossasia/open-event-server.git | The Open Event Organizer Server to Manage Events https://test-api.eventyay... \ https://github.com/fossasia/open-event-server.git
/kunalkapadia/express-mongoose-es6-rest-api.git | :collision: A boilerplate application for building RESTful APIs Microservic.. \ https://github.com/kunalkapadia/express-mongoose-es6-rest-api.git
/delba/Permission.git | A unified API to ask for permissions on iOS \ https://github.com/delba/Permission.git
/microsoft/WindowsAppSDK.git | The Windows App SDK empowers all Windows desktop apps with modern Windows U.. \ https://github.com/microsoft/WindowsAppSDK.git
/stoplightio/prism.git | Turn any OpenAPI2/3 and Postman Collection file into an API server with moc.. \ https://github.com/stoplightio/prism.git
/httprb/http.git | HTTP (The Gem! a.k.a. http.rb) - a fast Ruby HTTP client with a chainable A.. \ https://github.com/httprb/http.git
/PrismarineJS/mineflayer.git | Create Minecraft bots with a powerful, stable, and high level JavaScript AP.. \ https://github.com/PrismarineJS/mineflayer.git
/streaak/keyhacks.git | Keyhacks is a repository which shows quick ways in which API keys leaked by.. \ https://github.com/streaak/keyhacks.git
/netlify/gotrue.git | An SWT based API for managing users and issuing SWT tokens \ https://github.com/netlify/gotrue.git
/httprunner/httprunner.git | HttpRunner  API  HTTP(S) / HTTP2 / WebSocket / RPC .. \ https://github.com/httprunner/httprunner.git
/reactjs/react-future.git | Specs & docs for potential future and experimental React APIs and JavaScrip.. \ https://github.com/reactjs/react-future.git
/react-native-community/hooks.git | React Native APIs turned into React Hooks for use in functional React compo.. \ https://github.com/react-native-community/hooks.git
/praw-dev/praw.git | PRAW, an acronym for "Python Reddit API Wrapper", is a python package that .. \ https://github.com/praw-dev/praw.git
/APIs-guru/openapi-directory.git |  Wikipedia for Web APIs. Directory of REST API definitions in OpenAPI 2.0/.. \ https://github.com/APIs-guru/openapi-directory.git
/python-twitter-tools/twitter.git | Python Twitter API \ https://github.com/python-twitter-tools/twitter.git
/PMSI-AlignAlytics/dimple.git | An object-oriented API for business analytics \ https://github.com/PMSI-AlignAlytics/dimple.git
/dsherret/ts-morph.git | TypeScript Compiler API wrapper for static analysis and programmatic code c.. \ https://github.com/dsherret/ts-morph.git
/mono/SkiaSharp.git | SkiaSharp is a cross-platform 2D graphics API for .NET platforms based on G.. \ https://github.com/mono/SkiaSharp.git
/power-assert-js/power-assert.git | Power Assert in JavaScript. Provides descriptive assertion messages through.. \ https://github.com/power-assert-js/power-assert.git
/apple/swift-log.git | A Logging API for Swift \ https://github.com/apple/swift-log.git
/FriendsOfSymfony/FOSRestBundle.git | This Bundle provides various tools to rapidly develop RESTful API's with Sy.. \ https://github.com/FriendsOfSymfony/FOSRestBundle.git
/twitter/TwitterTextEditor.git | A standalone, flexible API that provides a full-featured rich text editor f.. \ https://github.com/twitter/TwitterTextEditor.git
/TsudaKageyu/minhook.git | The Minimalistic x86/x64 API Hooking Library for Windows \ https://github.com/TsudaKageyu/minhook.git
/Cysharp/MagicOnion.git | Unified Realtime/API framework for .NET platform and Unity. \ https://github.com/Cysharp/MagicOnion.git
/AtomicGameEngine/AtomicGameEngine.git | The Atomic Game Engine is a multi-platform 2D and 3D engine with a consiste.. \ https://github.com/AtomicGameEngine/AtomicGameEngine.git
/jvilk/BrowserFS.git | BrowserFS is an in-browser filesystem that emulates the Node JS filesystem .. \ https://github.com/jvilk/BrowserFS.git
/MZCretin/RollToolsApi.git | Api \ https://github.com/MZCretin/RollToolsApi.git
/vulnersCom/nmap-vulners.git | NSE script based on Vulners.com API \ https://github.com/vulnersCom/nmap-vulners.git
/0xDkd/auxpi.git |   API  \ https://github.com/0xDkd/auxpi.git
/spring-projects/spring-data-elasticsearch.git | Provide support to increase developer productivity in Java when using Elast.. \ https://github.com/spring-projects/spring-data-elasticsearch.git
/ory/oathkeeper.git | A cloud native Identity & Access Proxy / API (IAP) and Access Control Decis.. \ https://github.com/ory/oathkeeper.git
/aiogram/aiogram.git | Is a pretty simple and fully asynchronous framework for Telegram Bot API wr.. \ https://github.com/aiogram/aiogram.git
/sendgrid/sendgrid-nodejs.git | The Official Twilio SendGrid Led, Community Driven Node.js API Library \ https://github.com/sendgrid/sendgrid-nodejs.git
/open-telemetry/opentelemetry-go.git | OpenTelemetry Go API and SDK \ https://github.com/open-telemetry/opentelemetry-go.git
/yosriady/api-development-tools.git | :books: A collection of useful resources for building RESTful HTTP+JSON API.. \ https://github.com/yosriady/api-development-tools.git
/noirbizarre/flask-restplus.git | Fully featured framework for fast, easy and documented API development with.. \ https://github.com/noirbizarre/flask-restplus.git
/apiato/apiato.git | PHP Framework for building scalable API's on top of Laravel. \ https://github.com/apiato/apiato.git
/ml-tooling/opyrator.git |  Turns your machine learning code into microservices with web API, interac.. \ https://github.com/ml-tooling/opyrator.git
/Twitter4J/Twitter4J.git | Twitter4J is an open-sourced, mavenized and Google App Engine safe Java lib.. \ https://github.com/Twitter4J/Twitter4J.git
/pyrogram/pyrogram.git | Elegant, modern and asynchronous Telegram MTProto API framework in Python f.. \ https://github.com/pyrogram/pyrogram.git
/pushtorefresh/storio.git | Reactive API for SQLiteDatabase and ContentResolver. \ https://github.com/pushtorefresh/storio.git
/pystardust/ytfzf.git | A posix script to find and watch youtube videos from the terminal. (Without.. \ https://github.com/pystardust/ytfzf.git
/steipete/PSTCollectionView.git | Open Source, 100% API compatible replacement of UICollectionView for iOS4.3.. \ https://github.com/steipete/PSTCollectionView.git
/angular-ui/angular-google-maps.git | AngularJS directives for the Google Maps Javascript API \ https://github.com/angular-ui/angular-google-maps.git
/jOOQ/jOOR.git |  jOOR - Fluent Reflection in Java jOOR is a very simple fluent API that giv.. \ https://github.com/jOOQ/jOOR.git
/esbenp/pdf-bot.git |  A Node queue API for generating PDFs using headless Chrome. Comes with a .. \ https://github.com/esbenp/pdf-bot.git
/fixerAPI/fixer.git | A foreign exchange rates and currency conversion API \ https://github.com/fixerAPI/fixer.git
/discord-net/Discord.Net.git | An unofficial .Net wrapper for the Discord API (https://discord.com/) \ https://github.com/discord-net/Discord.Net.git
/thelinmichael/spotify-web-api-node.git | A Node.js wrapper for Spotify's Web API. \ https://github.com/thelinmichael/spotify-web-api-node.git
/googleapis/google-api-ruby-client.git | REST client for Google APIs \ https://github.com/googleapis/google-api-ruby-client.git
/cristianbote/goober.git |  goober, a less than 1KB   css-in-js alternative with a familiar API \ https://github.com/cristianbote/goober.git
/sannies/mp4parser.git | A Java API to read, write and create MP4 files \ https://github.com/sannies/mp4parser.git
/android/location-samples.git | Multiple samples showing the best practices in location APIs on Android. \ https://github.com/android/location-samples.git
/hmmlearn/hmmlearn.git | Hidden Markov Models in Python, with scikit-learn like API \ https://github.com/hmmlearn/hmmlearn.git
/corona-warn-app/cwa-app-android.git | Native Android app using the Apple/Google exposure notification API. \ https://github.com/corona-warn-app/cwa-app-android.git
/Unity-Technologies/NavMeshComponents.git | High Level API Components for Runtime NavMesh Building \ https://github.com/Unity-Technologies/NavMeshComponents.git
/rbuckton/reflect-metadata.git | Prototype for a Metadata Reflection API for ECMAScript \ https://github.com/rbuckton/reflect-metadata.git
/serenity-rs/serenity.git | A Rust library for the Discord API. \ https://github.com/serenity-rs/serenity.git
/ReactiveCocoa/ReactiveObjC.git | The 2.x ReactiveCocoa Objective-C API: Streams of values over time \ https://github.com/ReactiveCocoa/ReactiveObjC.git
/immersive-web/webxr.git | Repository for the WebXR Device API Specification. \ https://github.com/immersive-web/webxr.git
/w3tecch/express-typescript-boilerplate.git | A delightful way to building a RESTful API with NodeJs & TypeScript by @w3t.. \ https://github.com/w3tecch/express-typescript-boilerplate.git
/QuestPDF/QuestPDF.git | QuestPDF is an open-source, modern and battle-tested library that can help .. \ https://github.com/QuestPDF/QuestPDF.git
/sqlcipher/android-database-sqlcipher.git | Android SQLite API based on SQLCipher \ https://github.com/sqlcipher/android-database-sqlcipher.git
/pksunkara/alpaca.git | Given a web API, Generate client libraries in node, php, python, ruby \ https://github.com/pksunkara/alpaca.git
/Findomain/Findomain.git | The complete solution for domain recognition. Supports screenshoting, port .. \ https://github.com/Findomain/Findomain.git
/EasyHook/EasyHook.git | EasyHook - The reinvention of Windows API Hooking \ https://github.com/EasyHook/EasyHook.git
/binance/binance-spot-api-docs.git | Official Documentation for the Binance Spot APIs and Streams  \ https://github.com/binance/binance-spot-api-docs.git
/shreyashankar/gpt3-sandbox.git | The goal of this project is to enable users to create cool web demos using .. \ https://github.com/shreyashankar/gpt3-sandbox.git
/APIs-guru/graphql-faker.git |  Mock or extend your GraphQL API with faked data. No coding required. \ https://github.com/APIs-guru/graphql-faker.git
/requirejs/almond.git | A minimal AMD API implementation for use after optimized builds \ https://github.com/requirejs/almond.git
/goldsmith/Wikipedia.git | A Pythonic wrapper for the Wikipedia API \ https://github.com/goldsmith/Wikipedia.git
/stablekernel/aqueduct.git | Dart HTTP server framework for building REST APIs. Includes PostgreSQL ORM .. \ https://github.com/stablekernel/aqueduct.git
/streamproc/MediaStreamRecorder.git | Cross browser audio/video/screen recording. It supports Chrome, Firefox, Op.. \ https://github.com/streamproc/MediaStreamRecorder.git
/zcreativelabs/react-simple-maps.git | Beautiful React SVG maps with d3-geo and topojson using a declarative api. \ https://github.com/zcreativelabs/react-simple-maps.git
/napi-rs/napi-rs.git | A framework for building compiled Node.js add-ons in Rust via Node-API \ https://github.com/napi-rs/napi-rs.git
/json-c/json-c.git | https://github.com/json-c/json-c is the official code repository for json-c.. \ https://github.com/json-c/json-c.git
/developit/express-es6-rest-api.git | :battery: Starter project for an ES6 RESTful Express API. \ https://github.com/developit/express-es6-rest-api.git
/nickoala/telepot.git | Python framework for Telegram Bot API \ https://github.com/nickoala/telepot.git
/ping/instagram_private_api.git | A Python library to access Instagram's private API. \ https://github.com/ping/instagram_private_api.git
/fossasia/susi_server.git | SUSI.AI server backend - the Artificial Intelligence server for personal as.. \ https://github.com/fossasia/susi_server.git
/GeneralMills/pytrends.git | Pseudo API for Google Trends  \ https://github.com/GeneralMills/pytrends.git
/MailCore/mailcore2.git | MailCore 2 provide a simple and asynchronous API to work with e-mail protoc.. \ https://github.com/MailCore/mailcore2.git
/bytedance/ByteX.git | ByteX is a bytecode plugin platform based on Android Gradle Transform API a.. \ https://github.com/bytedance/ByteX.git
/typpo/textbelt.git | Free API for outgoing SMS \ https://github.com/typpo/textbelt.git
/Rolstenhouse/unofficial-apis.git | A collection of unofficial apis. Designed to inspire your next Friday night.. \ https://github.com/Rolstenhouse/unofficial-apis.git
/dolanmiu/docx.git | Easily generate .docx files with JS/TS with a nice declarative API. Works f.. \ https://github.com/dolanmiu/docx.git
/disease-sh/API.git | API for Current cases and more stuff about COVID-19 and Influenza \ https://github.com/disease-sh/API.git
/swagger-api/swagger-js.git | Javascript library to connect to swagger-enabled APIs via browser or nodejs \ https://github.com/swagger-api/swagger-js.git
/jolibrain/deepdetect.git | Deep Learning API and Server in C++14 support for Caffe, PyTorch,TensorRT, .. \ https://github.com/jolibrain/deepdetect.git
/EasyNetQ/EasyNetQ.git | An easy to use .NET API for RabbitMQ \ https://github.com/EasyNetQ/EasyNetQ.git
/Swagger2Markup/swagger2markup.git | A Swagger to AsciiDoc or Markdown converter to simplify the generation of a.. \ https://github.com/Swagger2Markup/swagger2markup.git
/LibreTranslate/LibreTranslate.git | Free and Open Source Machine Translation API. 100% self-hosted, offline cap.. \ https://github.com/LibreTranslate/LibreTranslate.git
/Netflix/archaius.git | Library for configuration management API \ https://github.com/Netflix/archaius.git
/SebastianBoldt/Jelly.git |  - Jelly is a library for animated, non-interactive & interactive viewcont.. \ https://github.com/SebastianBoldt/Jelly.git
/mono/CppSharp.git | Tools and libraries to glue C/C++ APIs to high-level languages \ https://github.com/mono/CppSharp.git
/motiv-labs/janus.git | An API Gateway written in Go \ https://github.com/motiv-labs/janus.git
/farizdotid/DAFTAR-API-LOKAL-INDONESIA.git | Berisi API tentang Data Indonesia ataupun API yang dibuat oleh developer In.. \ https://github.com/farizdotid/DAFTAR-API-LOKAL-INDONESIA.git
/gluon-api/gluon-api.git | A clear, concise, simple yet powerful and efficient API for deep learning. \ https://github.com/gluon-api/gluon-api.git
/WhatsApp/stickers.git | This repository contains the iOS and Android sample apps and API for creati.. \ https://github.com/WhatsApp/stickers.git
/actions/github-script.git | Write workflows scripting the GitHub API in JavaScript \ https://github.com/actions/github-script.git
/ac-pm/Inspeckage.git | Android Package Inspector - dynamic analysis with api hooks, start unexport.. \ https://github.com/ac-pm/Inspeckage.git
/spotify/scio.git | A Scala API for Apache Beam and Google Cloud Dataflow. \ https://github.com/spotify/scio.git
/matthewp/haunted.git | React's Hooks API implemented for web components  \ https://github.com/matthewp/haunted.git
/Apipie/apipie-rails.git | Ruby on Rails API documentation tool \ https://github.com/Apipie/apipie-rails.git
/actionhero/actionhero.git | Actionhero is a realtime multi-transport nodejs API Server with integrated .. \ https://github.com/actionhero/actionhero.git
/thephpleague/glide.git | Wonderfully easy on-demand image manipulation library with an HTTP based AP.. \ https://github.com/thephpleague/glide.git
/hardkoded/puppeteer-sharp.git | Headless Chrome .NET API \ https://github.com/hardkoded/puppeteer-sharp.git
/irazasyed/telegram-bot-sdk.git |  Telegram Bot API PHP SDK. Lets you build Telegram Bots easily! Supports L.. \ https://github.com/irazasyed/telegram-bot-sdk.git
/intelowlproject/IntelOwl.git | Intel Owl: analyze files, domains, IPs in multiple ways from a single API a.. \ https://github.com/intelowlproject/IntelOwl.git
/CharlesPikachu/DecryptLogin.git | DecryptLogin: APIs for loginning some websites by using requests. \ https://github.com/CharlesPikachu/DecryptLogin.git
/laravel/sanctum.git | Laravel Sanctum provides a featherweight authentication system for SPAs and.. \ https://github.com/laravel/sanctum.git
/google/google-api-javascript-client.git | Google APIs Client Library for browser JavaScript, aka gapi. \ https://github.com/google/google-api-javascript-client.git
/docker-java/docker-java.git | Java Docker API Client \ https://github.com/docker-java/docker-java.git
/swaggo/gin-swagger.git | gin middleware to automatically generate RESTful API documentation with Swa.. \ https://github.com/swaggo/gin-swagger.git
/lexik/LexikJWTAuthenticationBundle.git | JWT authentication for your Symfony API \ https://github.com/lexik/LexikJWTAuthenticationBundle.git
/KhronosGroup/Vulkan-Hpp.git | Open-Source Vulkan C++ API \ https://github.com/KhronosGroup/Vulkan-Hpp.git
/audreyt/node-webworker-threads.git | Lightweight Web Worker API implementation with native threads \ https://github.com/audreyt/node-webworker-threads.git
/cerebris/jsonapi-resources.git | A resource-focused Rails library for developing JSON:API compliant servers. \ https://github.com/cerebris/jsonapi-resources.git
/octokit/octokit.net.git | A GitHub API client library for .NET  \ https://github.com/octokit/octokit.net.git
/apitrace/apitrace.git | Tools for tracing OpenGL, Direct3D, and other graphics APIs \ https://github.com/apitrace/apitrace.git
/orlabs/orange.git | OpenResty/Nginx Gateway for API Monitoring and Management. \ https://github.com/orlabs/orange.git
/dotnet/aspnet-api-versioning.git | Provides a set of libraries which add service API versioning to ASP.NET Web.. \ https://github.com/dotnet/aspnet-api-versioning.git
/sharetribe/sharetribe.git | Sharetribe Go is a source available marketplace software, also available as.. \ https://github.com/sharetribe/sharetribe.git
/kubernetes-sigs/cluster-api.git | Home for Cluster API, a subproject of sig-cluster-lifecycle \ https://github.com/kubernetes-sigs/cluster-api.git
/zxlie/WeixinApi.git | Javascript API \ https://github.com/zxlie/WeixinApi.git
/dotnet/extensions.git | .NET APIs for commonly used programming patterns and utilities, such as dep.. \ https://github.com/dotnet/extensions.git
/LazoCoder/Windows-Hacks.git | Creative and unusual things that can be done with the Windows API. \ https://github.com/LazoCoder/Windows-Hacks.git
/fossasia/open-event-frontend.git | The frontend for the Open Event API Server https://test.eventyay.com \ https://github.com/fossasia/open-event-frontend.git
/linkedin/rest.li.git | Rest.li is a REST+JSON framework for building robust, scalable service arch.. \ https://github.com/linkedin/rest.li.git
/EhsanTang/ApiManager.git | CRAP - API | APIBUGAPI.. \ https://github.com/EhsanTang/ApiManager.git
/KhronosGroup/Vulkan-Docs.git | The Vulkan API Specification and related tools \ https://github.com/KhronosGroup/Vulkan-Docs.git
/avast/android-styled-dialogs.git | Backport of Material dialogs with easy-to-use API based on DialogFragment \ https://github.com/avast/android-styled-dialogs.git
/brookshi/Hitchhiker.git | a Restful Api test tool \ https://github.com/brookshi/Hitchhiker.git
/Bukkit/Bukkit.git | The Minecraft Mod API \ https://github.com/Bukkit/Bukkit.git
/Caiyeon/goldfish.git | A HashiCorp Vault UI written with VueJS and Vault native Go API \ https://github.com/Caiyeon/goldfish.git
/nodatime/nodatime.git | A better date and time API for .NET \ https://github.com/nodatime/nodatime.git
/marceljuenemann/angular-drag-and-drop-lists.git | Angular directives for sorting nested lists using the HTML5 Drag & Drop API \ https://github.com/marceljuenemann/angular-drag-and-drop-lists.git
/TelegramBots/Telegram.Bot.git | .NET Client for Telegram Bot API \ https://github.com/TelegramBots/Telegram.Bot.git
/Overv/VulkanTutorial.git | Tutorial for the Vulkan graphics and compute API \ https://github.com/Overv/VulkanTutorial.git
/bustoutsolutions/siesta.git | The civilized way to write REST API clients for iOS / macOS \ https://github.com/bustoutsolutions/siesta.git
/xamarin/xamarin-macios.git | Bridges the worlds of .NET with the native APIs of macOS, iOS, tvOS, and wa.. \ https://github.com/xamarin/xamarin-macios.git
/asyncapi/spec.git | The AsyncAPI specification allows you to create machine-readable definition.. \ https://github.com/asyncapi/spec.git
/t9tio/cloudquery.git | Turn any website to API by several clicks (serverless and support SPA!) \ https://github.com/t9tio/cloudquery.git
/LuanRT/YouTube.js.git |  full-featured wrapper around YouTube's private API \ https://github.com/LuanRT/YouTube.js.git
/lukeautry/tsoa.git | Build OpenAPI-compliant REST APIs using TypeScript and Node \ https://github.com/lukeautry/tsoa.git
/mcharmas/Android-ReactiveLocation.git | Small library that wraps Google Play Service API in brilliant RxJava Observ.. \ https://github.com/mcharmas/Android-ReactiveLocation.git
/ardalis/ApiEndpoints.git | A project for supporting API Endpoints in ASP.NET Core web applications. \ https://github.com/ardalis/ApiEndpoints.git
/paypal/PayPal-PHP-SDK.git | PHP SDK for PayPal RESTful APIs \ https://github.com/paypal/PayPal-PHP-SDK.git
/storesafe/cordova-sqlite-storage.git | A Cordova/PhoneGap plugin to open and use sqlite databases on Android, iOS .. \ https://github.com/storesafe/cordova-sqlite-storage.git
/pump-io/pump.io.git | Social server with an ActivityStreams API \ https://github.com/pump-io/pump.io.git
/nsarno/knock.git | Seamless JWT authentication for Rails API \ https://github.com/nsarno/knock.git
/jsantell/dancer.js.git | high-level audio API, designed to make sweet visualizations \ https://github.com/jsantell/dancer.js.git
/huanzi-qch/base-admin.git | Base AdminAPI.. \ https://github.com/huanzi-qch/base-admin.git
/interagent/prmd.git | JSON Schema tools and doc generation for HTTP APIs \ https://github.com/interagent/prmd.git
/dosco/graphjin.git | GraphJin - Build APIs in 5 minutes with GraphQL. An instant GraphQL to SQL .. \ https://github.com/dosco/graphjin.git
/api-platform/core.git | The server component of API Platform: hypermedia and GraphQL APIs in minute.. \ https://github.com/api-platform/core.git
/apilayer/restcountries.git | Get information about countries via a RESTful API \ https://github.com/apilayer/restcountries.git
/HashLips/generative-art-node.git | Create generative art by using the canvas api and node js \ https://github.com/HashLips/generative-art-node.git
/geoip-lite/node-geoip.git | Native NodeJS implementation of MaxMind's GeoIP API -- works in node 0.6.3 .. \ https://github.com/geoip-lite/node-geoip.git
/nelmio/NelmioApiDocBundle.git | Generates documentation for your REST API from annotations \ https://github.com/nelmio/NelmioApiDocBundle.git
/FasterXML/jackson-core.git | Core part of Jackson that defines Streaming API as well as basic shared abs.. \ https://github.com/FasterXML/jackson-core.git
/Medium/medium-api-docs.git | Documentation for Medium's OAuth2 API \ https://github.com/Medium/medium-api-docs.git
/nodejs/node-addon-examples.git | Node.js C++ addon examples from http://nodejs.org/docs/latest/api/addons.ht.. \ https://github.com/nodejs/node-addon-examples.git
/FriendsOfPHP/Sami.git | An API documentation generator \ https://github.com/FriendsOfPHP/Sami.git
/symfony/webpack-encore.git | A simple but powerful API for processing & compiling assets built around We.. \ https://github.com/symfony/webpack-encore.git
/cloudflarearchive/backgrid.git | Finally, an easily stylable semantic HTML data grid widget with a Javascrip.. \ https://github.com/cloudflarearchive/backgrid.git
/francoispqt/gojay.git | high performance JSON encoder/decoder with stream API for Golang  \ https://github.com/francoispqt/gojay.git
/google/gapid.git | Graphics API Debugger \ https://github.com/google/gapid.git
/Pycord-Development/pycord.git | Pycord, a maintained fork of discord.py, is a python wrapper for the Discor.. \ https://github.com/Pycord-Development/pycord.git
/JessYanCoding/RetrofitUrlManager.git |  Let Retrofit support multiple baseUrl and can be change the baseUrl at ru.. \ https://github.com/JessYanCoding/RetrofitUrlManager.git
/maxmind/GeoIP2-php.git | PHP API for GeoIP2 webservice client and database reader  \ https://github.com/maxmind/GeoIP2-php.git
/flipkart-incubator/Astra.git | Automated Security Testing For REST API's \ https://github.com/flipkart-incubator/Astra.git
/lujakob/nestjs-realworld-example-app.git | Exemplary real world backend API built with NestJS + TypeORM / Prisma \ https://github.com/lujakob/nestjs-realworld-example-app.git
/remi/her.git | Her is an ORM (Object Relational Mapper) that maps REST resources to Ruby o.. \ https://github.com/remi/her.git
/code-for-charity/YouTube-Extension.git | YouTube Extension[80+Features](Pleasedocument/wiki!)Lean&Longest-stand.. \ https://github.com/code-for-charity/YouTube-Extension.git
/opnsense/core.git | OPNsense GUI, API and systems backend \ https://github.com/opnsense/core.git
/drewm/mailchimp-api.git | Super-simple, minimum abstraction MailChimp API v3 wrapper, in PHP \ https://github.com/drewm/mailchimp-api.git
/mafaca/UtinyRipper.git | GUI and API library to work with Engine assets, serialized and bundle files \ https://github.com/mafaca/UtinyRipper.git
/jamesmawm/High-Frequency-Trading-Model-with-IB.git | A high-frequency trading model using Interactive Brokers API with pairs and.. \ https://github.com/jamesmawm/High-Frequency-Trading-Model-with-IB.git
/apache/incubator-hugegraph.git | A graph database that supports more than 100+ billion data, high performanc.. \ https://github.com/apache/incubator-hugegraph.git
/KnpLabs/php-github-api.git | A simple PHP GitHub API client, Object Oriented, tested and documented. \ https://github.com/KnpLabs/php-github-api.git
/Tencent/Hardcoder.git | Hardcoder is a solution which allows Android APP and Android System to comm.. \ https://github.com/Tencent/Hardcoder.git
/confluentinc/kafka-streams-examples.git | Demo applications and code examples for Apache Kafka's Streams API. \ https://github.com/confluentinc/kafka-streams-examples.git
/fsouza/go-dockerclient.git | Go client for the Docker Engine API. \ https://github.com/fsouza/go-dockerclient.git
/googlesamples/mlkit.git | A collection of sample apps to demonstrate how to use Google's ML Kit APIs .. \ https://github.com/googlesamples/mlkit.git
/alash3al/sqler.git | write APIs using direct SQL queries with no hassle, let's rethink about SQL \ https://github.com/alash3al/sqler.git
/watsonbox/exportify.git | Export/Backup Spotify playlists using the Web API \ https://github.com/watsonbox/exportify.git
/rangav/thunder-client-support.git | Thunder Client is a lightweight Rest API Client Extension for VS Code.  \ https://github.com/rangav/thunder-client-support.git
/danog/MadelineProto.git | Async PHP client/server API for the telegram MTProto protocol \ https://github.com/danog/MadelineProto.git
/Kikobeats/awesome-api.git | A curated list of awesome resources for design and implement RESTful API's. \ https://github.com/Kikobeats/awesome-api.git
/BlankerL/DXY-COVID-19-Crawler.git | 2019API | COVID-19/2019-nCoV Realtime Infection Crawler and AP.. \ https://github.com/BlankerL/DXY-COVID-19-Crawler.git
/eclipse/eclipse-collections.git | Eclipse Collections is a collections framework for Java with optimized data.. \ https://github.com/eclipse/eclipse-collections.git
/signalapp/libsignal-protocol-javascript.git | This library is no longer maintained. libsignal-protocol-javascript was an .. \ https://github.com/signalapp/libsignal-protocol-javascript.git
/exchangeratesapi/exchangeratesapi.git | Exchange Rates API \ https://github.com/exchangeratesapi/exchangeratesapi.git
/GAM-team/got-your-back.git | Got Your Back (GYB) is a command line tool for backing up your Gmail messag.. \ https://github.com/GAM-team/got-your-back.git
/vmware/pyvmomi.git | VMware vSphere API Python Bindings \ https://github.com/vmware/pyvmomi.git
/karpathy/micrograd.git | A tiny scalar-valued autograd engine and a neural net library on top of it .. \ https://github.com/karpathy/micrograd.git
/Dujltqzv/Some-Many-Books.git | .. \ https://github.com/Dujltqzv/Some-Many-Books.git
/danielfsousa/express-rest-boilerplate.git |  Express starter for building RESTful APIs \ https://github.com/danielfsousa/express-rest-boilerplate.git
/jOOQ/jOOL.git | jOO - The Missing Parts in Java 8 jOO improves the JDK libraries in areas.. \ https://github.com/jOOQ/jOOL.git
/mashery/iodocs.git | Interactive API documentation system \ https://github.com/mashery/iodocs.git
/mukulhase/WebWhatsapp-Wrapper.git | An API for sending and receiving messages over web.whatsapp [Working as of .. \ https://github.com/mukulhase/WebWhatsapp-Wrapper.git
/uber/piranha.git | A tool for refactoring code related to feature flag APIs \ https://github.com/uber/piranha.git
/vmware/govmomi.git | Go library for the VMware vSphere API \ https://github.com/vmware/govmomi.git
/kgrzybek/sample-dotnet-core-cqrs-api.git | Sample .NET Core REST API CQRS implementation with raw SQL and DDD using Cl.. \ https://github.com/kgrzybek/sample-dotnet-core-cqrs-api.git
/karmi/retire.git | A rich Ruby API and DSL for the Elasticsearch search engine \ https://github.com/karmi/retire.git
/Giphy/GiphyAPI.git | Public facing API docs, notes and more  \ https://github.com/Giphy/GiphyAPI.git
/gavv/httpexpect.git | End-to-end HTTP and REST API testing for Go. \ https://github.com/gavv/httpexpect.git
/RikkaApps/Shizuku.git | Using system APIs directly with adb/root privileges from normal apps throug.. \ https://github.com/RikkaApps/Shizuku.git
/demopark/electron-api-demos-Zh_CN.git |  electron-api-demos ,  v2.0.2 \ https://github.com/demopark/electron-api-demos-Zh_CN.git
/PlatformLab/NanoLog.git | Nanolog is an extremely performant nanosecond scale logging system for C++ .. \ https://github.com/PlatformLab/NanoLog.git
/KonradIT/goprowifihack.git | Unofficial GoPro WiFi API Documentation - HTTP GET requests for commands, s.. \ https://github.com/KonradIT/goprowifihack.git
/SpectoLabs/hoverfly.git | Lightweight service virtualization/API simulation tool for developers and t.. \ https://github.com/SpectoLabs/hoverfly.git
/AnyChart/AnyChart-Android.git | AnyChart Android Chart is an amazing data visualization library for easily .. \ https://github.com/AnyChart/AnyChart-Android.git
/google/earthengine-api.git | Python and JavaScript bindings for calling the Earth Engine API. \ https://github.com/google/earthengine-api.git
/realpython/list-of-python-api-wrappers.git | List of Python API Wrappers and Libraries \ https://github.com/realpython/list-of-python-api-wrappers.git
/octokit/octokit.objc.git | GitHub API client for Objective-C \ https://github.com/octokit/octokit.objc.git
/amaembo/streamex.git | Enhancing Java Stream API \ https://github.com/amaembo/streamex.git
/apache/libcloud.git | Apache Libcloud is a Python library which hides differences between differe.. \ https://github.com/apache/libcloud.git
/mapbox/mapbox.js.git | Mapbox JavaScript API, a Leaflet Plugin \ https://github.com/mapbox/mapbox.js.git
/corona-warn-app/cwa-server.git | Backend implementation for the Apple/Google exposure notification API. \ https://github.com/corona-warn-app/cwa-server.git
/Automattic/monk.git | The wise MongoDB API \ https://github.com/Automattic/monk.git
/jquery/jquery-migrate.git | A development tool to help migrate away from APIs and features that have be.. \ https://github.com/jquery/jquery-migrate.git
/observablehq/plot.git | A concise API for exploratory data visualization \ https://github.com/observablehq/plot.git
/ryanmcgrath/twython.git | Actively maintained, pure Python wrapper for the Twitter API. Supports both.. \ https://github.com/ryanmcgrath/twython.git
/trailblazer/roar.git | Parse and render REST API documents using representers. \ https://github.com/trailblazer/roar.git
/J7mbo/twitter-api-php.git | The simplest PHP Wrapper for Twitter API v1.1 calls \ https://github.com/J7mbo/twitter-api-php.git
/javiersantos/AppUpdater.git | A library that checks for your apps' updates on Google Play, GitHub, Amazon.. \ https://github.com/javiersantos/AppUpdater.git
/hellokaton/wechat-api.git |  wechat-api by java7. \ https://github.com/hellokaton/wechat-api.git
/aweary/react-copy-write.git |  Immutable state with a mutable API  \ https://github.com/aweary/react-copy-write.git
/Schmavery/facebook-chat-api.git | Unofficial Facebook Chat API for Nodejs \ https://github.com/Schmavery/facebook-chat-api.git
/kyubotics/coolq-http-api.git |  Q  HTTP  WebSocket  API  \ https://github.com/kyubotics/coolq-http-api.git
/LukeMathWalker/zero-to-production.git | Code for "Zero To Production In Rust", a book on API development using Rust.. \ https://github.com/LukeMathWalker/zero-to-production.git
/erdewit/ib_insync.git | Python sync/async framework for Interactive Brokers API \ https://github.com/erdewit/ib_insync.git
/mozilla/webextension-polyfill.git | A lightweight polyfill library for Promise-based WebExtension APIs in Chrom.. \ https://github.com/mozilla/webextension-polyfill.git
/nix-rust/nix.git | Rust friendly bindings to *nix APIs \ https://github.com/nix-rust/nix.git
/python-gitlab/python-gitlab.git | A python wrapper for the GitLab API. \ https://github.com/python-gitlab/python-gitlab.git
/justadudewhohacks/face-recognition.js.git | Simple Node.js package for robust face detection and face recognition. Java.. \ https://github.com/justadudewhohacks/face-recognition.js.git
/ai/visibilityjs.git | Wrapper for the Page Visibility API \ https://github.com/ai/visibilityjs.git
/mongo-js/mongojs.git | Node.js module that implements the offical mongo api \ https://github.com/mongo-js/mongojs.git
/thisbejim/Pyrebase.git | A simple python wrapper for the Firebase API. \ https://github.com/thisbejim/Pyrebase.git
/joeferner/node-java.git | Bridge API to connect with existing Java APIs. \ https://github.com/joeferner/node-java.git
/GitGuardian/APISecurityBestPractices.git | Resources to help you keep secrets (API keys, database credentials, certifi.. \ https://github.com/GitGuardian/APISecurityBestPractices.git
/bottenderjs/messaging-apis.git | Messaging APIs for multi-platform \ https://github.com/bottenderjs/messaging-apis.git
/NREL/api-umbrella.git | Open source API management platform \ https://github.com/NREL/api-umbrella.git
/CarpenterLee/JavaLambdaInternals.git | JavaStreams API \ https://github.com/CarpenterLee/JavaLambdaInternals.git
/prettymuchbryce/easystarjs.git | An asynchronous A* pathfinding API written in Javascript. \ https://github.com/prettymuchbryce/easystarjs.git
/luoxiu/Schedule.git | Schedule timing task in Swift using a fluent API. (A friendly alternative t.. \ https://github.com/luoxiu/Schedule.git
/hexsum/Mojo-Webqq.git | WebQQ201911Perlsmartq.. \ https://github.com/hexsum/Mojo-Webqq.git
/googlecreativelab/chrome-music-lab.git | A collection of experiments for exploring how music works, all built with t.. \ https://github.com/googlecreativelab/chrome-music-lab.git
/eykrehbein/strest.git |  CI-ready tests for REST APIs configured in YAML \ https://github.com/eykrehbein/strest.git
/justintv/Twitch-API.git | A home for details about our API \ https://github.com/justintv/Twitch-API.git
/heinrichreimer/material-intro.git | A simple material design app intro with cool animations and a fluent API. \ https://github.com/heinrichreimer/material-intro.git
/SchemaStore/schemastore.git | A collection of JSON schema files including full API \ https://github.com/SchemaStore/schemastore.git
/unsplash/unsplash-js.git |  A server-side JavaScript wrapper for the Unsplash API \ https://github.com/unsplash/unsplash-js.git
/Amanieu/parking_lot.git | Compact and efficient synchronization primitives for Rust. Also provides an.. \ https://github.com/Amanieu/parking_lot.git
/danpaquin/coinbasepro-python.git | The unofficial Python client for the Coinbase Pro API \ https://github.com/danpaquin/coinbasepro-python.git
/Icinga/icinga2.git | The core of our monitoring platform with a powerful configuration language .. \ https://github.com/Icinga/icinga2.git
/Rhymen/go-whatsapp.git | WhatsApp Web API \ https://github.com/Rhymen/go-whatsapp.git
/yangchaojiang/yjPlay.git | UI,API, ,  ,,, ,, , ,, .. \ https://github.com/yangchaojiang/yjPlay.git
/openresty/lua-resty-redis.git | Lua redis client driver for the ngx_lua based on the cosocket API \ https://github.com/openresty/lua-resty-redis.git
/marmelab/json-graphql-server.git | Get a full fake GraphQL API with zero coding in less than 30 seconds. \ https://github.com/marmelab/json-graphql-server.git
/iridakos/duckrails.git | Development tool to mock API endpoints quickly and easily (docker image ava.. \ https://github.com/iridakos/duckrails.git
/andyearnshaw/Intl.js.git | Compatibility implementation of the ECMAScript Internationalization API (EC.. \ https://github.com/andyearnshaw/Intl.js.git
/althonos/InstaLooter.git | Another API-less Instagram pictures and videos downloader. \ https://github.com/althonos/InstaLooter.git
/stypr/clubhouse-py.git | Clubhouse API written in Python. Standalone client included. For reference .. \ https://github.com/stypr/clubhouse-py.git
/rvagg/node-worker-farm.git | Distribute processing tasks to child processes with an ber-simple API and .. \ https://github.com/rvagg/node-worker-farm.git
/diegohaz/rest.git | REST API generator with Node.js, Express and Mongoose \ https://github.com/diegohaz/rest.git
/stripe/stripe-ruby.git | Ruby library for the Stripe API.     \ https://github.com/stripe/stripe-ruby.git
/jishi/node-sonos-http-api.git | An HTTP API bridge for Sonos easing automation. Hostable on any node.js cap.. \ https://github.com/jishi/node-sonos-http-api.git
/kjk/notionapi.git | Unofficial Go API for Notion.so \ https://github.com/kjk/notionapi.git
/intoli/remote-browser.git | A low-level browser automation framework built on top of the Web Extensions.. \ https://github.com/intoli/remote-browser.git
/python-diamond/Diamond.git | Diamond is a python daemon that collects system metrics and publishes them .. \ https://github.com/python-diamond/Diamond.git
/theoephraim/node-google-spreadsheet.git | Google Sheets API (v4) wrapper for Node.js \ https://github.com/theoephraim/node-google-spreadsheet.git
/craigsdennis/intro-to-apis-course.git | Introduction to APIs course \ https://github.com/craigsdennis/intro-to-apis-course.git
/ianstormtaylor/permit.git | An unopinionated authentication library for building Node.js APIs. \ https://github.com/ianstormtaylor/permit.git
/twitter/twurl.git | OAuth-enabled curl for the Twitter API \ https://github.com/twitter/twurl.git
/bripkens/connect-history-api-fallback.git | Fallback to index.html for applications that are using the HTML 5 history A.. \ https://github.com/bripkens/connect-history-api-fallback.git
/dresden-elektronik/deconz-rest-plugin.git | deCONZ REST-API plugin to control ZigBee devices \ https://github.com/dresden-elektronik/deconz-rest-plugin.git
/farhadi/html5sortable.git | Lightweight jQuery plugin to create sortable lists and grids using native H.. \ https://github.com/farhadi/html5sortable.git
/Peer5/ShareFest.git | Web based p2p file sharing built on WebRTC Data Channels API \ https://github.com/Peer5/ShareFest.git
/nntaoli-project/goex.git | Exchange Rest And WebSocket API For Golang  Wrapper support okcoin,okex,huo.. \ https://github.com/nntaoli-project/goex.git
/agraboso/redux-api-middleware.git | Redux middleware for calling an API. \ https://github.com/agraboso/redux-api-middleware.git
/fossasia/loklak_tweetheatmap.git | Heat map with tweets by search query using Loklak API and OpenLayers 3 \ https://github.com/fossasia/loklak_tweetheatmap.git
/vlucas/frisby.git | Frisby is a REST API testing framework built on Jest that makes testing API.. \ https://github.com/vlucas/frisby.git
/google/swiftshader.git | SwiftShader is a high-performance CPU-based implementation of the Vulkan gr.. \ https://github.com/google/swiftshader.git
/wwenj/tripRecord.git | APIVue+Expresswebapp \ https://github.com/wwenj/tripRecord.git
/gonzalo-bulnes/simple_token_authentication.git | Simple (but safe) token authentication for Rails apps or API with Devise. \ https://github.com/gonzalo-bulnes/simple_token_authentication.git
/naoufal/react-native-payments.git | Accept Payments with Apple Pay and Android Pay using the Payment Request AP.. \ https://github.com/naoufal/react-native-payments.git
/mikechambers/as3corelib.git |  An ActionScript 3 Library that contains a number of classes and utilities .. \ https://github.com/mikechambers/as3corelib.git
/codetheweb/tuyapi.git |  An easy-to-use API for devices that use Tuya's cloud services. Documentat.. \ https://github.com/codetheweb/tuyapi.git
/hapifhir/hapi-fhir.git |  HAPI FHIR - Java API for HL7 FHIR Clients and Servers \ https://github.com/hapifhir/hapi-fhir.git
/lukasoppermann/html5sortable.git | VanillaJS sortable lists and grids using native HTML5 drag and drop API. \ https://github.com/lukasoppermann/html5sortable.git
/RainManGO/vue3-composition-admin.git |   vue3 (Vue3 TS Vuex4  element-plus vue-i18n-next  composition-api.. \ https://github.com/RainManGO/vue3-composition-admin.git
/ebidel/filer.js.git | A wrapper library for the HTML5 Filesystem API what reuses UNIX commands (c.. \ https://github.com/ebidel/filer.js.git
/Theodeus/tuna.git | An audio effects library for the Web Audio API. \ https://github.com/Theodeus/tuna.git
/facebookarchive/instagram-ruby-gem.git | The official gem for the Instagram API \ https://github.com/facebookarchive/instagram-ruby-gem.git
/fossasia/susi_api_wrapper.git | SUSI AI API Wrapper http://susi.ai \ https://github.com/fossasia/susi_api_wrapper.git
/bacen/pix-api.git | API Pix: a API do Arranjo de Pagamentos Instantneos Brasileiro, Pix, criad.. \ https://github.com/bacen/pix-api.git
/Parsely/streamparse.git | Run Python in Apache Storm topologies. Pythonic API, CLI tooling, and a top.. \ https://github.com/Parsely/streamparse.git
/yurishkuro/opentracing-tutorial.git | A collection of tutorials for the OpenTracing API \ https://github.com/yurishkuro/opentracing-tutorial.git
/cosenary/Instagram-PHP-API.git | An easy-to-use PHP Class for accessing Instagram's API. \ https://github.com/cosenary/Instagram-PHP-API.git
/javiersantos/PiracyChecker.git | An Android library that prevents your app from being pirated / cracked usin.. \ https://github.com/javiersantos/PiracyChecker.git
/webrtc-for-the-curious/webrtc-for-the-curious.git | WebRTC for the Curious: Go beyond the APIs \ https://github.com/webrtc-for-the-curious/webrtc-for-the-curious.git
/spring-projects/spring-data-redis.git | Provides support to increase developer productivity in Java when using Redi.. \ https://github.com/spring-projects/spring-data-redis.git
/dghubble/go-twitter.git | Go Twitter REST and Streaming API v1.1 \ https://github.com/dghubble/go-twitter.git
/mirrorjs/mirror.git | A simple and powerful React framework with minimal API and zero boilerplate.. \ https://github.com/mirrorjs/mirror.git
/retep998/winapi-rs.git | Rust bindings to Windows API \ https://github.com/retep998/winapi-rs.git
/alemangui/pizzicato.git | Library to simplify the way you create and manipulate sounds with the Web A.. \ https://github.com/alemangui/pizzicato.git
/aws-samples/lambda-refarch-webapp.git | The Web Application reference architecture is a general-purpose, event-driv.. \ https://github.com/aws-samples/lambda-refarch-webapp.git
/Tamicer/Novate.git | A  safety client by Https for android,  (AndroidRetrofitRxJava.. \ https://github.com/Tamicer/Novate.git
/tdlib/telegram-bot-api.git | Telegram Bot API server  \ https://github.com/tdlib/telegram-bot-api.git
/sanko/Robinhood.git | Unofficial Documentation of Robinhood Trade's Private API \ https://github.com/sanko/Robinhood.git
/rserota/wad.git | Web Audio DAW.  Use the Web Audio API for dynamic sound synthesis.  It's li.. \ https://github.com/rserota/wad.git
/erupts/erupt.git |   Java  Admin  CURDAPI.. \ https://github.com/erupts/erupt.git
/JMPerez/spotify-web-api-js.git | A client-side JS wrapper for the Spotify Web API \ https://github.com/JMPerez/spotify-web-api-js.git
/twilio/twilio-python.git | A Python module for communicating with the Twilio API and generating TwiML. \ https://github.com/twilio/twilio-python.git
/gitbrent/PptxGenJS.git | Create PowerPoint presentations with a powerful, concise JavaScript API. \ https://github.com/gitbrent/PptxGenJS.git
/WP-API/node-wpapi.git | An isomorphic JavaScript client for the WordPress REST API \ https://github.com/WP-API/node-wpapi.git
/liferay/alloy-ui.git | Repo Moved. AlloyUI is a framework built on top of YUI3 (JavaScript) that u.. \ https://github.com/liferay/alloy-ui.git
/ssllabs/ssllabs-scan.git | A command-line reference-implementation client for SSL Labs APIs, designed .. \ https://github.com/ssllabs/ssllabs-scan.git
/MoyuScript/bilibili-api.git | API \ https://github.com/MoyuScript/bilibili-api.git
/henrylee2cn/faygo.git | Faygo is a fast and concise Go Web framework that can be used to develop hi.. \ https://github.com/henrylee2cn/faygo.git
/stripe/stripe-go.git | Go library for the Stripe API.     \ https://github.com/stripe/stripe-go.git
/daptin/daptin.git | Daptin - Backend As A Service - GraphQL/JSON-API Headless CMS \ https://github.com/daptin/daptin.git
/fossasia/fossasia-communities.git | FOSSASIA API Files of Communities in Asia \ https://github.com/fossasia/fossasia-communities.git
/microsoft/Win2D.git | Win2D is an easy-to-use Windows Runtime API for immediate mode 2D graphics .. \ https://github.com/microsoft/Win2D.git
/spotify/web-api-auth-examples.git | Basic examples to authenticate and fetch data using the Spotify Web API \ https://github.com/spotify/web-api-auth-examples.git
/multiprocessio/datastation.git | App to easily query, script, and visualize data from every database, file, .. \ https://github.com/multiprocessio/datastation.git
/pndurette/gTTS.git | Python library and CLI tool to interface with Google Translate's text-to-sp.. \ https://github.com/pndurette/gTTS.git
/robsontenorio/vue-api-query.git |  Elegant and simple way to build requests for REST API \ https://github.com/robsontenorio/vue-api-query.git
/sanathp/statusok.git | Monitor your Website and APIs from your Computer. Get Notified through Slac.. \ https://github.com/sanathp/statusok.git
/mikeash/MAObjCRuntime.git | ObjC wrapper for ObjC runtime API \ https://github.com/mikeash/MAObjCRuntime.git
/acode/FunctionScript.git | An API gateway and framework for turning functions into web services \ https://github.com/acode/FunctionScript.git
/httpcats/http.cat.git | :cat: HTTP Cats API \ https://github.com/httpcats/http.cat.git
/vthibault/roBrowser.git | roBrowser is a free and open-source implementation of the Ragnarok Online M.. \ https://github.com/vthibault/roBrowser.git
/google/aiyprojects-raspbian.git |  API libraries, samples, and system images for AIY Projects (Voice Kit and .. \ https://github.com/google/aiyprojects-raspbian.git
/YeDaxia/JApiDocs.git | A magical api documentation generator without annotation for springboot. [N.. \ https://github.com/YeDaxia/JApiDocs.git
/kcat/openal-soft.git | OpenAL Soft is a software implementation of the OpenAL 3D audio API. \ https://github.com/kcat/openal-soft.git
/crisdosyago/BrowserBox.git |  BrowserBox - Remote isolated browser API for security, automation visibil.. \ https://github.com/crisdosyago/BrowserBox.git
/googlemaps/google-maps-services-java.git | Java client library for Google Maps API Web Services \ https://github.com/googlemaps/google-maps-services-java.git
/metowolf/Meting.git | :cake: Wow, such a powerful music API framework \ https://github.com/metowolf/Meting.git
/diafygi/webcrypto-examples.git | Web Cryptography API Examples Demo: https://diafygi.github.io/webcrypto-exa.. \ https://github.com/diafygi/webcrypto-examples.git
/fossasia/api.fossasia.net.git | FOSSASIA API \ https://github.com/fossasia/api.fossasia.net.git
/songtianyi/wechat-go.git | go version wechat web api and message framework for building wechat robot \ https://github.com/songtianyi/wechat-go.git
/xCss/bing.git | Bing  API \ https://github.com/xCss/bing.git
/addyosmani/timing.js.git | Navigation Timing API measurement helpers \ https://github.com/addyosmani/timing.js.git
/monitoringartist/grafana-aws-cloudwatch-dashboards.git | :cloud: 30+ Grafana dashboards for AWS CloudWatch metrics: EC2, Lambda, S3,.. \ https://github.com/monitoringartist/grafana-aws-cloudwatch-dashboards.git
/Baseflow/flutter-permission-handler.git | Permission plugin for Flutter. This plugin provides a cross-platform (iOS, .. \ https://github.com/Baseflow/flutter-permission-handler.git
/bwapi/bwapi.git | Brood War API \ https://github.com/bwapi/bwapi.git
/TommyLemon/APIAuto.git |   HTTP  Mock .. \ https://github.com/TommyLemon/APIAuto.git
/cossacklabs/themis.git | Easy to use cryptographic framework for data protection: secure messaging w.. \ https://github.com/cossacklabs/themis.git
/nodejs/node-addon-api.git | Module for using Node-API from C++ \ https://github.com/nodejs/node-addon-api.git
/python-restx/flask-restx.git | Fork of Flask-RESTPlus: Fully featured framework for fast, easy and documen.. \ https://github.com/python-restx/flask-restx.git
/jeffbski/wait-on.git | wait-on is a cross-platform command line utility and Node.js API which will.. \ https://github.com/jeffbski/wait-on.git
/nntaoli-project/goex.git | Exchange Rest And WebSocket API For Golang  Wrapper support okcoin,okex,huo.. \ https://github.com/nntaoli-project/goex.git
/agraboso/redux-api-middleware.git | Redux middleware for calling an API. \ https://github.com/agraboso/redux-api-middleware.git
/fossasia/loklak_tweetheatmap.git | Heat map with tweets by search query using Loklak API and OpenLayers 3 \ https://github.com/fossasia/loklak_tweetheatmap.git
/vlucas/frisby.git | Frisby is a REST API testing framework built on Jest that makes testing API.. \ https://github.com/vlucas/frisby.git
/google/swiftshader.git | SwiftShader is a high-performance CPU-based implementation of the Vulkan gr.. \ https://github.com/google/swiftshader.git
/wwenj/tripRecord.git | APIVue+Expresswebapp \ https://github.com/wwenj/tripRecord.git
/gonzalo-bulnes/simple_token_authentication.git | Simple (but safe) token authentication for Rails apps or API with Devise. \ https://github.com/gonzalo-bulnes/simple_token_authentication.git
/glotcode/glot.git | Pastebin with runnable snippets and API \ https://github.com/glotcode/glot.git
/naoufal/react-native-payments.git | Accept Payments with Apple Pay and Android Pay using the Payment Request AP.. \ https://github.com/naoufal/react-native-payments.git
/fossasia/susi_desktop.git | Desktop Client for http://api.susi.ai \ https://github.com/fossasia/susi_desktop.git
/mikechambers/as3corelib.git |  An ActionScript 3 Library that contains a number of classes and utilities .. \ https://github.com/mikechambers/as3corelib.git
/codetheweb/tuyapi.git |  An easy-to-use API for devices that use Tuya's cloud services. Documentat.. \ https://github.com/codetheweb/tuyapi.git
/xamarin/Essentials.git | Essential cross platform APIs for your mobile apps. \ https://github.com/xamarin/Essentials.git
/hapifhir/hapi-fhir.git |  HAPI FHIR - Java API for HL7 FHIR Clients and Servers \ https://github.com/hapifhir/hapi-fhir.git
/lukasoppermann/html5sortable.git | VanillaJS sortable lists and grids using native HTML5 drag and drop API. \ https://github.com/lukasoppermann/html5sortable.git
/RainManGO/vue3-composition-admin.git |   vue3 (Vue3 TS Vuex4  element-plus vue-i18n-next  composition-api.. \ https://github.com/RainManGO/vue3-composition-admin.git
/ebidel/filer.js.git | A wrapper library for the HTML5 Filesystem API what reuses UNIX commands (c.. \ https://github.com/ebidel/filer.js.git
/Theodeus/tuna.git | An audio effects library for the Web Audio API. \ https://github.com/Theodeus/tuna.git
/facebookarchive/instagram-ruby-gem.git | The official gem for the Instagram API \ https://github.com/facebookarchive/instagram-ruby-gem.git
/fossasia/susi_api_wrapper.git | SUSI AI API Wrapper http://susi.ai \ https://github.com/fossasia/susi_api_wrapper.git
/bacen/pix-api.git | API Pix: a API do Arranjo de Pagamentos Instantneos Brasileiro, Pix, criad.. \ https://github.com/bacen/pix-api.git
/Parsely/streamparse.git | Run Python in Apache Storm topologies. Pythonic API, CLI tooling, and a top.. \ https://github.com/Parsely/streamparse.git
/yurishkuro/opentracing-tutorial.git | A collection of tutorials for the OpenTracing API \ https://github.com/yurishkuro/opentracing-tutorial.git
/cosenary/Instagram-PHP-API.git | An easy-to-use PHP Class for accessing Instagram's API. \ https://github.com/cosenary/Instagram-PHP-API.git
/javiersantos/PiracyChecker.git | An Android library that prevents your app from being pirated / cracked usin.. \ https://github.com/javiersantos/PiracyChecker.git
/webrtc-for-the-curious/webrtc-for-the-curious.git | WebRTC for the Curious: Go beyond the APIs \ https://github.com/webrtc-for-the-curious/webrtc-for-the-curious.git
/spring-projects/spring-data-redis.git | Provides support to increase developer productivity in Java when using Redi.. \ https://github.com/spring-projects/spring-data-redis.git
/dghubble/go-twitter.git | Go Twitter REST and Streaming API v1.1 \ https://github.com/dghubble/go-twitter.git
/mirrorjs/mirror.git | A simple and powerful React framework with minimal API and zero boilerplate.. \ https://github.com/mirrorjs/mirror.git
/retep998/winapi-rs.git | Rust bindings to Windows API \ https://github.com/retep998/winapi-rs.git
/alemangui/pizzicato.git | Library to simplify the way you create and manipulate sounds with the Web A.. \ https://github.com/alemangui/pizzicato.git
/OpenImageIO/oiio.git | Reading, writing, and processing images in a wide variety of file formats, .. \ https://github.com/OpenImageIO/oiio.git
/aws-samples/lambda-refarch-webapp.git | The Web Application reference architecture is a general-purpose, event-driv.. \ https://github.com/aws-samples/lambda-refarch-webapp.git
/Tamicer/Novate.git | A  safety client by Https for android,  (AndroidRetrofitRxJava.. \ https://github.com/Tamicer/Novate.git
/GitHub-Laziji/VBlog.git | GitHub API  \ https://github.com/GitHub-Laziji/VBlog.git
/dj-nitehawk/FastEndpoints.git | A light-weight REST Api framework for ASP.Net 6 that implements REPR (Reque.. \ https://github.com/dj-nitehawk/FastEndpoints.git
/netz98/n98-magerun.git | The swiss army knife for Magento developers, sysadmins and devops. The tool.. \ https://github.com/netz98/n98-magerun.git
/line/line-bot-sdk-python.git | LINE Messaging API SDK for Python \ https://github.com/line/line-bot-sdk-python.git
/gographics/imagick.git | Go binding to ImageMagick's MagickWand C API \ https://github.com/gographics/imagick.git
/dghubble/sling.git | A Go HTTP client library for creating and sending API requests \ https://github.com/dghubble/sling.git
/tschellenbach/Django-facebook.git | Facebook open graph api implementation using the Django web framework in py.. \ https://github.com/tschellenbach/Django-facebook.git
/stripe-archive/stripe-payments-demo.git | Sample store accepting universal payments on the web with Stripe Elements, .. \ https://github.com/stripe-archive/stripe-payments-demo.git
/ldapjs/node-ldapjs.git | LDAP Client and Server API for node.js \ https://github.com/ldapjs/node-ldapjs.git
/colmena/colmena.git | Free and Open Source  Full Stack RAPID API DEVELOPMENT | CURRENTLY UNMAINTA.. \ https://github.com/colmena/colmena.git
/gravitee-io/gravitee-api-management.git | Gravitee.io - OpenSource API Management \ https://github.com/gravitee-io/gravitee-api-management.git
/react-native-netinfo/react-native-netinfo.git | React Native Network Info API for Android & iOS \ https://github.com/react-native-netinfo/react-native-netinfo.git
