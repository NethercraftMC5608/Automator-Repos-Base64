/cloudflare/cfssl | CFSSL: Cloudflare's PKI and TLS toolkit \ https://github.com/cloudflare/cfssl.git
/XIU2/CloudflareSpeedTest | 「自选优选 IP」测试 Cloudflare CDN 延迟和速度，获取最快 IP (IPv4 / IPv6)！另外也支持其他 CDN / 网站 IP \ https://github.com/XIU2/CloudflareSpeedTest.git
/cloudflare/wrangler | 🤠   wrangle your Cloudflare Workers \ https://github.com/cloudflare/wrangler.git
/NewFuture/DDNS | :triangular_flag_on_post: 自动更新域名解析到本机IP(支持dnspod,阿里DNS,CloudFlare,华为云,DNSCO \ https://github.com/NewFuture/DDNS.git
/cloudflare/cloudflared | Cloudflare Tunnel client (formerly Argo Tunnel) \ https://github.com/cloudflare/cloudflared.git
/Anorov/cloudflare-scrape | A Python module to bypass Cloudflare's anti-bot page. \ https://github.com/Anorov/cloudflare-scrape.git
/cloudflare/miniflare |  Fully-local simulator for Cloudflare Workers \ https://github.com/cloudflare/miniflare.git
/panva/jose | "JSON Web Almost Everything" - JWA, JWS, JWE, JWT, JWK, JWKS with no depend \ https://github.com/panva/jose.git
/pirate/sites-using-cloudflare | :broken_heart: Archived list of domains using Cloudflare DNS at the time of \ https://github.com/pirate/sites-using-cloudflare.git
/ultrafunkamsterdam/undetected-chromedriver | Custom Selenium Chromedriver | Zero-Config | Passes ALL bot mitigation syst \ https://github.com/ultrafunkamsterdam/undetected-chromedriver.git
/ViRb3/wgcf |  Cross-platform, unofficial CLI for Cloudflare Warp \ https://github.com/ViRb3/wgcf.git
/VeNoMouS/cloudscraper | A Python module to bypass Cloudflare's anti-bot page. \ https://github.com/VeNoMouS/cloudscraper.git
/xiaoyang-sde/reflare | Lightweight and scalable reverse proxy and load balancing library built for \ https://github.com/xiaoyang-sde/reflare.git
/maple3142/GDIndex | A Google Drive Index built with Vue Running on CloudFlare Workers \ https://github.com/maple3142/GDIndex.git
/m0rtem/CloudFail | Utilize misconfigured DNS and old database records to find hidden IP's behi \ https://github.com/m0rtem/CloudFail.git
/jeessy2/ddns-go | 简单好用的DDNS。自动更新域名解析到公网IP(支持阿里云、腾讯云dnspod、Cloudflare、华为云) \ https://github.com/jeessy2/ddns-go.git
/flareact/flareact | Edge-rendered React framework built for Cloudflare Workers \ https://github.com/flareact/flareact.git
/christophetd/CloudFlair |  Find origin servers of websites behind CloudFlare by using Internet-wide  \ https://github.com/christophetd/CloudFlair.git
/cloudflare/cf-ui | :gem: Cloudflare UI Framework \ https://github.com/cloudflare/cf-ui.git
/lukeed/worktop | The next generation web framework for Cloudflare Workers \ https://github.com/lukeed/worktop.git
/cloudflare/sslconfig | Cloudflare's Internet facing SSL configuration \ https://github.com/cloudflare/sslconfig.git
/fscarmen/warp | WARP one-click script. Add an IPv4, IPv6 or dual-stack CloudFlare WARP netw \ https://github.com/fscarmen/warp.git
/TimothyYe/godns | A dynamic DNS client tool supports AliDNS, Cloudflare, Google Domains, DNSP \ https://github.com/TimothyYe/godns.git
/FlareSolverr/FlareSolverr | Proxy server to bypass Cloudflare protection \ https://github.com/FlareSolverr/FlareSolverr.git
/cloudflare/production-saas | (WIP) Example SaaS application built in public on the Cloudflare stack! \ https://github.com/cloudflare/production-saas.git
/P3TERX/warp | WARP 一键安装脚本 | Cloudflare WARP Installer | A Bash script that automatically  \ https://github.com/P3TERX/warp.sh.git
/MewX/light-novel-library_Wenku8_Android | [CASUALLY MAINTAINED] 轻小说文库 (Wenku8.com) 安卓版第三方公益App，始于2014年的Material Desig \ https://github.com/MewX/light-novel-library_Wenku8_Android.git
/cloudflare/cloudflare-docs | Cloudflare’s developer docs. \ https://github.com/cloudflare/cloudflare-docs.git
/timothymiller/cloudflare-ddns | ️ Dynamic DNS (DDNS) service based on Cloudflare! Access your home networ \ https://github.com/timothymiller/cloudflare-ddns.git
/cloudflare/cloudflare-blog | Cloudflare Blog code samples \ https://github.com/cloudflare/cloudflare-blog.git
/cirosantilli/china-dictatorship | 反中共政治宣传库。Anti Chinese government propaganda. 住在中国真名用户的网友请别给星星，不然你要被警察请喝茶。常见 \ https://github.com/cirosantilli/china-dictatorship.git
/cloudflare/workers-rs | Write Cloudflare Workers in 100% Rust via WebAssembly \ https://github.com/cloudflare/workers-rs.git
/cloudflare/cloudflare-go | Go library for the Cloudflare v4 API \ https://github.com/cloudflare/cloudflare-go.git
/eidam/cf-workers-status-page | Monitor your websites, showcase status including daily history, and get Sla \ https://github.com/eidam/cf-workers-status-page.git
/oznu/docker-cloudflare-ddns | A small amd64/ARM/ARM64 Docker image that allows you to use CloudFlare as a \ https://github.com/oznu/docker-cloudflare-ddns.git
/ddgth/cf2dns | 筛选出优质的Cloudflare IP，并使用域名服务商提供的API解析到不同线路以达到网站加速的效果,新增假墙防御方式 \ https://github.com/ddgth/cf2dns.git
/s0md3v/Blazy | Blazy is a modern login bruteforcer which also tests for CSRF, Clickjacking \ https://github.com/s0md3v/Blazy.git
/jychp/cloudflare-bypass | Bypass Coudflare bot protection using Cloudflare Workers \ https://github.com/jychp/cloudflare-bypass.git
/woniuzfb/iptv | 一键安装管理 FFmpeg / nginx / openresty / xray / v2ray / armbian /  proxmox ve /  \ https://github.com/woniuzfb/iptv.git
/cloudflare/worker-examples | Examples of Javascript you can run on Cloudflare’s worldwide network \ https://github.com/cloudflare/worker-examples.git
/cloudflare/circl | CIRCL: Cloudflare Interoperable Reusable Cryptographic Library \ https://github.com/cloudflare/circl.git
/xyTom/Url-Shorten-Worker | A URL Shortener created using Cloudflare worker \ https://github.com/xyTom/Url-Shorten-Worker.git
/codemanki/cloudscraper | --DEPRECATED --   Node.js library to bypass cloudflare's anti-ddos page \ https://github.com/codemanki/cloudscraper.git
/cloudflare/goflow | The high-scalability sFlow/NetFlow/IPFIX collector used internally at Cloud \ https://github.com/cloudflare/goflow.git
/kkkyg/CFwarp | Cloudflare WARP 多功能一键脚本，（自动识别WGCF与SOCKS5环境，同步循环Endpoint的IP，1：自定义设置刷新奈飞IP、自定 \ https://github.com/kkkyg/CFwarp.git
/micromatch/picomatch | Blazing fast and accurate glob matcher written JavaScript, with no dependen \ https://github.com/micromatch/picomatch.git
/mrh0wl/Cloudmare | Cloudflare, Sucuri, Incapsula real IP tracker. \ https://github.com/mrh0wl/Cloudmare.git
/dollarshaveclub/cloudworker | Run Cloudflare Worker scripts locally \ https://github.com/dollarshaveclub/cloudworker.git
/lspgn/edge-sql | Cloudflare Workers providing a SQL API \ https://github.com/lspgn/edge-sql.git
/cloudflare/cloudflare-php | PHP library for the Cloudflare v4 API \ https://github.com/cloudflare/cloudflare-php.git
/cloudflare/workers-graphql-server | Lightning-fast, globally distributed Apollo GraphQL server, deployed at th \ https://github.com/cloudflare/workers-graphql-server.git
/C0nw0nk/Nginx-Lua-Anti-DDoS | A Anti-DDoS script to protect Nginx web servers using Lua with a HTML Javas \ https://github.com/C0nw0nk/Nginx-Lua-Anti-DDoS.git
/cloudflare/wrangler-action | 🧙‍♀️ zero-config cloudflare workers application deployment using wrangler a \ https://github.com/cloudflare/wrangler-action.git
/mandatoryprogrammer/cloudflare_enum | Cloudflare DNS Enumeration Tool for Pentesters \ https://github.com/mandatoryprogrammer/cloudflare_enum.git
/taobataoma/meanTorrent | meanTorrent - MEAN.JS BitTorrent Private Tracker - Full-Stack JavaScript Us \ https://github.com/taobataoma/meanTorrent.git
/advaith1/activities | Discord slash command bot for opening voice channel activities, using Cloud \ https://github.com/advaith1/activities.git
/gdtool/cloudflare-workers-blog | A Blog Powered By Cloudflare Workers and KV  \ https://github.com/gdtool/cloudflare-workers-blog.git
/realByg/office-user-auto-create | 用 cloudflare worker 自助创建 office 账号 \ https://github.com/realByg/office-user-auto-create.git
/cloudflare/wrangler2 | ⛅️ The CLI for Cloudflare Workers® \ https://github.com/cloudflare/wrangler2.git
/Logflare/logflare | Never get surprised by a logging bill again. Centralized structured logging \ https://github.com/Logflare/logflare.git
/badafans/better-cloudflare-ip | 查找适合自己当前网络环境的优选cloudflare anycast IP \ https://github.com/badafans/better-cloudflare-ip.git
/cfworker/cfworker | A collection of packages optimized for Cloudflare Workers and service worke \ https://github.com/cfworker/cfworker.git
/K0p1-Git/cloudflare-ddns-updater | Dynamic DNS (DDNS) service based on Cloudflare! Access your home network re \ https://github.com/K0p1-Git/cloudflare-ddns-updater.git
/cloudflare/terraform-provider-cloudflare | Cloudflare Terraform Provider \ https://github.com/cloudflare/terraform-provider-cloudflare.git
/sleepwood/CF-Worker-Dir | A web directories base on Cloudflare worker. \ https://github.com/sleepwood/CF-Worker-Dir.git
/kasuganosoras/cloudflare-worker-blog | Cloudflare workers + Github 实现的动态博客系统，使用边缘计算，无需服务器 \ https://github.com/kasuganosoras/cloudflare-worker-blog.git
/joshuaavalon/SynologyCloudflareDDNS |  Cloudflare DDNS script for Synology \ https://github.com/joshuaavalon/SynologyCloudflareDDNS.git
/amodm/api-covid19-in | COVID Rest API for India data, using Cloudflare Workers \ https://github.com/amodm/api-covid19-in.git
/olixu/cloudflare-ip-ping | Ping all the ips of cloudflare. \ https://github.com/olixu/cloudflare-ip-ping.git
/Paul-Reed/cloudflare-ufw | Script to update UFW with Cloudflare IPs \ https://github.com/Paul-Reed/cloudflare-ufw.git
/wilsonzlin/edgesearch | Serverless full-text search with Cloudflare Workers, WebAssembly, and Roari \ https://github.com/wilsonzlin/edgesearch.git
/cloudflare/worker-typescript-template | ʕ •́؈•̀) TypeScript template for Cloudflare Workers \ https://github.com/cloudflare/worker-typescript-template.git
/Zibri/cloudflare-cors-anywhere | CORS "anywhere" proxy in a Cloudflare worker. DEMO at: https://test.cors.wo \ https://github.com/Zibri/cloudflare-cors-anywhere.git
/irazasyed/awesome-cloudflare | ⛅️ Curated list of awesome Cloudflare worker recipes, open-source projects, \ https://github.com/irazasyed/awesome-cloudflare.git
/NoahCardoza/CloudProxy | Proxy server to bypass Cloudflare protection. \ https://github.com/NoahCardoza/CloudProxy.git
/cloudflare/cloudflare-ingress-controller | A Kubernetes ingress controller for Cloudflare's Argo Tunnels \ https://github.com/cloudflare/cloudflare-ingress-controller.git
/Tai7sy/OneDriveFly | OneDrive Index Anywhere (QCloud SCF/Aliyun FC/Cloudflare Workers/Google Clo \ https://github.com/Tai7sy/OneDriveFly.git
/LINKIWI/cloudflare-ddns-client | Linux client for automatic dynamic DNS updates on CloudFlare-managed domain \ https://github.com/LINKIWI/cloudflare-ddns-client.git
/anywhichway/thunderclap | A key-value, indexed JSON, and graph database plus function oriented server \ https://github.com/anywhichway/thunderclap.git
/KyranRana/cloudflare-bypass | A new and improved PHP library which bypasses the Cloudflare IUAM page usin \ https://github.com/KyranRana/cloudflare-bypass.git
/kappataumu/letsencrypt-cloudflare-hook | Use CloudFlare with dehydrated (formerly letsencrypt.sh) and DNS challenges \ https://github.com/kappataumu/letsencrypt-cloudflare-hook.git
/mxplusb/cloudflare-sync | A nice to have, MIT-licensed tool for using Cloudflare as a dynamic DNS pro \ https://github.com/mxplusb/cloudflare-sync.git
/ScottHelme/CloudFlareDDNS | Create your own DDNS service with CloudFlare \ https://github.com/ScottHelme/CloudFlareDDNS.git
/cloudflare/keyless | Cloudflare's Keyless SSL Server Reference Implementation \ https://github.com/cloudflare/keyless.git
/cloudflare/gortr | The RPKI-to-Router server used at Cloudflare \ https://github.com/cloudflare/gortr.git
/yusukebe/hono | Hono[炎] - Ultrafast web framework for Cloudflare Workers. \ https://github.com/yusukebe/hono.git
/cloudflare/workers-types | TypeScript type definitions for authoring Cloudflare Workers. \ https://github.com/cloudflare/workers-types.git
/fardog/secureoperator | A DNS-protocol proxy for DNS-over-HTTPS providers, such as Google and Cloud \ https://github.com/fardog/secureoperator.git
/cloudflare/rustwasm-worker-template | A template for kick starting a Cloudflare Worker project using workers-rs.  \ https://github.com/cloudflare/rustwasm-worker-template.git
/greycatz/CloudUnflare | Reconnaissance Real IP address for Cloudflare Bypass \ https://github.com/greycatz/CloudUnflare.git
/cloudflare/go | Stable Go with Cloudflare (experimental) patches and backports from tip \ https://github.com/cloudflare/go.git
/analytically/haproxy-ddos | DDOS and attack resilient HAProxy configuration. To be used behind CloudFla \ https://github.com/analytically/haproxy-ddos.git
/gege-circle/home | 这里是GitHub的草场，也是戈戈圈爱好者的交流地，主要讨论动漫、游戏、科技、人文、生活等所有话题，欢迎各位小伙伴们在此讨论趣事。This is Gi \ https://github.com/gege-circle/home.git
/Netrvin/CFPMP | Cloudflare Partner Management Panel \ https://github.com/Netrvin/CFPMP.git
/captn3m0/hello-cloudflare | A public letter to Cloudflare to fix their snoopy vendor \ https://github.com/captn3m0/hello-cloudflare.git
/cheems/goindex-extended | A Google Drive Index, which has a lot of extra features, running on Cloudfl \ https://github.com/cheems/goindex-extended.git
/missuo/CloudflareWarp | Cloudflare Warp One Click Script \ https://github.com/missuo/CloudflareWarp.git
/cloudflare/cloudflare-docs-engine | A documentation engine built on Gatsby, powering Cloudflare’s docs https:// \ https://github.com/cloudflare/cloudflare-docs-engine.git
/jamesryanbell/cloudflare | CloudFlare API - PHP \ https://github.com/jamesryanbell/cloudflare.git
/cloudflare/cloudflare | Cloudflare ❤️ Open Source \ https://github.com/cloudflare/cloudflare.github.io.git
/kelseyhightower/docker-kubernetes-tls-guide | Step by step guide on how to secure Docker and Kubernetes using TLS with Cl \ https://github.com/kelseyhightower/docker-kubernetes-tls-guide.git
/skymethod/denoflare | Develop, test, and deploy Cloudflare Workers with Deno. \ https://github.com/skymethod/denoflare.git
/TulvL/cloudflare-ip-tester | Cloudflare IP Batch Test Tool including HTTP respond time, region detection \ https://github.com/TulvL/cloudflare-ip-tester.git
/crazy-max/docker-cloudflared | Cloudflared proxy-dns Docker image based on Alpine Linux \ https://github.com/crazy-max/docker-cloudflared.git
/cloudflare/saffron | The cron parser powering Cron Triggers on Cloudflare Workers \ https://github.com/cloudflare/saffron.git
/cloudflare/cloudflare-rs | Rust library for the Cloudflare v4 API \ https://github.com/cloudflare/cloudflare-rs.git
/cloudflare/1 | Cloudflare DNS resolver website. \ https://github.com/cloudflare/1.1.1.1.git
/SukkaW/cloudflare-workers-async-google-analytics | :cloud: The Cloudflare Workers implementation of an async Google Analytics \ https://github.com/SukkaW/cloudflare-workers-async-google-analytics.git
/coinkite/cloudfire | CloudFIRE – Decentralized Open-Source Replacement for Cloudflare + Pubnub \ https://github.com/coinkite/cloudfire.git
/CarlEdman/godaddy-ddns | A script for dynamically updating a GoDaddy DNS record. I use GoDaddy to ho \ https://github.com/CarlEdman/godaddy-ddns.git
/cloudflare/Cloudflare-WordPress | A Cloudflare plugin for WordPress \ https://github.com/cloudflare/Cloudflare-WordPress.git
/yulewang/cloudflare-api-v4-ddns | Cloudflare API v4 Dynamic DNS Update in Bash \ https://github.com/yulewang/cloudflare-api-v4-ddns.git
/LeeluPradhan/G-Index | Google Drive Directory Index Running on CloudFlare Workers [Search + DarkMo \ https://github.com/LeeluPradhan/G-Index.git
/robertcepa/toucan-js | Cloudflare Workers client for Sentry \ https://github.com/robertcepa/toucan-js.git
/netnr/workers | Cloudflare Workers \ https://github.com/netnr/workers.git
/lfaoro/flares | Flares  is a CloudFlare DNS backup tool \ https://github.com/lfaoro/flares.git
/landy22granatt/Kumpulan-Script-Termux | Ok, Langsung Saja Ke Materi. Sesuai Judul, Disini Saya Akan Memberikan Kump \ https://github.com/landy22granatt/Kumpulan-Script-Termux.git
/joshuaavalon/docker-cloudflare | Cloudflare DDNS minimal docker. \ https://github.com/joshuaavalon/docker-cloudflare.git
/JimmyLaurent/cloudflare-scraper | A package to bypass Cloudflare's protection \ https://github.com/JimmyLaurent/cloudflare-scraper.git
/SukkaW/cloudflare-block-bad-bot-ruleset | :vertical_traffic_light: Block malicious crawlers with Cloudflare Firewall  \ https://github.com/SukkaW/cloudflare-block-bad-bot-ruleset.git
/danielpigott/cloudflare-cli | CLI for interacting with Cloudflare \ https://github.com/danielpigott/cloudflare-cli.git
/cloudflare/cfnts | Cloudflare's implementation of the NTS protocol written in Rust \ https://github.com/cloudflare/cfnts.git
/monicahq/laravel-cloudflare | Add Cloudflare ip addresses to trusted proxies for Laravel. \ https://github.com/monicahq/laravel-cloudflare.git
/scaredos/cfresearch | A repository containing research from CloudFlare's Anti-DDoS challenges. \ https://github.com/scaredos/cfresearch.git
/dwisiswant0/cf-check | CloudFlare Checker written in Go \ https://github.com/dwisiswant0/cf-check.git
/lukeed/svelte-ssr-worker | A quick demo for rendering Svelte server-side (SSR), but within a Cloudflar \ https://github.com/lukeed/svelte-ssr-worker.git
/qdm12/dns | Docker DNS server on steroids to access DNS-over-TLS from Cloudflare, Googl \ https://github.com/qdm12/dns.git
/gja/cloudflare-worker-local | Run a Cloudflare Worker Locally \ https://github.com/gja/cloudflare-worker-local.git
/lyoshenka/cloudflare-ddns | Simple, free dynamic DNS via Cloudflare \ https://github.com/lyoshenka/cloudflare-ddns.git
/modosc/cloudflare-rails | fix request.ip and request.remote_ip in rails when using cloudflare \ https://github.com/modosc/cloudflare-rails.git
/caddy-dns/cloudflare | Caddy module: dns.providers.cloudflare \ https://github.com/caddy-dns/cloudflare.git
/cloudflare/serverless-cloudflare-workers | Serverless provider plugin for Cloudflare Workers \ https://github.com/cloudflare/serverless-cloudflare-workers.git
/cloudflare/db-connect | :rocket: Connect your SQL database to Cloudflare Workers \ https://github.com/cloudflare/db-connect.git
/mrikirill/SynologyDDNSCloudflareMultidomain | Synology DDNS Cloudflare service provider with multidomains and subdomains \ https://github.com/mrikirill/SynologyDDNSCloudflareMultidomain.git
/detroitenglish/pw-pwnage-cfworker | Deploy a Cloudflare Worker to sanely score users' new passwords with zxcvbn \ https://github.com/detroitenglish/pw-pwnage-cfworker.git
/Qv2ray/gun | Toy gRPC Tunnel over CloudFlare (Proof of Concept) \ https://github.com/Qv2ray/gun.git
/SageHack/cloud-buster | A Cloudflare resolver that works \ https://github.com/SageHack/cloud-buster.git
/pmeenan/cf-workers | Collection of Cloudflare Workers \ https://github.com/pmeenan/cf-workers.git
/RyuzakiH/CloudflareSolverRe | Cloudflare Javascript & reCaptcha challenge (I'm Under Attack Mode or IUAM) \ https://github.com/RyuzakiH/CloudflareSolverRe.git
/drittich/DnsTube | Access your computer from anywhere. DnsTube is a Windows .NET dynamic DNS c \ https://github.com/drittich/DnsTube.git
/Dheerajmadhukar/Lilly | Tool to find the real IP behind CDNs/WAFs like cloudflare using passive rec \ https://github.com/Dheerajmadhukar/Lilly.git
/cloudflare/cfrpki | Cloudflare's RPKI Toolbox \ https://github.com/cloudflare/cfrpki.git
/evyatarmeged/Humanoid | Node.js package to bypass CloudFlare's anti-bot JavaScript challenges \ https://github.com/evyatarmeged/Humanoid.git
/SunderJS/sunder | Sunder is a minimal server-side framework for building APIs and websites on \ https://github.com/SunderJS/sunder.git
/markusahlstrand/cloudworker-proxy | An api gateway for cloudflare workers \ https://github.com/markusahlstrand/cloudworker-proxy.git
/cloudflare/Cloudflare-CPanel | Provides a CPanel Plugin to allow one click Cloudflare setup. \ https://github.com/cloudflare/Cloudflare-CPanel.git
/socketry/cloudflare | An asynchronous Ruby wrapper for the CloudFlare V4 API.  \ https://github.com/socketry/cloudflare.git
/tsndr/cloudflare-worker-jwt | A lightweight JWT implementation with ZERO dependencies for Cloudflare Work \ https://github.com/tsndr/cloudflare-worker-jwt.git
/udacity/cloudflare-typescript-workers | Types and mocks for building a tested Typescript Cloudflare Worker, generat \ https://github.com/udacity/cloudflare-typescript-workers.git
/fscarmen/warp_unlock | WARP unlock stream media one-click script. Support IPv4, IPv6 or dual-stack \ https://github.com/fscarmen/warp_unlock.git
/thatjpk/cloudflare-ddns | Script for dynamically updating a CloudFlare DNS record. (Deprecated) \ https://github.com/thatjpk/cloudflare-ddns.git
/securityheaders/security-headers-cloudflare-worker | A Cloudflare Worker to enable Security Headers on your site. \ https://github.com/securityheaders/security-headers-cloudflare-worker.git
/jacob-ebey/remix-cloudflare-demo | A demo of Remix running on Cloudflare workers. \ https://github.com/jacob-ebey/remix-cloudflare-demo.git
/ViRb3/cloudflare-warp-wireguard-client | Generate WireGuard profile from Cloudflare Warp account \ https://github.com/ViRb3/cloudflare-warp-wireguard-client.git
/aschzero/hera | Automated secure tunnels for containers using Cloudflare Argo \ https://github.com/aschzero/hera.git
/detroitenglish/cloudflare-workers-webpack-boilerplate | A superbly simple, minimal-config template for building, bundling and deplo \ https://github.com/detroitenglish/cloudflare-workers-webpack-boilerplate.git
/BlueSkyXN/KIENG-FigureBed | image.kieng.cn 的仿站源码，支持Vercel，CloudFlare，Github等无服务器部署 \ https://github.com/BlueSkyXN/KIENG-FigureBed.git
/cloudflare/python-worker-hello-world | Python hello world for Cloudflare Workers \ https://github.com/cloudflare/python-worker-hello-world.git
/gh-tt/cloudflare-scanner | scanner cloudflare's ips export better ips \ https://github.com/gh-tt/cloudflare-scanner.git
/cloudflarearchive/Cloudflare-Tools | Tools which enable you to get the full benefit of using the Cloudflare serv \ https://github.com/cloudflarearchive/Cloudflare-Tools.git
/portable-cto/airtable-proxy-worker | A Cloudflare Worker that allows you to make secure requests to the Airtable \ https://github.com/portable-cto/airtable-proxy-worker.git
/mrbbot/slshx | ⚔️ Strongly-typed Discord commands on Cloudflare Workers \ https://github.com/mrbbot/slshx.git
/visibilityspots/dockerfile-cloudflared | run the cloudflared proxy-dns on port 54 using the DNS over HTTPS feature f \ https://github.com/visibilityspots/dockerfile-cloudflared.git
/sayem314/hooman | http interceptor to hoomanize cloudflare requests \ https://github.com/sayem314/hooman.git
/frandiox/vitessedge-template |  Opinionated Vite Starter Template with SSR in Cloudflare Workers \ https://github.com/frandiox/vitessedge-template.git
/cloudflare/worker-template | a template to kickstart your Cloudflare worker! \ https://github.com/cloudflare/worker-template.git
/luodaoyi/CloudFlarePartner | CloudFlare  partner   website with python and flask \ https://github.com/luodaoyi/CloudFlarePartner.git
/adinhodovic/terraform-cloudflare-maintenance | Terraform module to create a responsive Maintenance Page using Cloudflare W \ https://github.com/adinhodovic/terraform-cloudflare-maintenance.git
/cloudflare/workers-docs | ‍♀️ The documentation site for Cloudflare Workers \ https://github.com/cloudflare/workers-docs.git
/SharzyL/pastebin-worker | A pastebin based on Cloudflare worker, with friendly CLI usage and rich fea \ https://github.com/SharzyL/pastebin-worker.git
/Aslemammad/vite-plugin-cloudflare | Building Cloudflare workers is faster and easier using vite-plugin-cloudfl \ https://github.com/Aslemammad/vite-plugin-cloudflare.git
/lukeed/cfw | (WIP) A build and deploy utility for Cloudflare Workers. \ https://github.com/lukeed/cfw.git
/qkqpttgf/OneManager-cfworkerskv | 部署在cloudflare的workers中的OneManager。 \ https://github.com/qkqpttgf/OneManager-cfworkerskv.git
/zf1976/vertx-ddns | 基于 Vert.x 的 DDNS 解决方案。自动更新域名解析到本机IP， 支持的DNS服务商： Alidns(阿里云) 、 Dnspod(腾讯云) 、 \ https://github.com/zf1976/vertx-ddns.git
/reruin/workers | Cloudflare Workers Scripts \ https://github.com/reruin/workers.git
/nanodog/nano-cf-panel | A panel for CloudFlare partner and personal.(Ongoing development) \ https://github.com/nanodog/nano-cf-panel.git
/lablabs/cloudflare-exporter | Prometheus CloudFlare Exporter \ https://github.com/lablabs/cloudflare-exporter.git
/benbalter/pi-hole-cloudflared-docker-compose-ansible-caddy | Example configuration for using Pi-Hole, Cloudflared, Docker Compose, Ansib \ https://github.com/benbalter/pi-hole-cloudflared-docker-compose-ansible-caddy.git
/cloudflare/workers | The Cloudflare Workers website. \ https://github.com/cloudflare/workers.cloudflare.com.git
/cloudflare-apps/create-cloudflare-app | Cloudflare Apps boilerplate featuring Workers and DNS powered by Webpack an \ https://github.com/cloudflare-apps/create-cloudflare-app.git
/birkett/CloudFlare-DDNS-Updater | Dynamic DNS client for use with CloudFlare \ https://github.com/birkett/CloudFlare-DDNS-Updater.git
/cardigann/go-cloudflare-scraper | A golang http.Transport layer that uses Otto to solve Cloudflare challenges \ https://github.com/cardigann/go-cloudflare-scraper.git
/ostark/upper | Integrates Edge Caches like Fastly, KeyCDN, Cloudflare and Varnish with Cra \ https://github.com/ostark/upper.git
/cloudflare/doom-workers | Website and Message Router source code for the Multiplayer Doom on Cloudfla \ https://github.com/cloudflare/doom-workers.git
/codewithkristian/lilredirector | ⚡️  Redirector engine built for Cloudflare Workers \ https://github.com/codewithkristian/lilredirector.git
/serverless-dns/serverless-dns | The RethinkDNS resolver that deploys to Cloudflare Workers, Deno Deploy, an \ https://github.com/serverless-dns/serverless-dns.git
/alii/search | Cloudflare + Google = supercharged web surfing \ https://github.com/alii/search.git
/cloudflare/receipt-printer | Code to drive the receipt printer in the Cloudflare London office that outp \ https://github.com/cloudflare/receipt-printer.git
/dommmel/cloudflare-workers-basic-auth | Basic http auth via cloudflare workers \ https://github.com/dommmel/cloudflare-workers-basic-auth.git
/Darkseal/CORSflare | A lightweight JavaScript CORS Reverse Proxy designed to run in a Cloudflare \ https://github.com/Darkseal/CORSflare.git
/codewithkristian/cloudflare-workers-todos | A simple todo list application built with Cloudflare Workers and KV \ https://github.com/codewithkristian/cloudflare-workers-todos.git
/cloudflare/claire | A Cloudflare WebExtension \ https://github.com/cloudflare/claire.git
/devgianlu/cloudflare-bypass | A NodeJS tool to bypass Cloudflare IUAM v2. \ https://github.com/devgianlu/cloudflare-bypass.git
/sawankumar/Google-Drive-Index | A Google Drive Index Running on CloudFlare Workers. \ https://github.com/sawankumar/Google-Drive-Index.git
/edmundhung/remix-worker-template |  All-in-one remix starter template for Cloudflare Workers \ https://github.com/edmundhung/remix-worker-template.git
/Technomux/hackerpro | Hackerpro - All in One Hacking Tool for Linux & Android (Termux) Special fo \ https://github.com/Technomux/hackerpro.git
/KNawm/speed-cloudflare-cli |  Measure the speed and consistency of your internet connection using speed \ https://github.com/KNawm/speed-cloudflare-cli.git
/unixfox/pupflare | A webpage proxy that request through Chromium (puppeteer) - can be used to  \ https://github.com/unixfox/pupflare.git
/jakejarvis/cloudflare-purge-action | ️ GitHub Action to purge a website's cache via the Cloudflare API \ https://github.com/jakejarvis/cloudflare-purge-action.git
/cloudflare/workers-aws-template | Cloudflare Workers template for accessing AWS services such as DynamoDB and \ https://github.com/cloudflare/workers-aws-template.git
/cloudflare/linux | Cloudflare Linux Kernel Patches \ https://github.com/cloudflare/linux.git
/StarpTech/FastGraph | Smart GraphQL CDN on Cloudflare edges with zero configuration \ https://github.com/StarpTech/FastGraph.git
/kissgyorgy/cloudflare-dyndns | CloudFlare Dynamic DNS client \ https://github.com/kissgyorgy/cloudflare-dyndns.git
/gstuartj/cf-ddns | A simple client for automatically updating CloudFlare DNS with your current \ https://github.com/gstuartj/cf-ddns.sh.git
/kwhitley/itty-durable | Cloudflare Durable Objects + Itty Router = shorter code \ https://github.com/kwhitley/itty-durable.git
/Closty/duanwangzhi | Shorten your links without serves because it based on Cloudflare workers fu \ https://github.com/Closty/duanwangzhi.git
/ejcx/cf | Cloudflare CLI \ https://github.com/ejcx/cf.git
/aeleos/cloudflared | Cloudflare Tunnel Instructions and Template for Unraid \ https://github.com/aeleos/cloudflared.git
/lukeed/pages-fullstack | Demo SvelteKit application running on Cloudflare Pages \ https://github.com/lukeed/pages-fullstack.git
/cloudflare/logshare | logshare is a library & CLI client for retrieving logs from Cloudflare's En \ https://github.com/cloudflare/logshare.git
/postlight/cloudflare-worker-app-kit | ☁✨ A handy set of tools for creating a Cloudflare Worker app. \ https://github.com/postlight/cloudflare-worker-app-kit.git
/COVID19Tracking/covid-tracking-api | COVID-19 Rest & GraphQL API for US data, using Cloudflare Workers \ https://github.com/COVID19Tracking/covid-tracking-api.git
/yzy613/ddns-watchdog | 简单快速的可常驻的 Dynamic DNS 客户端，自动更新域名解析记录值。现已支持 DNSPod AliDNS(阿里云 DNS) Cloudflar \ https://github.com/yzy613/ddns-watchdog.git
/GitbookIO/proxies-on-cloudflare | Proxies in Cloudflare Workers \ https://github.com/GitbookIO/proxies-on-cloudflare.git
/wehkamp/docker-prometheus-cloudflare-exporter | Cloudflare exporter for Prometheus \ https://github.com/wehkamp/docker-prometheus-cloudflare-exporter.git
/jorgelbg/dashflare | ‍♀️ Open Source and privacy-focused analytics solution.  Advanced monito \ https://github.com/jorgelbg/dashflare.git
/clemfromspace/scrapy-cloudflare-middleware | A Scrapy middleware to bypass the CloudFlare's anti-bot protection \ https://github.com/clemfromspace/scrapy-cloudflare-middleware.git
/jordantrizz/cloudflare-cli | CLI utility managing CloudFlare services using CloudFlare API \ https://github.com/jordantrizz/cloudflare-cli.git
/skorokithakis/django-cloudflare-push | A piece of middleware that uses Cloudflare's HTTP/2 Push to push static med \ https://github.com/skorokithakis/django-cloudflare-push.git
/fffonion/cloudflare-partner-cli | Set CNAME to use Cloudflare using the partner program \ https://github.com/fffonion/cloudflare-partner-cli.git
/lebinh/cloudflare-workers | My collection of Cloudflare Workers scripts: https://developers.cloudflare. \ https://github.com/lebinh/cloudflare-workers.git
/cloudflare/workers-graphql-gateway-example | GraphQL running on Cloudflare Workers \ https://github.com/cloudflare/workers-graphql-gateway-example.git
/jlxw/geoip | Free and easy geoip API thanks to Cloudflare and Heroku. \ https://github.com/jlxw/geoip.git
/navaneethkm004/warp-plus | Get free WARP+ GBs in CloudFlare's 1.1.1.1!! \ https://github.com/navaneethkm004/warp-plus.git
/tuhinpal/CloudflareDB | The low latency database powered by Cloudflare Worker and KV \ https://github.com/tuhinpal/CloudflareDB.git
/sebdesign/artisan-cloudflare | Laravel artisan commands for CloudFlare \ https://github.com/sebdesign/artisan-cloudflare.git
/astei/crafthead | Super scalable Minecraft avatar generation, built on Cloudflare Workers \ https://github.com/astei/crafthead.git
/rkusa/do-sqlite | [Experimental] Persist SQLite in a Cloudflare Durable Object \ https://github.com/rkusa/do-sqlite.git
/free-gx/cf-agent | Cloudflare Worker 代理联网 \ https://github.com/free-gx/cf-agent.git
/Dandelionss/CloudFlare-Workers | 储存一些CloudFlare Workers脚本 \ https://github.com/Dandelionss/CloudFlare-Workers.git
/wherelse/cloudflare-ddns-script | CloudFlare ddns / 树莓派IPV6 DDNS解决方案 \ https://github.com/wherelse/cloudflare-ddns-script.git
/DigitalOptimizationGroup/cloudflare-edge-proxy | A Cloudflare worker script used to enable a/b testing, canary releasing, ga \ https://github.com/DigitalOptimizationGroup/cloudflare-edge-proxy.git
/Machou/Cloudflare-Block | Cloudflare Blocking \ https://github.com/Machou/Cloudflare-Block.git
/XMD0718/cloudflare-block-bad-bot-ruleset | :vertical_traffic_light: Block malicious crawlers with Cloudflare Firewall  \ https://github.com/XMD0718/cloudflare-block-bad-bot-ruleset.git
/gja/create-cloudflare-worker | A starter kit for building a Cloudflare Worker \ https://github.com/gja/create-cloudflare-worker.git
/marc1307/tailscale-cloudflare-dnssync | Syncs Tailscale host IPs to a cloudflare hosted dns zone \ https://github.com/marc1307/tailscale-cloudflare-dnssync.git
/tsndr/cloudflare-worker-router | A super lightweight router (3.6 kB) with middleware support and ZERO depend \ https://github.com/tsndr/cloudflare-worker-router.git
/gr2m/cloudflare-worker-github-oauth-login | Use a Cloudflare worker for GitHub's OAuth login flow \ https://github.com/gr2m/cloudflare-worker-github-oauth-login.git
/DonnchaC/cloudflare-tor-whitelister | Whitelist Tor exit relays to allowing Tor users access your CloudFlare-prot \ https://github.com/DonnchaC/cloudflare-tor-whitelister.git
/magicdude4eva/PiHoleCloudFlareD | Raspberry Pi setup with Pi-Hole, CloudflareD, DHCP as the ultimate Ad-block \ https://github.com/magicdude4eva/PiHoleCloudFlareD.git
/alphabt/asuswrt-merlin-ddns-cloudflare | CloudFlare DDNS update script for Asuswrt-Merlin \ https://github.com/alphabt/asuswrt-merlin-ddns-cloudflare.git
/zhkrb/cloudflare-scrape-Android | A tool to bypass the Cloudflare DDOS page \ https://github.com/zhkrb/cloudflare-scrape-Android.git
/willswire/unifi-cloudflare-ddns | Cloudflare DDNS (Dynamic DNS) support for UniFi OS \ https://github.com/willswire/unifi-cloudflare-ddns.git
/jiuqi9997/autouam | 通过检测系统负载（cpu或load）自动开启cloudflare UAM和challenge质询（验证码） \ https://github.com/jiuqi9997/autouam.git
/polynimbus/polynimbus | Multi-cloud infrastructure inventory and management tool, supporting AWS, G \ https://github.com/polynimbus/polynimbus.git
/sagi/workers-jwt | Generate JWTs on Cloudflare Workers using the WebCrypto API \ https://github.com/sagi/workers-jwt.git
/codewithkristian/workers-auth0-example | ‍♀️ auth0 authorization/authentication example inside of cloudflare worke \ https://github.com/codewithkristian/workers-auth0-example.git
/FlareSolverr/FlareSolverrSharp | FlareSolverr .Net / Proxy server to bypass Cloudflare protection \ https://github.com/FlareSolverr/FlareSolverrSharp.git
/judge2020/cloudflare-file-hosting | Use Cloudflare (Workers) as a file host! \ https://github.com/judge2020/cloudflare-file-hosting.git
/DigitalOptimizationGroup/cloudflare-worker-preact-pwa | Cloudflare worker running a Preact Progressive Web App \ https://github.com/DigitalOptimizationGroup/cloudflare-worker-preact-pwa.git
/realByg/cfworker-kv-image-hosting | Cloudflare workers KV 图床 \ https://github.com/realByg/cfworker-kv-image-hosting.git
/nanqinlang-script/CloudFlare_DNS_Record | Script to modify DNS Record via CloudFlare \ https://github.com/nanqinlang-script/CloudFlare_DNS_Record.git
/Cherry/placeholders | Generate custom placeholder images, powered by Cloudflare Workers in 200+ e \ https://github.com/Cherry/placeholders.dev.git
/pavlodvornikov/aiocfscrape | A simple async Python module to bypass Cloudflare&'s anti-bot page. Based o \ https://github.com/pavlodvornikov/aiocfscrape.git
/AmirAzodi/cloudflare_ddns | Python-based Dynamic DNS client for CloudFlare. \ https://github.com/AmirAzodi/cloudflare_ddns.git
/troyhunt/password-purgatory-api | This is the Cloudflare Worker public API for deliberately making password c \ https://github.com/troyhunt/password-purgatory-api.git
/Kamikadze4GAME/cloudflare-bypasser | A simple Node.js module to bypass Cloudflare anti-DDOS page \ https://github.com/Kamikadze4GAME/cloudflare-bypasser.git
/mcblum/ddclient-cloudflare-ubuntu | Install ddclient on Ubuntu and configure for Cloudflare \ https://github.com/mcblum/ddclient-cloudflare-ubuntu.git
/threepointone/react-lazy-ssr-workers | react 18's streams running on cloudflare workers  \ https://github.com/threepointone/react-lazy-ssr-workers.git
/cloudflare/cloudflare-grafana-app | Cloudflare Grafana App allows for the collection and graphing of Cloudflare \ https://github.com/cloudflare/cloudflare-grafana-app.git
/markusahlstrand/cloudworker-router | A minimal router for cloudflare workers \ https://github.com/markusahlstrand/cloudworker-router.git
/Leystryku/LeySourceEngineProxyServ | Ley Proxy Servers for Source engine servers - Zyre. Think of cloudflare but \ https://github.com/Leystryku/LeySourceEngineProxyServ.git
/Misaka-blog/argo-tunnel-script | CloudFlare Argo Tunnel 1key script \ https://github.com/Misaka-blog/argo-tunnel-script.git
/coaxke/CloudFlareWorkersMaintenance | Cloudflare workers maintenance example \ https://github.com/coaxke/CloudFlareWorkersMaintenance.git
/morgangallant/cloudflaredd | Dynamic DNS for Cloudflare using Google STUN Servers \ https://github.com/morgangallant/cloudflaredd.git
/hodgef/apiker |  Create Serverless APIs with Cloudflare Workers, Durable Objects & Wrangle \ https://github.com/hodgef/apiker.git
/steven52880/MyCloudflareScanner | Cloudflare IP扫描工具 \ https://github.com/steven52880/MyCloudflareScanner.git
/jgrahamc/ttfb | CloudFlare TTFB Test Server \ https://github.com/jgrahamc/ttfb.git
/jueinin/v2ray-websocket-nginx-cloudflare-CDN | 一个v2ray+websocket+nginx+cloudflare CDN的简单教程，人人为我，我为人人 \ https://github.com/jueinin/v2ray-websocket-nginx-cloudflare-CDN.git
/kitten/bunpkg | A proof of concept clone of Unpkg running on Cloudflare Workers \ https://github.com/kitten/bunpkg.git
/laoxong/CloudflareCustomPages | Cloudflare Pages \ https://github.com/laoxong/CloudflareCustomPages.git
/cloudflare/Cloudflare-Magento | A Cloudflare plugin for Magento2. \ https://github.com/cloudflare/Cloudflare-Magento.git
/cloudflarearchive/cfapp_sample | A Sample Cloudflare App \ https://github.com/cloudflarearchive/cfapp_sample.git
/jacobPARIS/remix-cloudflare-prisma | An example of prisma working on cloudflare pages with Remix \ https://github.com/jacobPARIS/remix-cloudflare-prisma.git
/nomadcoders/carrot-market | Serverless Carrot Market Clone using NextJS, Tailwind, Prisma, PlanetScale  \ https://github.com/nomadcoders/carrot-market.git
/cloudflare/worker-template-postgres | Reference demo and modified PostgreSQL driver to connect Cloudflare Workers \ https://github.com/cloudflare/worker-template-postgres.git
/STEAM-Lab/Cloudflare-Chinese-Page | 自定义Cloudflare为中文页面，依据Cloudflare官方的界面源码进行翻译。可以自己编辑其中的文字。避免了部分访问者因不了解英文说明而直接关 \ https://github.com/STEAM-Lab/Cloudflare-Chinese-Page.git
/cloudflarearchive/ipfs-ext | Validates IPFS resources served by Cloudflare's gateway. \ https://github.com/cloudflarearchive/ipfs-ext.git
/samuelcolvin/edge-mock | Tools for testing and developing CloudFlare worker apps. \ https://github.com/samuelcolvin/edge-mock.git
/simonpainter/pyflare | Updates Cloudflare with current IP \ https://github.com/simonpainter/pyflare.git
/pixiv-cat/pixivcat-cloudflare-workers | Pixiv.cat on Cloudflare Workers \ https://github.com/pixiv-cat/pixivcat-cloudflare-workers.git
/brenner-tobias/addon-cloudflared | Connect remotely to your Home Assistant instance without opening any ports  \ https://github.com/brenner-tobias/addon-cloudflared.git
/wojons/cloudflare-lb | Use cloudflare as a load balancer  \ https://github.com/wojons/cloudflare-lb.git
/VandyHacks/vhl | custom domain link shortener using cloudflare workers + kv \ https://github.com/VandyHacks/vhl.ink.git
/ANK1036Official/Cloudcheck | Checks using a test string if a Cloudflare DNS bypass is possible using Clo \ https://github.com/ANK1036Official/Cloudcheck.git
/blackjid/inadyn-cloudflare | Cloudflare Dynamic DNS backend for Inadyn. To use with Unifi Dream Machine  \ https://github.com/blackjid/inadyn-cloudflare.git
/eldridgea/lil-link | A shortlink system built on Cloudflare workers \ https://github.com/eldridgea/lil-link.git
/SunYufei/workers-dav | 使用 Cloudflare Workers 为 Google Drive 提供 WebDAV 服务 / WebDAV supports for Goo \ https://github.com/SunYufei/workers-dav.git
/hyecheol123/Cloudflare-Public-Dynamic-IP-Update | Updating public dynamic IP address to existing cloudflare DNS record \ https://github.com/hyecheol123/Cloudflare-Public-Dynamic-IP-Update.git
/ipfs-shipyard/dnslink-cloudflare | Update dnslink TXT records in Cloudflare \ https://github.com/ipfs-shipyard/dnslink-cloudflare.git
/adamschwartz/generate | Open-source tool for generate PDF invoices with Cloudflare Workers. \ https://github.com/adamschwartz/generate.invoice.workers.dev.git
/leighmcculloch/middleman-cdn | Middleman extension automating invalidation of CloudFlare, MaxCDN, AWS Clou \ https://github.com/leighmcculloch/middleman-cdn.git
/xorilog/cloudflare-dns-action | A GitHub action to set a DNS record using Cloudflare on push to the master  \ https://github.com/xorilog/cloudflare-dns-action.git
/adamschwartz/lazy | Lazily generate PDF using Cloudflare Workers. \ https://github.com/adamschwartz/lazy.invoice.workers.dev.git
/supaflare/supaflare | URL shortener / redirection service powered by Supabase, Cloudflare Workers \ https://github.com/supaflare/supaflare.git
/tripflex/cpsetup | Intuitive bash/shell script to setup and harden/configure cPanel CentOS/RHE \ https://github.com/tripflex/cpsetup.git
/sineverba/cfhookbash | Cloudflare hook bash for dehydrated - DNS-01 Challenge Let's Encrypt \ https://github.com/sineverba/cfhookbash.git
/tlianza/pigeon | Sentry Client for Cloudflare Workers \ https://github.com/tlianza/pigeon.git
/karek314/ddos-deflate-nginx-cloudflare | This is ddos-deflate version made to mitigate Layer 7 dos/ddos attacks - ma \ https://github.com/karek314/ddos-deflate-nginx-cloudflare.git
/dcerisano/cloudflare-dynamic-dns | Ditch your third-party DDNS service! Cloudflare DDNS curl scripts that call \ https://github.com/dcerisano/cloudflare-dynamic-dns.git
/peter-tharwat/Cloudflare-Blocking-Firewall-PHP | Cloudflare Blocking Firewall PHP (Block and unBlock IP) \ https://github.com/peter-tharwat/Cloudflare-Blocking-Firewall-PHP.git
/hronro/cf-download-proxy | A file download proxy service powered by Cloudflare Workers \ https://github.com/hronro/cf-download-proxy.git
/cloudflare/securitytxt-worker | The worker that serves Cloudflare's security.txt! \ https://github.com/cloudflare/securitytxt-worker.git
/Erisa/cloudflared-docker | Simple Alpine-built scratch-runtime Dockerfile for cloudflared, with suppor \ https://github.com/Erisa/cloudflared-docker.git
/aoaostar/v8cdn | v8cdn - 一个cloudflare partner面板 \ https://github.com/aoaostar/v8cdn.git
/mantvydasb/Invoke-PowerCloud | Deliver powershell paylods via DNS TXT via CloudFlare using PowerShell \ https://github.com/mantvydasb/Invoke-PowerCloud.git
/outline/acm | Automatic wildcard certificate management for Cloudflare and Heroku \ https://github.com/outline/acm.git
/johnmccuk/cloudflare-ip-security-group-update | Lambda function to retrieve Cloudflare's IP address list and update the spe \ https://github.com/johnmccuk/cloudflare-ip-security-group-update.git
/kelvingakuo/fycharts | Unofficial Spotify Charts API. Get any and all data for top 200 and viral 5 \ https://github.com/kelvingakuo/fycharts.git
/tina-hello/doh-cf-workers | DNS-over-HTTPS proxy on Cloudflare Workers \ https://github.com/tina-hello/doh-cf-workers.git
/5aaee9/Dnsflare | Edit cloudflare domain dns settings \ https://github.com/5aaee9/Dnsflare.git
/s045pd/AntiCloudFlare | 对抗cloudflare载入页反爬虫防护（已失效） \ https://github.com/s045pd/AntiCloudFlare.git
/irazasyed/dns-zone-files | ⛅️ DNS Zone Files ready to import on CloudFlare for easy configurations of  \ https://github.com/irazasyed/dns-zone-files.git
/replicatedhq/kubeflare | A Kubernetes Operator to manage Cloudflare settings via a declarative Kuber \ https://github.com/replicatedhq/kubeflare.git
/azu/memory-note | Fast memory note on CDN edge. Cloudflare Workers KV/GitHub Projects as back \ https://github.com/azu/memory-note.git
/SunderJS/sunder-worker-template | Template for Sunder in Cloudflare worker with Typescript, ESBuild and Jest \ https://github.com/SunderJS/sunder-worker-template.git
/aress31/flarequench | Burp Suite plugin that adds additional checks to the passive scanner to rev \ https://github.com/aress31/flarequench.git
/cloudflare/cloudflare-access-for-atlassian | Authenticate Atlasssian products when using Cloudflare Access \ https://github.com/cloudflare/cloudflare-access-for-atlassian.git
/anderly/cloudflare-worker-routing | A simple Cloudflare Worker with built-in routing \ https://github.com/anderly/cloudflare-worker-routing.git
/elefr3n/real_ip_discover | Bypass Cloudflare getting real ip address bruteforcing ipv4 ranges \ https://github.com/elefr3n/real_ip_discover.git
/codewithkristian/repo-hunt | Example project showing how to build a full-stack serverless application wi \ https://github.com/codewithkristian/repo-hunt.git
/codewithkristian/supabase-workers-proxy | Proof-of-concept for making API requests to Supabase in Cloudflare Workers \ https://github.com/codewithkristian/supabase-workers-proxy.git
/customink/actionpack-cloudflare | Allow Rails request.remote_ip to defer to CloudFlare's connecting IP. \ https://github.com/customink/actionpack-cloudflare.git
/cloudflare-apps/ideas | A list of Cloudflare App Ideas (in Issues) \ https://github.com/cloudflare-apps/ideas.git
/pulumi/pulumi-cloudflare | Pulumi's Cloudflare package, providing multi-language infrastructure as cod \ https://github.com/pulumi/pulumi-cloudflare.git
/codewithkristian/react-edge-ssr | An example of React + server-side rendering on the edge, using Cloudflare W \ https://github.com/codewithkristian/react-edge-ssr.git
/apkcombo/apkcombo-vpn | APKCombo VPN - CloudFlare Warp+ VPN for Windows \ https://github.com/apkcombo/apkcombo-vpn.git
/guided-hacking/cfautouam | Automatically enables CloudFlare Under Attack Mode - Bash Script \ https://github.com/guided-hacking/cfautouam.git
/jonegerton/cloudflare-ddns | Scripts for updating the Cloudflare DDNS Api \ https://github.com/jonegerton/cloudflare-ddns.git
/yani/PHP-v8js-CloudFlare-bypass | A CloudFlare bypass that makes use of the v8 javascript engine for PHP \ https://github.com/yani/PHP-v8js-CloudFlare-bypass.git
/TypistTech/trellis-cloudflare-origin-ca | Add Cloudflare Origin CA to Trellis as a SSL provider \ https://github.com/TypistTech/trellis-cloudflare-origin-ca.git
/CangShui/CloudflareCustomPages | My Cloudflare Custom Pages ,It is Beautiful! \ https://github.com/CangShui/CloudflareCustomPages.git
/woniuzfb/cloudflare-fping | ping all cloudflare ips to find the best ip. 一键自选 cloudflare 最优 IP 并测速 \ https://github.com/woniuzfb/cloudflare-fping.git
/cloudflare-api/python-cloudflare | Python wrapper for the CloudFlare Client API \ https://github.com/cloudflare-api/python-cloudflare.git
/tuhinpal/amazon-scraper | Serverless Amazon India Scraper with search and product API, made with Clou \ https://github.com/tuhinpal/amazon-scraper.git
/zingz0r/CloudFlare | .NET client for communication with the CloudFlare service API. \ https://github.com/zingz0r/CloudFlare.Client.git
/splitbee/favicon-resolver | Get the favicon from an URL utilizing cloudflare workers \ https://github.com/splitbee/favicon-resolver.git
/dmcnmr/vue-ssr-cloudflare-workers-template | Server-rendered Vue.js app deployed to Cloudflare Workers \ https://github.com/dmcnmr/vue-ssr-cloudflare-workers-template.git
/TypistTech/sunny | Automatically purge Cloudflare cache, including cache everything rules. \ https://github.com/TypistTech/sunny.git
/A5rocks/slash-worker | A Cloudflare Workers thing for your Discord Slash Commands. \ https://github.com/A5rocks/slash-worker.git
/cloudflare/deploy | ✨ Deploy Cloudflare Workers applications with (almost) no-config, using Git \ https://github.com/cloudflare/deploy.workers.cloudflare.com.git
/estafette/estafette-cloudflare-dns | Kubernetes controller to set and update dns records in Cloudflare for annot \ https://github.com/estafette/estafette-cloudflare-dns.git
/vberlier/poll | Cloudflare worker for embedding polls anywhere. \ https://github.com/vberlier/poll.git
/gigili/Cloudflare-dns-update | Allows me to update my CloudFlare dns record so that I can have access to m \ https://github.com/gigili/Cloudflare-dns-update.git
/dvershinin/cloudflareddns | DDNS with Cloudflare \ https://github.com/dvershinin/cloudflareddns.git
/ashleyconnor/sveltekit-supabase-demo | Demo application using SvelteKit, Supabase and Cloudflare Workers \ https://github.com/ashleyconnor/sveltekit-supabase-demo.git
/KawaiiZapic/HidePortWorker | A worker script for Cloudflare to hide your source server port,support load \ https://github.com/KawaiiZapic/HidePortWorker.git
/Tsuk1ko/cfworker-url-shortener | 部署在 Cloudflare Workers 的短网址服务 \ https://github.com/Tsuk1ko/cfworker-url-shortener.git
/borderless/worker-graphql | GraphQL server for worker environments (e.g. Cloudflare Workers) \ https://github.com/borderless/worker-graphql.git
/eidam/personal-zero-trust-hashicorp-vault | Cloudflare for Teams + HashiCorp Vault = Zero Trust Love \ https://github.com/eidam/personal-zero-trust-hashicorp-vault.git
/jbaxleyiii/apollo-server-cloudflare | An example application showing how to use ApolloServer with Cloudflare work \ https://github.com/jbaxleyiii/apollo-server-cloudflare.git
/zszszszsz/ | # # Automatically generated file; DO NOT EDIT. # OpenWrt Configuration # CO \ https://github.com/zszszszsz/.config.git
/cloudflare/salt-cloudflare | Cloudflare salt module allows you to manage zones on Cloudflare from salt. \ https://github.com/cloudflare/salt-cloudflare.git
/firstred/plesk-cloudflare | Cloudflare DNS extension for Plesk 17.8+ \ https://github.com/firstred/plesk-cloudflare.git
/jtsalva/cloudmare | Cloudflare Manager | Android Mobile App \ https://github.com/jtsalva/cloudmare.git
/MachineITSvcs/Cloudflare-DDNS-Update | Advanced Dynamic DNS Update Script for Cloudflare \ https://github.com/MachineITSvcs/Cloudflare-DDNS-Update.git
/jaymoulin/guzzlehttp-cloudflare | Guzzle middleware to pass through Cloudflare protection \ https://github.com/jaymoulin/guzzlehttp-cloudflare.git
/Macrometacorp/tutorial-cloudflare-bookstore | e-commerce at the edge: a full stack e-commerce example  using Macrometa an \ https://github.com/Macrometacorp/tutorial-cloudflare-bookstore.git
/LussacZheng/dandanplay-resource-service | 弹弹play 资源搜索节点 API 实现，基于 Cloudflare Workers 或 Golang 的两种实现。 || API implement \ https://github.com/LussacZheng/dandanplay-resource-service.git
/fauna-labs/fauna-workers | A template for building fast, globally distributed applications using Cloud \ https://github.com/fauna-labs/fauna-workers.git
/Logflare/cloudflare-app | The Cloudflare app for Logflare \ https://github.com/Logflare/cloudflare-app.git
/jroyal/cloudflare-workers-kv-viewer | Cloudflare Workers KV interactive viewer \ https://github.com/jroyal/cloudflare-workers-kv-viewer.git
/rajtatata/cloudflare-worker-rest-api | A cloudflare worker module which helps building REST Api quickly and easily \ https://github.com/rajtatata/cloudflare-worker-rest-api.git
/ryanmcgrath/1 | Experimenting with cloning CloudFlare's 1.1.1.1 app as a macOS status bar a \ https://github.com/ryanmcgrath/1.1.1.1-macOS.git
/alloc/viteflare | Cloudflare workers meet Vite plugins \ https://github.com/alloc/viteflare.git
/drewfarris/sample-cfssl-ca | Sample Cloudflare SSL (CFSSL) Certificate Authority \ https://github.com/drewfarris/sample-cfssl-ca.git
/EngrZhou/CloudFlare-DDNS-Script | CloudFlare-DDNS-Script Support LEDE/Openwrt with IPv4/IPv6 \ https://github.com/EngrZhou/CloudFlare-DDNS-Script.git
/cloudflare/cloudflare-plugin-frontend | A React/Redux front-end for Cloudflare's WordPress, Magento2, and cPanel pl \ https://github.com/cloudflare/cloudflare-plugin-frontend.git
/robinbraemer/CloudflareAPI | The most complete and extensible Cloudflare API v4 client library for Java. \ https://github.com/robinbraemer/CloudflareAPI.git
/viertaxa/cup | CUP - Cloudflare (DNS) Updater Program \ https://github.com/viertaxa/cup.git
/bajpangosh/High-Traffic-wordpress-server-configuration | High Traffic WordPress server configuration Nginx (updated)  PHP 7.4  PHP-f \ https://github.com/bajpangosh/High-Traffic-wordpress-server-configuration.git
/papanito/ansible-role-cloudflared | This ansible role does download and install cloudflared on the host and opt \ https://github.com/papanito/ansible-role-cloudflared.git
/karlsander/ersa | A GraphQL server built for Cloudflare Workers \ https://github.com/karlsander/ersa.git
/cloudflare/postgres-postgrest-cloudflared-example | Create a PostgreSQL database with a REST API, exposed to the internet secur \ https://github.com/cloudflare/postgres-postgrest-cloudflared-example.git
/mmiranda/cfdtunnel | A wrapper for cloudflared that manages multi clients for you \ https://github.com/mmiranda/cfdtunnel.git
/matthewgall/beta | Ever wanted to run your own IP lookup service like canhazip.com? Don't want \ https://github.com/matthewgall/beta.ipinfo.in.git
/cirosantilli/china-dictatorhsip-2 | Anti Chinese government propaganda. 反中共政治宣传库。https://github.com/cirosantill \ https://github.com/cirosantilli/china-dictatorhsip-2.git
/cheezcharmer/chinese-dictatorship | Anti Chinese government information. 反中共消息库。住在中国真名用户的网友请别给星星，不然你要被警察请喝茶。常见问 \ https://github.com/cheezcharmer/chinese-dictatorship.git
/libdns/cloudflare | Cloudflare provider implementation for libdns \ https://github.com/libdns/cloudflare.git
/icodeforlove/node-cloudflare | Node.js CloudFlare V4 API wrapper \ https://github.com/icodeforlove/node-cloudflare.git
/nikhiljohn10/telegram-bot-worker | A generic telegram bot using cloudflare workers \ https://github.com/nikhiljohn10/telegram-bot-worker.git
/HyukIsBack/KARMA-DDoS | Layer 7 DDoS Panel with Cloudflare Bypass ( UAM, CAPTCHA, BFM, etc.. ) \ https://github.com/HyukIsBack/KARMA-DDoS.git
/haydenshively/Compound-Liquidation-Bot | Uses Web3 with Cloudflare's HTTPS endpoint to monitor and liquidate account \ https://github.com/haydenshively/Compound-Liquidation-Bot.git
/simon987/ngx_http_js_challenge_module | Simple javascript proof-of-work based access for Nginx with virtually no ov \ https://github.com/simon987/ngx_http_js_challenge_module.git
/igorkasyanchuk/amazon_static_site | Static website using https with your own domain name using Amazon S3 and Cl \ https://github.com/igorkasyanchuk/amazon_static_site.git
/mike6715b/Mikrotik_CF_DDNS | Script for automatic DNS updates on Cloudflare \ https://github.com/mike6715b/Mikrotik_CF_DDNS.git
/TheCaduceus/WARP-UNLIMITED-ADVANCED | Get Unlimited amount of Data in Cloudflare's WARP+ VPN \ https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED.git
/zanjie1999/cloudflare-api-v4-ddns | cloudflare 一键 ddns 脚本 (大陆可用) \ https://github.com/zanjie1999/cloudflare-api-v4-ddns.git
/zebp/worker-kv | Rust bindings to Cloudflare Worker KV Stores \ https://github.com/zebp/worker-kv.git
/my-telegram-bots/hitokoto_bot | A Telegram bot hosted in cloudflare workers \ https://github.com/my-telegram-bots/hitokoto_bot.git
/ulygit/asus_rt_ac68u | Configuration and script for Cloudflare DDNS on Asuswrt-Merlin \ https://github.com/ulygit/asus_rt_ac68u.git
/cdnjs/cf-stats |  Monthly usage statistics from Cloudflare for the cdnjs.cloudflare.com dom \ https://github.com/cdnjs/cf-stats.git
/Tsuk1ko/cfworker-telegraf-template | A template for Telegram Bot using telegraf framework on Cloudflare Workers \ https://github.com/Tsuk1ko/cfworker-telegraf-template.git
/cloudflare/react-workers-template | Example project showing how to deploy your React application to Cloudflare  \ https://github.com/cloudflare/react-workers-template.git
/siketyan/stateless-discord-bot | An example of stateless Discord Bot using Slash Commands feature and Cloudf \ https://github.com/siketyan/stateless-discord-bot.git
/staticallyio/avatar | A simple, beautiful, and high-quality avatar service on Cloudflare Workers. \ https://github.com/staticallyio/avatar.git
/dineshsonachalam/redis-cloudflare-kv | ⚡ Redis caching layer for Cloudflare KV in Golang \ https://github.com/dineshsonachalam/redis-cloudflare-kv.git
/jbeeko/cfworker-hello-world | Hello World Cloudflare Worker implemented in FSharp and completed to JavaSc \ https://github.com/jbeeko/cfworker-hello-world.git
/lework/cloudflare-workers | Cloudflare Worker scripts \ https://github.com/lework/cloudflare-workers.git
/K-E-N-W-A-Y/GD-Index-Dark | A Google Drive Index Running on CloudFlare Workers [Search + DarkMode] \ https://github.com/K-E-N-W-A-Y/GD-Index-Dark.git
/TNovalis/laravel-cloudflare | The Cloudflare API right from Laravel. \ https://github.com/TNovalis/laravel-cloudflare.git
/vemacs/cloudflare-autorotate | Automatically rotate frontend Minecraft proxies with Cloudflare Python API \ https://github.com/vemacs/cloudflare-autorotate.git
/sagi/workers-kv | Cloudflare Workers KV API for Node.js \ https://github.com/sagi/workers-kv.git
/cloudflare/websocket-template | Example template for working with the WebSocketPair API in Cloudflare Worke \ https://github.com/cloudflare/websocket-template.git
/undefinedplayer/cloudflare-ddns | DDNS script to sync public IP address to CloudFlare dns records. \ https://github.com/undefinedplayer/cloudflare-ddns.git
/Wuqibor/JsProxy | 使用JavaScript编写的,搭建于Cloudflare的Workers服务的一个支持内容替换的反向代理 \ https://github.com/Wuqibor/JsProxy.git
/WalshyDev/cf-pages-await | Wait for your Cloudflare Pages builds to finish! \ https://github.com/WalshyDev/cf-pages-await.git
/bytemain/mail2rss | 0 成本的邮件转RSS订阅(newsletter to rss)，by testmail.app and cloudflare workers \ https://github.com/bytemain/mail2rss.git
/launchport/helix-flare | GraphQL for your Cloudflare Workers and Durable Objects \ https://github.com/launchport/helix-flare.git
/lastminutedotcom/heimdall | A Cloudflare monitoring tool \ https://github.com/lastminutedotcom/heimdall.git
/stackoverflowin/CloudFlare-PHP-Bypass | Allows you to get past the waiting page of CloudFlare and do web requests \ https://github.com/stackoverflowin/CloudFlare-PHP-Bypass.git
/mivok/openvpn_cfssl | Alternative to easy-rsa using cloudflare's cfssl tool \ https://github.com/mivok/openvpn_cfssl.git
/marcialpaulg/Fixing-Cloudflare-Error-524 | This guide will show you how to fix Cloudflare's Error 524 (A timeout occur \ https://github.com/marcialpaulg/Fixing-Cloudflare-Error-524.git
/adrienkohlbecker/traefik-auth-cloudflare | Forward auth server to verify Cloudflare Access JWT tokens with traefik \ https://github.com/adrienkohlbecker/traefik-auth-cloudflare.git
/Pablo-Camara/simple-multi-site-docker-compose-nginx-alpine-php-fpm-alpine-https-ssl-certificates | Quickly setup a multi site server, with nginx:alpine and php:fpm-alpine, wi \ https://github.com/Pablo-Camara/simple-multi-site-docker-compose-nginx-alpine-php-fpm-alpine-https-ssl-certificates.git
/Zertz/font-workers |  Supercharge Google Fonts with Cloudflare and Service Workers \ https://github.com/Zertz/font-workers.git
/cloudflare/workers-webpack-example | An example of building a Cloudflare Worker with Webpack \ https://github.com/cloudflare/workers-webpack-example.git
/banyan/Zend_Service_CloudFlare | Zend Framework client for CloudFlare Hosting Provider API \ https://github.com/banyan/Zend_Service_CloudFlare.git
/boynet/cf-logdna-worker | simple cloudflare worker recipe to send logs into logdna \ https://github.com/boynet/cf-logdna-worker.git
/hitop/CFWorkers | 一些适用于 cloudflare workers 的小脚本 \ https://github.com/hitop/CFWorkers.git
/vvanglro/cf_clearance | Purpose To make a cloudflare challenge pass successfully, Can be use cf_cle \ https://github.com/vvanglro/cf_clearance.git
/panda-sandeep/telex | A serverless doc writing app built using Cloudflare Workers & KV Store \ https://github.com/panda-sandeep/telex.git
/jhaals/droptoflare | Creates DNS records for your DigitalOcean Droplets in Cloudflare \ https://github.com/jhaals/droptoflare.git
/nhttp/nhttp | An Simple http framework for Deno, Deno Deploy and Cloudflare Workers. so h \ https://github.com/nhttp/nhttp.git
/worker-tools/html | HTML templating and streaming response library for Service Worker-like envi \ https://github.com/worker-tools/html.git
/kv-orm/cf-workers | A Cloudflare Workers KV datastore plugin for kv-orm \ https://github.com/kv-orm/cf-workers.git
/boynet/cf-GoogleAnalytics-shield-worker | simple cloudflare worker to protect google analytics from being blocked by  \ https://github.com/boynet/cf-GoogleAnalytics-shield-worker.git
/aoyouer/digital-pigeon | A digital pigeon, send tempory messages with cloudflare workers. 咕咕传信，使用clo \ https://github.com/aoyouer/digital-pigeon.git
/dockserver/dockserver | Docker + Traefik with Authelia and Cloudflare Protection \ https://github.com/dockserver/dockserver.git
/HR/recaptcha-worker | reCAPTCHA v3 Cloudflare Worker  \ https://github.com/HR/recaptcha-worker.git
/deppapparatus/better-cloudflare-ip | 适合中国大陆用户查找适合自己当前网络环境的优选cloudflare anycast IP \ https://github.com/deppapparatus/better-cloudflare-ip.git
/AudiusProject/web3-provider-proxy |  Proxying and caching web3 requests with Cloudflare workers \ https://github.com/AudiusProject/web3-provider-proxy.git
/Tsuk1ko/cfworker-middware-telegraf | Make telegraf (a telegram bot framework) useable in Cloudflare Workers \ https://github.com/Tsuk1ko/cfworker-middware-telegraf.git
/caffix/cloudflare-roundtripper | Go HTTP RoundTripper that Solves the Cloudflare Challenge \ https://github.com/caffix/cloudflare-roundtripper.git
/SerCeMan/firewalker | Testing framework for Cloudflare Firewall rules \ https://github.com/SerCeMan/firewalker.git
/remy/cloud-worker | Service Workers, but in "the cloud" ala CloudFlare workers \ https://github.com/remy/cloud-worker.git
/ahas-sigs/kube-ebpf-exporter | Prometheus exporter for custom eBPF metrics From Kubernetes cluster.  (deri \ https://github.com/ahas-sigs/kube-ebpf-exporter.git
/team-exor/generic-seeder | Generic altcoin DNS seeder. Compatible with virtually any cryptocurrency cl \ https://github.com/team-exor/generic-seeder.git
/danielewood/plexargod | Plex Argo Daemon - A systemd script to update the Plex API to use the curre \ https://github.com/danielewood/plexargod.git
/resume-io/carrierwave-cloudflare |  This Rails gem integrates Carrierwave with Cloudflare Image Resizing \ https://github.com/resume-io/carrierwave-cloudflare.git
/matancohen365/cloudflare-middleware | Bypass Cloudflare (Middleware For Guzzle) \ https://github.com/matancohen365/cloudflare-middleware.git
/chrism2671/netlify-purge-cloudflare-on-deploy | Automatically purge Cloudflare cache on Netlify deploy. \ https://github.com/chrism2671/netlify-purge-cloudflare-on-deploy.git
/amodm/ip-lookup | Free IP details lookup service, based on Cloudflare Workers \ https://github.com/amodm/ip-lookup.git
/FDX100/cloud-killer | best application to bypass cloudflare made with  Python3 \ https://github.com/FDX100/cloud-killer.git
/sagi/workers-pubsub | Google Pub/Sub API for Cloudflare Workers (and Node.js) \ https://github.com/sagi/workers-pubsub.git
/alekrumkamp/medium-feed-json | Fetch your Medium feed in 17ms in JSON format using Cloudflare Workers \ https://github.com/alekrumkamp/medium-feed-json.git
/steadlane/silverstripe-cloudflare | This module aims to relieve the stress of using CloudFlare caching with any \ https://github.com/steadlane/silverstripe-cloudflare.git
/worker-tools/parsed-html-rewriter | A DOM-based implementation of Cloudflare Worker's HTMLRewriter. \ https://github.com/worker-tools/parsed-html-rewriter.git
/jbeeko/cfworker-web-api | CloudFlare workers in FSharp \ https://github.com/jbeeko/cfworker-web-api.git
/judge2020/cloudflare-connectivity-test | Test the current network congestion of Cloudflare based on datacenter routi \ https://github.com/judge2020/cloudflare-connectivity-test.git
/0-vortex/cf-workers-url-shortener | Social URL links redirect service powered by Cloudflare Workers and KV. Fea \ https://github.com/0-vortex/cf-workers-url-shortener.git
/enisdenjo/cloudflare-worker-graphql-ws-template | A template for WebSockets powered Cloudflare Worker project using graphql-w \ https://github.com/enisdenjo/cloudflare-worker-graphql-ws-template.git
/GregBrimble/cf-workers-typescript-template | A template Cloudflare Workers Typescript Server & Client \ https://github.com/GregBrimble/cf-workers-typescript-template.git
/JSkimming/CloudFlare | A .NET client library for the CloudFlare API \ https://github.com/JSkimming/CloudFlare.NET.git
/idawnlight/disqusjs-proxy-cloudflare-workers | proxy disqus api via cloudflare workers \ https://github.com/idawnlight/disqusjs-proxy-cloudflare-workers.git
/blackdotsh/StatusCake-CloudFlare | Using Statuscake's monitoring and Cloudflare to achieve high availability. \ https://github.com/blackdotsh/StatusCake-CloudFlare.git
/Twanislas/ubnt-cloudflared | Install Cloudflare's DNS proxy on UBNT gateways \ https://github.com/Twanislas/ubnt-cloudflared.git
/fishuke/serverless-discord-bot | Serverless Discord slash commands bot for Cloudflare's Workers. \ https://github.com/fishuke/serverless-discord-bot.git
/streamwall/sheet2json-worker | A Cloudflare worker that turns a Google Spreadsheet into a JSON API endpoin \ https://github.com/streamwall/sheet2json-worker.git
/obezuk/gitlabci-cloudflare-pipeline | A scaffold CI / CD pipeline using Gitlab CI, Cloudflare and AWS  \ https://github.com/obezuk/gitlabci-cloudflare-pipeline.git
/stripe-samples/stripe-node-cloudflare-worker-template | Use stripe-node in a Cloudflare Worker. \ https://github.com/stripe-samples/stripe-node-cloudflare-worker-template.git
/soulbalz/traefik-real-ip | When traefik is deployed behind a load balancer, it should get the real IP  \ https://github.com/soulbalz/traefik-real-ip.git
/artxia/Action-NotionSite | loconotion + Github Actions + Notion + GitHub Pages + Cloudflare Workers, C \ https://github.com/artxia/Action-NotionSite.git
/edmundhung/blog |  Blog built with Remix, deployed to Cloudflare workers  \ https://github.com/edmundhung/blog.git
/IrineSistiana/cfdohpw | 一个简单的 Cloudflare worker。可以借助 CF CDN 网络中转加速任意 DNS over HTTPS (RFC8484) 流量。复制 \ https://github.com/IrineSistiana/cfdohpw.git
/Zaid-Ajaj/Fable | Write CloudFlare Workers in idiomatic, type-safe F# and compile them to JS  \ https://github.com/Zaid-Ajaj/Fable.CloudFlareWorkers.git
/fawazahmed0/cloudflare-trace-api | Get IP Address, TimeStamp, User Agent, Country Code, IATA, HTTP Version, TL \ https://github.com/fawazahmed0/cloudflare-trace-api.git
/OrlandoDevs/cache-purger | This project is run on AWS Lambda and purges the cache on CloudFlare every  \ https://github.com/OrlandoDevs/cache-purger.git
/Neilpang/wgcf-docker | CloudFlare warp in docker \ https://github.com/Neilpang/wgcf-docker.git
/cloudflare/cobol-worker-template | A Cloudflare worker that runs COBOL. \ https://github.com/cloudflare/cobol-worker-template.git
/cupcakearmy/docker-ddns-cloudflare | Cloudflare DDNS Script \ https://github.com/cupcakearmy/docker-ddns-cloudflare.git
/workingconcept/cloudflare-craft-plugin | Purge Cloudflare caches from Craft. \ https://github.com/workingconcept/cloudflare-craft-plugin.git
/prerender/prerender-cloudflare-worker | CloudFlare worker to use Prerender with web pages that don't use a backend \ https://github.com/prerender/prerender-cloudflare-worker.git
/shalzz/ethereum-worker | A caching layer for an ethereum node using Cloudflares CDN and Cloudflare w \ https://github.com/shalzz/ethereum-worker.git
/cakedan/cf-worker-router | Cloudflare Worker Router \ https://github.com/cakedan/cf-worker-router.git
/ShareX/CloudflareWorkers | Cloudflare Workers Discord embed & keep URL example scripts. \ https://github.com/ShareX/CloudflareWorkers.git
/mikecann/clouds-and-edges | Some experiments with Cloudflare's Durable Objects \ https://github.com/mikecann/clouds-and-edges.git
/tiredofit/docker-nginx-proxy-cloudflare-companion | Automatically update CNAME records when Docker container starts via Cloudfl \ https://github.com/tiredofit/docker-nginx-proxy-cloudflare-companion.git
/cheenanet/autoenable-cloudflare-uam | Auto-enable Cloudflare "Under Attack" mode when high CPU load \ https://github.com/cheenanet/autoenable-cloudflare-uam.git
/containeroo/SyncFlaer | Synchronize Traefik host rules and/or Kubernetes Ingresses with Cloudflare \ https://github.com/containeroo/SyncFlaer.git
/detroitenglish/cloudflare-workers-webpack-plugin | Launch Cloudflare Workers to the Edge from the comfort of your build step  \ https://github.com/detroitenglish/cloudflare-workers-webpack-plugin.git
/mixmoe/HikariSearch | 一款动漫图片搜索引擎聚合网站, 基于 Cloudflare 提供的 Pages Function. / A collection of anime i \ https://github.com/mixmoe/HikariSearch.git
/jhuyvu/WarpBuffer | Cloudflare Warp+ Buffer (Cloudflare API for earning free traffic was fixed, \ https://github.com/jhuyvu/WarpBuffer.git
/jlinn/pyflare | A python adapter for CloudFlare's client API \ https://github.com/jlinn/pyflare.git
/justacan/cloudflare | Scrape websites that use CloudFlare DDoS protection \ https://github.com/justacan/cloudflare.git
/lifehome/systemd-cfddns | Bash-powered DDNS client for Cloudflare-managed domain \ https://github.com/lifehome/systemd-cfddns.git
/k0nserv/hugotunius | My website/blog. Jekyll, S3, Cloudflare \ https://github.com/k0nserv/hugotunius.se.git
/wddwycc/cf_ddns | CloudFlare DDNS executable written in Swift \ https://github.com/wddwycc/cf_ddns.git
/52fancy/WorkersTransfer | 基于CloudFlare Workers打(白)造(嫖)的中转下载 \ https://github.com/52fancy/WorkersTransfer.git
/hack-ink/cloudflare-bypasser | A Rust crate to bypass Cloudflare's anti-bot page. \ https://github.com/hack-ink/cloudflare-bypasser.git
/cloudflare/reason-worker-hello-world | Reason hello world for Cloudflare Workers \ https://github.com/cloudflare/reason-worker-hello-world.git
/ajzbc/serverless-youtube-extractor | Youtube to MP4 demo made with cloudflare workers \ https://github.com/ajzbc/serverless-youtube-extractor.git
/madflojo/cfdns | Command line tool for manipulating DNS of CloudFlare hosted domains \ https://github.com/madflojo/cfdns.git
/marcomafessolli/remix-prisma-cloudflare-workers | Run Remix with Prisma on Cloudflare Workers \ https://github.com/marcomafessolli/remix-prisma-cloudflare-workers.git
/cantalupo555/repo-solus | Repository Solus Linux distribution. It is hosted on the Google Cloud + Clo \ https://github.com/cantalupo555/repo-solus.git
/udacity/cloudflare-typescript-worker-template | Template for a tested linted formatted strict TypeScript Cloudflare Worker  \ https://github.com/udacity/cloudflare-typescript-worker-template.git
/maraisr/workers-logger | 🪵 Fast effective logging for Cloudflare Workers \ https://github.com/maraisr/workers-logger.git
/DaRealFreak/cloudflare-bp-go | round tripper for Go's http library to avoid getting a CloudFlare challenge \ https://github.com/DaRealFreak/cloudflare-bp-go.git
/maple3142/gitcf | A service that is similar to RawGit, but this one is running on CloudFlare  \ https://github.com/maple3142/gitcf.git
/SoftCreatR/warp-up | Automatically generated referrer bonuses for Cloudflare WARP (https://1.1.1 \ https://github.com/SoftCreatR/warp-up.git
/bcnzer/kv-explorer-ui | A tool to visualize the contents of namespaces in Cloudflare Workers KV \ https://github.com/bcnzer/kv-explorer-ui.git
/cloudflare/cfdeploy | Cloudflare Deployment Tool \ https://github.com/cloudflare/cfdeploy.git
/leonstafford/wp2static-addon-cloudflare-workers | CloudFlare Workers deployment add-on for WP2Static \ https://github.com/leonstafford/wp2static-addon-cloudflare-workers.git
/Mecanik/cloudflare-image-resizing | CloudFlare Image Resizing plugin for WordPress. \ https://github.com/Mecanik/cloudflare-image-resizing.git
/PhrantiK/hassio-addons | Custom Domain with free Cloudflare DNS hosting, DDNS and Let's Encrypt  \ https://github.com/PhrantiK/hassio-addons.git
/yrpang/github-actions-hexo | A Github action used to automatic generate publish hexo-based blog and clea \ https://github.com/yrpang/github-actions-hexo.git
/c-rack/plug_cloudflare | Parses CloudFlare's CF-Connecting-IP header into Plug.Conn's remote_ip fiel \ https://github.com/c-rack/plug_cloudflare.git
/jacobbednarz/cf-vault | Manage your Cloudflare credentials, securely \ https://github.com/jacobbednarz/cf-vault.git
/favonia/cloudflare-ddns |  A small (~2MB), feature-rich, and robust Cloudflare DDNS updater \ https://github.com/favonia/cloudflare-ddns.git
/michaelkourlas/node-cloudflare-dynamic-dns | Node.js module for updating a Cloudflare DNS address record with an IP addr \ https://github.com/michaelkourlas/node-cloudflare-dynamic-dns.git
/cracker4o/purge-cf-cache-chrome-extension | A chrome extension that purges the CF cache for the current URL of CloudFla \ https://github.com/cracker4o/purge-cf-cache-chrome-extension.git
/cloudflare/workers-airtable-form | Example codebase showing how to handle form data using Cloudflare Workers s \ https://github.com/cloudflare/workers-airtable-form.git
/socram8888/dehydrated-hook-cloudflare | Pure bash dehydrated dns-01 hook for CloudFlare \ https://github.com/socram8888/dehydrated-hook-cloudflare.git
/SeokminHong/edge-yacht | A multiplayer game for Cloudflare Summer Challenge \ https://github.com/SeokminHong/edge-yacht.git
/vonadz/newsletter-oauth-registration-cfw | Cloudflare worker scripts for registering users to newsletter using Google  \ https://github.com/vonadz/newsletter-oauth-registration-cfw.git
/dgryski/go-keyless | Client and server reimplementation of CloudFlare's Keyless \ https://github.com/dgryski/go-keyless.git
/cowlicks/bypasser | A Chrome Extension that implements Cloudflare's captcha bypass specificatio \ https://github.com/cowlicks/bypasser.git
/tuananh/reader | get a reader mode sharable url for any url - built with cloudflare workers  \ https://github.com/tuananh/reader.git
/MijazzChan/cloudflare-ddns-edgeos | Cloudflare DDNS shell scripts optimized for Ubnt Router running EdgeOS.(大陆/ \ https://github.com/MijazzChan/cloudflare-ddns-edgeos.git
/lujjjh/icp-query | A simple ICP query service powered by Cloudflare Workers. \ https://github.com/lujjjh/icp-query.git
/andrewsomething/terraform-digitalocean-firewall-cloudflare | Terraform Module for DigitalOcean Firewall + Cloudflare \ https://github.com/andrewsomething/terraform-digitalocean-firewall-cloudflare.git
/bendews/ansible-cloudflared | Install cloudflared and systemd service for DNS-Over-HTTPS \ https://github.com/bendews/ansible-cloudflared.git
/cloudflare-apps/spotify | Add Spotify playlists and get followers using Cloudflare Apps! \ https://github.com/cloudflare-apps/spotify.git
/mattbodholdt/dnscrypt-proxy | Container that uses Cloudflare's DNS over HTTPS resolution service by utili \ https://github.com/mattbodholdt/dnscrypt-proxy.git
/DingGGu/cloudflare-access-controller | Cloudflare Access on Kubernetes \ https://github.com/DingGGu/cloudflare-access-controller.git
/brave-experiments/cf2tf | A Terraform importer for Cloudflare resources, inspired by terraforming \ https://github.com/brave-experiments/cf2tf.git
/jakejarvis/docker-cloudflare-argo | An intermediary between Cloudflare's Argo tunneling service and your local  \ https://github.com/jakejarvis/docker-cloudflare-argo.git
/novakin/dns-failover-cloudflare-monit | Setup DNS Failover for Cloudflare with monit - https://www.noobunbox.net \ https://github.com/novakin/dns-failover-cloudflare-monit.git
/falkirks/mcpeme | A subdomain registration service using CloudFlare API \ https://github.com/falkirks/mcpeme.git
/darkerego/blitzkloud | Cloudflare compatible Reverse HTTP Shell w/ AES & Domain Fronting (via SNI) \ https://github.com/darkerego/blitzkloud.git
/itewqq/codeforces-reverse-proxy | 使用cloudflare的边缘计算服务workers反向代理codeforces，支持登录，提交，浏览页面 \ https://github.com/itewqq/codeforces-reverse-proxy.git
/1rfsNet/Fritz-Box-Cloudflare-DynDNS | This simple PHP script replaces a DynDNS provider and passes your current I \ https://github.com/1rfsNet/Fritz-Box-Cloudflare-DynDNS.git
/cloudflare-developers-community/cloudflare-workers-discord-bot | A bot for the Cloudflare Workers Discord server \ https://github.com/cloudflare-developers-community/cloudflare-workers-discord-bot.git
/lucacasonato/workerkit | A library to make writing Cloudflare Workers way nicer \ https://github.com/lucacasonato/workerkit.git
/nathanwaters/hasura-cloudflare-worker | Example Cloudflare Worker for Facebook-based authorization and GraphQL prox \ https://github.com/nathanwaters/hasura-cloudflare-worker.git
/radiantly/the-redirector | A blazing fast link shortener built on CloudFlare Workers KV that allows yo \ https://github.com/radiantly/the-redirector.git
/mphreys/WeiUZ | WeiUZ CloudFlare Partners PHP版本 \ https://github.com/mphreys/WeiUZ.git
/rmg/cloudflare-backup | Simple tool for backing up your CloudFlare hosted DNS records \ https://github.com/rmg/cloudflare-backup.git
/DigitalOptimizationGroup/blue-green-cloudflare-workers | Blue / Green Deployments for Cloudflare Workers \ https://github.com/DigitalOptimizationGroup/blue-green-cloudflare-workers.git
/nickw444/cf-ddns | Extendable Cloudflare DDNS Updater written in Golang \ https://github.com/nickw444/cf-ddns.git
/eudemonics/cloudget | python script to bypass cloudflare from command line. built upon cfscrape m \ https://github.com/eudemonics/cloudget.git
/lioujheyu/synocfddns | Cloudflare DDNS updater for Synology NAS \ https://github.com/lioujheyu/synocfddns.git
/nesrual/fail2ban-cloudflare | Integrate fail2ban with Cloudflare API \ https://github.com/nesrual/fail2ban-cloudflare.git
/k4yt3x/cfddns | systemd-daemonized Cloudflare DDNS service \ https://github.com/k4yt3x/cfddns.git
/colemickens/cloudflare-dyndns | dynamic dns client (of sorts) for cloudflare (golang) \ https://github.com/colemickens/cloudflare-dyndns.git
/LCYLYM/Telegram-Channel-Mirror | ️ 利用 CloudFlare Worker 搭建 telegram 频道镜像站，使得国内可以访问 \ https://github.com/LCYLYM/Telegram-Channel-Mirror.git
/MatthewJamesBoyle/custom-shortlinks-cloudflare-worker | Deploy a custom short linking service to Cloudflare Workers in just a few m \ https://github.com/MatthewJamesBoyle/custom-shortlinks-cloudflare-worker.git
/cloudflare/dart-worker-hello-world | Dart hello world for Cloudflare Workers \ https://github.com/cloudflare/dart-worker-hello-world.git
/K0IN/Notify | A small Cloudflare worker / self hosted solution to send web push notificat \ https://github.com/K0IN/Notify.git
/cometkim/turbocache | Cloudflare Workers as a custom remote cache for Turborepo \ https://github.com/cometkim/turbocache.git
/samkelleher/cloudflare-worker-google-analytics | A Cloudflare Worker allowing for first-party capture of tracking informatio \ https://github.com/samkelleher/cloudflare-worker-google-analytics.git
/maateen/daroyan | Daroyan is a modern utility tool which integrates CloudFlare with Fail2Ban. \ https://github.com/maateen/daroyan.git
/ryan-mars/workers-queue-demo | Edge message queue service on Cloudflare Workers using Durable Objects and  \ https://github.com/ryan-mars/workers-queue-demo.git
/d8-contrib-modules/cloudflare | Cloudflare Module for Drupal \ https://github.com/d8-contrib-modules/cloudflare.git
/BlueSkyXN/Cloudflare-Custom-Pages | 美观的Cloudflare提示页 \ https://github.com/BlueSkyXN/Cloudflare-Custom-Pages.git
/Hidove/CloudflarePanelPython | A Beautiful CloudFlare Partner Panel \ https://github.com/Hidove/CloudflarePanelPython.git
/duy13/vDDoS-Layer4-Mapping | Layer 3-4 Support (CSF & CloudFlare) for vDDoS Proxy Protection. \ https://github.com/duy13/vDDoS-Layer4-Mapping.git
/stevemcquaid/cloudflare-dyndns | Golang implementation of Dynamic DNS using CloudFlare \ https://github.com/stevemcquaid/cloudflare-dyndns.git
/codewithkristian/pages-trigger | Ad-hoc deployments for Cloudflare Pages projects using GitHub Actions \ https://github.com/codewithkristian/pages-trigger.git
/karma9874/CloudFlare-IP | CloudFlare-IP is a tool which aims to gather origin IP of the website prote \ https://github.com/karma9874/CloudFlare-IP.git
/ihciah/cloudflare-kv-proxy | Cloudflare Worker KV Proxy \ https://github.com/ihciah/cloudflare-kv-proxy.git
/ilikedata/cloudflare-workers-kv-cache | Cloudflare workers KV cache \ https://github.com/ilikedata/cloudflare-workers-kv-cache.git
/ampproject/cloudflare-amp-optimizer | Implementation of AMP Optimizer for Cloudflare Workers \ https://github.com/ampproject/cloudflare-amp-optimizer.git
/bradyjoslin/encrypt-workers-kv | Encrypted put and get functions for Cloudflare Workers KV \ https://github.com/bradyjoslin/encrypt-workers-kv.git
/ScoLib/cfscrape | A simple PHP module to bypass Cloudflare's anti-bot page (also known as "I' \ https://github.com/ScoLib/cfscrape.git
/GregBrimble/workers | A featureful dashboard for managing Cloudflare Workers \ https://github.com/GregBrimble/workers.sh.git
/Erisa/domain-redirect | Easily redirect one entire domain to another with a serverless Cloudflare W \ https://github.com/Erisa/domain-redirect.git
/Diftraku/yourls_reverseproxy | Fixes the incoming IPs when using YOURLS after a reverse proxy (ie. CloudFl \ https://github.com/Diftraku/yourls_reverseproxy.git
/dan-lee/multiflare | Use multiple Cloudflare Workers in development with ease ✨ \ https://github.com/dan-lee/multiflare.git
/scyllagroup/UmbracoFlare | This project aims to provide a basic level of service integration between C \ https://github.com/scyllagroup/UmbracoFlare.git
/wingman-jr-addon/wingman_jr | This is the official repository (https://github.com/wingman-jr-addon/wingma \ https://github.com/wingman-jr-addon/wingman_jr.git
/mozmeao/cloudflare-datadog | Cloudflare in, datadog out. \ https://github.com/mozmeao/cloudflare-datadog.git
/queueit/KnownUser | QueueIT Cloudflare Connector (Known User Implementation v.3.x for Cloudflar \ https://github.com/queueit/KnownUser.V3.Cloudflare.git
/jamesmartin/cloudflare-cache-purge-buildpack | Purges your Heroku application's Cloudflare cache on deployment \ https://github.com/jamesmartin/cloudflare-cache-purge-buildpack.git
/TypeCtrl/cloudflare | Bypass Cloudflare's anti-bot page \ https://github.com/TypeCtrl/cloudflare.git
/zloeber/PSCloudflare | Powershell Module for the Cloudflare API \ https://github.com/zloeber/PSCloudflare.git
/cihanmehmet/cloudflarebypass | Cloudflare Bypass Script \ https://github.com/cihanmehmet/cloudflarebypass.git
/danodemano/cloudflare-bulk-ip-update | CloudFlare Bulk IP Update Utility \ https://github.com/danodemano/cloudflare-bulk-ip-update.git
/obezuk/cf-workers-link-shortener | A url shortener built with Cloudflare Workers and LavaRand \ https://github.com/obezuk/cf-workers-link-shortener.git
/ninech/cloudflair | Ruby wrapper for the Cloudflare V4 API \ https://github.com/ninech/cloudflair.git
/johnpili/cloudflare-as-dynamic-dns | Use Cloudflare as Dynamic DNS \ https://github.com/johnpili/cloudflare-as-dynamic-dns.git
/docker-home-server/mikrotik-cloudflare-dns | Cloudflare DNS update script for Mikrotik RouterOS \ https://github.com/docker-home-server/mikrotik-cloudflare-dns.git
/codewithkristian/gatsby-cloudflare-workers | ‍♀️ An example Gatsby.js project served by Cloudflare Workers \ https://github.com/codewithkristian/gatsby-cloudflare-workers.git
/k4m4/cloudflare-detect | Detect whether a site is running behind Cloudflare. \ https://github.com/k4m4/cloudflare-detect.git
/mm/cf-shortener |   Demo of a link shortener running on Cloudflare Workers \ https://github.com/mm/cf-shortener.git
/jorgelbg/cloudflare-access-grafana | Small proxy for automatically log in users from Cloudflare Access into Graf \ https://github.com/jorgelbg/cloudflare-access-grafana.git
/Aicirou/goindex-theme-acrou | Google-Drive-Directory-Index | Combining the power of Cloudflare Workers an \ https://github.com/Aicirou/goindex-theme-acrou.git
/nym-zone/block_cloudflare_mitm_fx | Firefox & Tor Browser add-on to block Cloudflare. \ https://github.com/nym-zone/block_cloudflare_mitm_fx.git
/bobbyiliev/cloudflare-ddos-protection | You can use this CLI script to enable and disable the CloudFlare DDOS prote \ https://github.com/bobbyiliev/cloudflare-ddos-protection.git
/fire1ce/DDNS-Cloudflare-Bash | Cloudflare DDNS bash Script for most Linux distributions and MacOS. Choose  \ https://github.com/fire1ce/DDNS-Cloudflare-Bash.git
/GregBrimble/remix-beta-on-workers | @remix-run on @cloudflare Workers \ https://github.com/GregBrimble/remix-beta-on-workers.git
/strathausen/grunt-cloudflare | Purge CloudFlare Cache Grunt Task \ https://github.com/strathausen/grunt-cloudflare.git
/tarunmangukiya/nuxt-cloudflare-workers | NuxtJS static site deployed to CloudFlare Workers \ https://github.com/tarunmangukiya/nuxt-cloudflare-workers.git
/traktofon/cf-detect | An extension for Mozilla Firefox which aims to detect whether the current p \ https://github.com/traktofon/cf-detect.git
/PeterCxy/paprika | A blogging platform written in Rust for Cloudflare Workers, integrated with \ https://github.com/PeterCxy/paprika.git
/worker-tools/cloudflare-kv-storage | An implementation of the StorageArea interface using Cloudflare Worker's KV \ https://github.com/worker-tools/cloudflare-kv-storage.git
/nickbalestra/storage-kv | Node.js client for Cloudflare's KV Storage: a global, highly distributed, l \ https://github.com/nickbalestra/storage-kv.git
/iserko/logstash-input-cloudflare | Logstash Input Plugin for Cloudflare logs \ https://github.com/iserko/logstash-input-cloudflare.git
/cloudflare/binast-cf-worker | Serve BinAST via a Cloudflare Worker \ https://github.com/cloudflare/binast-cf-worker.git
/py7hon/cloudflare-workers-reverse-proxy | simple reverse proxy with cloudflare workers \ https://github.com/py7hon/cloudflare-workers-reverse-proxy.git
/phlinhng/v2ray-caddy-cf | pre-configured V2Ray (wss+web) with Cloudflare API \ https://github.com/phlinhng/v2ray-caddy-cf.git
/vedarthk/cloudflare-ddclient | Dynamic DNS client for CloudFlare domain names. \ https://github.com/vedarthk/cloudflare-ddclient.git
/0rientd/BypassCF | Script in Perl for Bypass CloudFlare [DEPRECATED] \ https://github.com/0rientd/BypassCF.git
/Anon-Exploiter/IpGrabber | It'll grab the IP sitting behind Cloudflare ¯&_(ツ)_/¯ \ https://github.com/Anon-Exploiter/IpGrabber.git
/ZelliDev/Discord_NitroGenerator_Basic | A basic discord nitro generator with a cloudflare bypasser  \ https://github.com/ZelliDev/Discord_NitroGenerator_Basic.git
/wpkc/fail2ban-action-cloudflare-restv4 | Fail2Ban action file for CloudFlare REST API V4 \ https://github.com/wpkc/fail2ban-action-cloudflare-restv4.git
/BH4EHN/openwrt-cloudflared | OpenWRT port of Cloudflare Argo Tunnel client https://developers.cloudflare \ https://github.com/BH4EHN/openwrt-cloudflared.git
/unlock-protocol/cloudflare-worker | A cloudflare worker to add a lock to any website! \ https://github.com/unlock-protocol/cloudflare-worker.git
/indianajson/cloudfish | Subdomain enumeration using Cloudflare's scanning tool.  \ https://github.com/indianajson/cloudfish.git
/creimers/cloudflare-ddns | A tiny python script that updates a cloudflare dns record with your current \ https://github.com/creimers/cloudflare-ddns.git
/stevelr/wasm-service | Base library for serverless WASM on Cloudflare Workers \ https://github.com/stevelr/wasm-service.git
/NathanVaughn/actions-cloudflare-purge | A GitHub Action to purge Cloudflare's cache of your site \ https://github.com/NathanVaughn/actions-cloudflare-purge.git
/picatz/flareon | 🦊A cloudflare DNS over HTTPs resolver client library. \ https://github.com/picatz/flareon.git
/cxb-soft/cloudflare_app | Server for cloudflare app \ https://github.com/cxb-soft/cloudflare_app.git
/jrf0110/cf-workers-boilerplate | Cloudflare workers TypeScript boilerplate \ https://github.com/jrf0110/cf-workers-boilerplate.git
/benyaminsalimi/Secure-Headers |  secure header report and best practices config for Apache, Nginx, lighttpd \ https://github.com/benyaminsalimi/Secure-Headers.git
/tech-otaku/cloudflare-dns | A wrapper for the Cloudflare API that allows you to add, update or delete y \ https://github.com/tech-otaku/cloudflare-dns.git
/msfjarvis/redirekt | Super simple Cloudflare Worker that performs redirections and serves a stat \ https://github.com/msfjarvis/redirekt.git
/scotchmist/dyndns-cf | Simple DNS updater for CloudFlare's API \ https://github.com/scotchmist/dyndns-cf.git
/Zertz/cloudflare-kv | Thin wrapper for Cloudflare Workers KV \ https://github.com/Zertz/cloudflare-kv.git
/tcarrio/dddd | Dynamic DNS for Cloudflare using DuckDuckGo's Answers API ¯&_(ツ)_/¯ \ https://github.com/tcarrio/dddd.git
/cpilsworth/cloudflare-worker-action | GitHub action for deploying a worker to Cloudflare \ https://github.com/cpilsworth/cloudflare-worker-action.git
/GrahamDeprecated/Laravel-CloudFlare-API | [DEPRECATED] A CloudFlare API client for Laravel 5 \ https://github.com/GrahamDeprecated/Laravel-CloudFlare-API.git
/terribleplan/next-cloudflare | A way to build next.js apps for cloudflare workers \ https://github.com/terribleplan/next-cloudflare.git
/JamesLMilner/worker-assemblyscript-template | A Cloudflare wrangler template for a AssemblyScript worker \ https://github.com/JamesLMilner/worker-assemblyscript-template.git
/alebeta90/behindflare | This tool was created as a Proof of Concept  to reveal the threats related  \ https://github.com/alebeta90/behindflare.git
/gmencz/cloudflare-workers-typescript-esbuild-esm | Cloudflare Workers template for using esbuild and TypeScript with the ES mo \ https://github.com/gmencz/cloudflare-workers-typescript-esbuild-esm.git
/danihodovic/testing-cloudflare-workers | Examples on how to test Cloudflare workers with Mocha.js and Chai.js \ https://github.com/danihodovic/testing-cloudflare-workers.git
/Donnie/nginx-letsencrypt-multisite | Linode + Ubuntu 16.04 LTS + UFW + Nginx (multi-site) + MySQL + phpMyAdmin + \ https://github.com/Donnie/nginx-letsencrypt-multisite.git
/p-j/eapi | Edge API, building APIs on the Edge with Cloudflare Workers. Building block \ https://github.com/p-j/eapi.git
/plzdontshare/cloudflareimport | Cloudflare Domain Import \ https://github.com/plzdontshare/cloudflareimport.git
/karalabe/cloudflare-dyndns | CloudFlare Dynamic DNS Updater \ https://github.com/karalabe/cloudflare-dyndns.git
/WalshyDev/cf-status-worker | Cloudflare Worker to monitor the Cloudflare Status Page for incidents and s \ https://github.com/WalshyDev/cf-status-worker.git
/luckypoem/gopxy | emmm, 一个cloudflare worker代理工具 \ https://github.com/luckypoem/gopxy.git
/k0nserv/one-cent-blog | The template for a one cent/month blog using S3, Cloudflare, Jekyll and Tra \ https://github.com/k0nserv/one-cent-blog.git
/crackcomm/cloudflare | CloudFlare® command line tool and Go client \ https://github.com/crackcomm/cloudflare.git
/fernvenue/cloudflare-workers-scripts | A collection of simple scripts for Cloudflare Workers. \ https://github.com/fernvenue/cloudflare-workers-scripts.git
/msnelling/docker-cloudflared | A docker container for running Cloudflare's Argo Tunnel service. \ https://github.com/msnelling/docker-cloudflared.git
/bendews/ansible-letsencrypt-cloudflare | Ansible role to simplify the process of renewing LetsEncrypt Certificates w \ https://github.com/bendews/ansible-letsencrypt-cloudflare.git
/matthewpi/access-oidc | OpenID Connect server running on Cloudflare Workers and authenticated by Cl \ https://github.com/matthewpi/access-oidc.git
/Kikobeats/cloudflare-workers-kv | Node.js library to interact with CloudFlare Workers KV. \ https://github.com/Kikobeats/cloudflare-workers-kv.git
/codewithkristian/bridge |  Simple notice pages for your website, built with Cloudflare Workers \ https://github.com/codewithkristian/bridge.git
/zllovesuki/slugsurvival | Source Code for SlugSurvival.com with Cloudflare Workers Site support \ https://github.com/zllovesuki/slugsurvival.git
/nodecraft/acme-dns-01-cloudflare | Cloudflare DNS for Let's Encrypt / ACME dns-01 challenges with Greenlock.js \ https://github.com/nodecraft/acme-dns-01-cloudflare.git
/yumusb/AutoChangeDns | 根据宕机情况自动切换DNS解析记录（调用CloudFlare API） \ https://github.com/yumusb/AutoChangeDns.git
/socketry/cloudflare-dns-update | A Ruby script which can update CloudFlare periodically to provide dynamic D \ https://github.com/socketry/cloudflare-dns-update.git
/vasi/cloudflare-dns-backup-tool | Backup DNS settings from CloudFlare, and auto-push them to a git repo \ https://github.com/vasi/cloudflare-dns-backup-tool.git
/qinlili23333/ctfile | 使用cloudflare workers提供城通网盘的直连解析服务 \ https://github.com/qinlili23333/ctfile.Workers.git
/MattIPv4/tweets-to-discord | Mirroring Tweets from a Twitter account to a Discord channel via scheduled  \ https://github.com/MattIPv4/tweets-to-discord.git
/TomasHubelbauer/workers-formdata | FormData support for Cloudflare Workers \ https://github.com/TomasHubelbauer/workers-formdata.git
/msciotti/figma-bridge | A bridge to post Figma comments into Discord via CloudFlare workers \ https://github.com/msciotti/figma-bridge.git
/phistrom/b2-remove-prefix | A CloudFlare Worker for removing the /file/bucket-name/ part of a B2 bucket \ https://github.com/phistrom/b2-remove-prefix.git
/mongodb-developer/cloudflare-worker-rest-api-realm-atlas | This project explains how to build a REST API in a Cloudflare worker using  \ https://github.com/mongodb-developer/cloudflare-worker-rest-api-realm-atlas.git
/rimusz/dcos-k8s-beer-demo | Beer App demo on DC/OS + Kubernetes + Helm + Cloudflare Warp \ https://github.com/rimusz/dcos-k8s-beer-demo.git
/scakemyer/cloudhole | Firefox web extension for cross-website CloudFlare cookies \ https://github.com/scakemyer/cloudhole.git
/markusahlstrand/node-cloudworker | A node shim for debugging cloudflare cloud workers \ https://github.com/markusahlstrand/node-cloudworker.git
/ITJoker233/GitPage-CloudFlare-Worker | 利用CloudFlare-Worker 加速你的GitPage✔ \ https://github.com/ITJoker233/GitPage-CloudFlare-Worker.git
/GuardIran/CloudHound | CloudHound is a cloudflare bypass tool which is using several methods such  \ https://github.com/GuardIran/CloudHound.git
/turbothinh/notion-cloudflare-worker | A Github Action CI wrapper for Fruition setup for automatic deployment to C \ https://github.com/turbothinh/notion-cloudflare-worker.git
/TypistTech/wp-cloudflare-guard | Connecting WordPress with Cloudflare firewall, protect your WordPress site  \ https://github.com/TypistTech/wp-cloudflare-guard.git
/gabanz/cf-looking-glass | Run traceroute from Cloudflare data centers, invoked from API via Workers. \ https://github.com/gabanz/cf-looking-glass.git
/cloudflare/worker-template-mysql | Reference demo and modified MySQL driver to connect Cloudflare Workers to a \ https://github.com/cloudflare/worker-template-mysql.git
/hazcod/cloudflare-workers-svelte | Example repository for running a sveltejs/sveltekit website on Cloudflare W \ https://github.com/hazcod/cloudflare-workers-svelte.git
/Drawbotics/letsencrypt-heroku-dashboard | A dashboard to manage your Let's Encrypt certificates on your Heroku apps w \ https://github.com/Drawbotics/letsencrypt-heroku-dashboard.git
/adyanth/cloudflare-operator | A Kubernetes Operator to create and manage Cloudflare Tunnels and DNS recor \ https://github.com/adyanth/cloudflare-operator.git
/crowdsecurity/cs-cloudflare-bouncer | A CrowdSec Bouncer that syncs the decisions made by CrowdSec with CloudFlar \ https://github.com/crowdsecurity/cs-cloudflare-bouncer.git
/matthewgall/beta | DNS and dig is ugly, and implementing them into your web application is eve \ https://github.com/matthewgall/beta.dnsjson.com.git
/pearkes/cloudflare | A Go Cloudflare library \ https://github.com/pearkes/cloudflare.git
/ryanking13/cors | Cloudflare workers CORS proxy \ https://github.com/ryanking13/cors.git
/teakolik/honeyTEA | Cloudflare, Centos ve CMS birleşimi ile Honeypot \ https://github.com/teakolik/honeyTEA.git
/lukesUbuntu/cloudflare-api | php class for the latest v4 of CloudFlare API https://www.cloudflare.com \ https://github.com/lukesUbuntu/cloudflare-api.git
/alphagov/cloudflare-configure | Commandline tool for configuring CloudFlare's CDN \ https://github.com/alphagov/cloudflare-configure.git
/crossplane-contrib/provider-cloudflare | A Cloudflare provider for Crossplane \ https://github.com/crossplane-contrib/provider-cloudflare.git
/oasisfleeting/cloudflare-whitelister-nginx-real-ip | Bash script for whitelisting cloudflare ips as well as setting nginx config \ https://github.com/oasisfleeting/cloudflare-whitelister-nginx-real-ip.git
/widavies/fireflare | Firebase authentication for Cloudflare workers \ https://github.com/widavies/fireflare.git
/llfj/better-cloudflare-ip | shell脚本，适合中国大陆用户查找适合自己当前网络环境的优选cloudflare anycast IP \ https://github.com/llfj/better-cloudflare-ip.git
/falkirks/MCPEDNS | [OUTDATED] MCPE hostname creation service. Uses CloudFlare API.  \ https://github.com/falkirks/MCPEDNS.git
/hwpchn/AroayCloudScraper | scrapy一个插件，绕过cloudflare检测，主要是封装 cloudscraper模块 \ https://github.com/hwpchn/AroayCloudScraper.git
/instantpage/instant | Source code of instant.page’s site — Node.js app to run locally and generat \ https://github.com/instantpage/instant.page-site.git
/gr2m/cloudflare-worker-github-app-example | A Cloudflare Worker + GitHub App Example \ https://github.com/gr2m/cloudflare-worker-github-app-example.git
/XadillaX/dloucflare | To run at a server which has a dynamic IP and cloudflare service. It can dy \ https://github.com/XadillaX/dloucflare.git
/186526/aka | A simple and fast short URL service running on Cloudflare Worker \ https://github.com/186526/aka.git
/rschristian/github-contribution-calendar-api | Cloudflare Worker for retrieving data used in GitHub's contribution calenda \ https://github.com/rschristian/github-contribution-calendar-api.git
/Darkseal/REPflare | A lightweight Cloudflare Worker to replace text and inject styles and scrip \ https://github.com/Darkseal/REPflare.git
/dustinrouillard/shortener | Cloudflare Worker powered link shortener - Stores in workers K/V - Powering \ https://github.com/dustinrouillard/shortener.git
/gnuns/cfget | :snake:  A node.js cli tool to bypass Cloudflare's anti-bot and get the pag \ https://github.com/gnuns/cfget.git
/hasinhayder/wpfavs-public-api-cloudflare-worker | Fetch favorite themes and plugins form a WordPress.org user profile by his/ \ https://github.com/hasinhayder/wpfavs-public-api-cloudflare-worker.git
/cloudflare-api/python-cloudflare-v4 | Python wrapper for the CloudFlare Client API v4 \ https://github.com/cloudflare-api/python-cloudflare-v4.git
/91yun/cloudclareAPI | php for cloudflare api \ https://github.com/91yun/cloudclareAPI.git
/AtakBey/cfdoser | Cloudflare Bypass DDoS Tool \ https://github.com/AtakBey/cfdoser.git
/gofullstack/capistrano-cloudflare | Capistrano extension for CloudFlare \ https://github.com/gofullstack/capistrano-cloudflare.git
/DzenDyn/zen-cf-ddns | CloudFlare DNS updater \ https://github.com/DzenDyn/zen-cf-ddns.git
/jesseops/cloudflare-ddns | Python Cloudflare DDNS updater \ https://github.com/jesseops/cloudflare-ddns.git
/rajtatata/cloudflare-worker-example-rest-api | Cloudflare worker example app, using the cloudflare-worker-rest-api package \ https://github.com/rajtatata/cloudflare-worker-example-rest-api.git
/pjjonesnz/directadmin_cloudflare_dns | Script to sync DirectAdmin dns changes with a Cloudflare account \ https://github.com/pjjonesnz/directadmin_cloudflare_dns.git
/danacr/drone-cloudflared | Cloudflared builds for arm64 on drone.io \ https://github.com/danacr/drone-cloudflared.git
/kayteh/ddcf | Dynamic DNS utility for CloudFlare \ https://github.com/kayteh/ddcf.git
/almostSouji/github-interaction-worker | CloudFlare worker for a Discord interaction to query GitHub \ https://github.com/almostSouji/github-interaction-worker.git
/single9/docker-wildcard-letsencrypt |  Get Let's Encrypt wildcard SSL certificates validated by Cloudflare DNS AP \ https://github.com/single9/docker-wildcard-letsencrypt.git
/thim0o/gdrive-cfworker-videostream | A Cloudflare worker that provides direct links to files on google drive.  \ https://github.com/thim0o/gdrive-cfworker-videostream.git
/chebyrash/cors | CORS proxy using Cloudflare Workers \ https://github.com/chebyrash/cors.git
/Vortexmind/terraforming-ghost | A starter template to automatically deploy a Ghost Blog on Digitalocean and \ https://github.com/Vortexmind/terraforming-ghost.git
/LostLuma/starbin | A hastebin-compatible paste site running on Cloudflare Workers. \ https://github.com/LostLuma/starbin.git
/adamchasetaylor/cf-worker-proxy | Caching Serverless Proxy for Externally Hosted Site using Cloudflare Worker \ https://github.com/adamchasetaylor/cf-worker-proxy.git
/adamschwartz/worker-generate-invoice-pdf | Generate an invoice PDF on the fly with Cloudflare Workers \ https://github.com/adamschwartz/worker-generate-invoice-pdf.git
/peertransfer/glare | Ruby gem for CloudFlare API v4 \ https://github.com/peertransfer/glare.git
/orzarchi/terraform-aws-cloudflare-security-group | A Terraform module that populates a security group with cloudflare ip range \ https://github.com/orzarchi/terraform-aws-cloudflare-security-group.git
/samuelcolvin/cloudflare-proxy | proxy requests using cloudflare worker, useful for webhooks fired to slow e \ https://github.com/samuelcolvin/cloudflare-proxy.git
/zmike808/Plex-Blackmagic | A cloudflare worker for plex that uses blackmagic to change default client  \ https://github.com/zmike808/Plex-Blackmagic.git
/judge2020/CloudDump | dump cloudflare's TLD list and TLD prices \ https://github.com/judge2020/CloudDump.git
/frandiox/cf-workers-boilerplate | Deploy Cloudflare Workers easily without sacrifying developer experience \ https://github.com/frandiox/cf-workers-boilerplate.git
/wyattjoh/cloudflare-ddns | A Cloudflare Dynamic DNS updater, written in Go. \ https://github.com/wyattjoh/cloudflare-ddns.git
/omppye-tech/omppye-dev | My Cloudflare Pages \ https://github.com/omppye-tech/omppye-dev.git
/dsnezhkov/cflsh | CloudFlare Worker Shell \ https://github.com/dsnezhkov/cflsh.git
/pentestcore/Cloudflare-Bypass | Cloudflare Bypass tools | PentestCore \ https://github.com/pentestcore/Cloudflare-Bypass.git
/ctohm/edge-resizer | Resize and transform images on the fly, then serve them at blazing speeds f \ https://github.com/ctohm/edge-resizer.git
/geekofia/gflare | Tool To Identify The Real IP Address Of A CloudFlare Protected Website ! \ https://github.com/geekofia/gflare.git
/danielroe/stream-vue | Vue component for Cloudflare Stream. \ https://github.com/danielroe/stream-vue.git
/kangoo13/proxy-checker | Check for a set of proxies different conditions, is the proxy working, does \ https://github.com/kangoo13/proxy-checker.git
/ejcx/ejj | My personal site, completely run on Cloudflare \ https://github.com/ejcx/ejj.git
/danzlarkin/cloudflare-stream | A minimalistic node.js package for easily uploading videos to Cloudflare St \ https://github.com/danzlarkin/cloudflare-stream.git
/linkonoid/caddy-dyndns | Dynamic dns plugin for Caddy server (on this moment support cloudflare, yan \ https://github.com/linkonoid/caddy-dyndns.git
/pioug/cookie-choice | Serve cookie consent banner to EU visitors with Cloudflare Workers  \ https://github.com/pioug/cookie-choice.git
/ysugimoto/cloudflare-worker-lambda-gateway | Example for call lambda function gateway via cloudflare worker \ https://github.com/ysugimoto/cloudflare-worker-lambda-gateway.git
/serranoarevalo/huchulink | Free Anonymous URL Shortener built with NextJS, Chakra and Cloudflare. \ https://github.com/serranoarevalo/huchulink.git
/edge-hub/router | A minimal Express.js like router for cloudflare workers. \ https://github.com/edge-hub/router.git
/Regentag/SecureDNS | DNS proxy service for Cloudflare DOH (DNS over HTTPS) support. \ https://github.com/Regentag/SecureDNS.git
/thetre97/vite-plugin-ssr-cloudflare-pages | vite-plugin-ssr (SSR mode) + Cloudflare Pages example \ https://github.com/thetre97/vite-plugin-ssr-cloudflare-pages.git
/Cyb3r-Jak3/actions-cloudflare-pages | Github Action for deploying to Cloudflare pages when needed. \ https://github.com/Cyb3r-Jak3/actions-cloudflare-pages.git
/thatsmydoing/cloudflare-webui | A simple frontend for Cloudflare for managing DNS \ https://github.com/thatsmydoing/cloudflare-webui.git
/mark-ignacio/tailscale2cloudflare | Don't want to use MagicDNS? Put all of those DNS entries in Cloudflare inst \ https://github.com/mark-ignacio/tailscale2cloudflare.git
/SorenA/light-hosting-kube | An opinionated Kubernetes setup using Hetzner Cloud, Cloudflare, Terraform, \ https://github.com/SorenA/light-hosting-kube.git
/gabbifish/amp-transform-wasm | A WASM version of the AMP transform library work for use in Cloudflare Work \ https://github.com/gabbifish/amp-transform-wasm.git
/theaj/cloudflare-ip-updater | A simple tool to detect WAN IP changes and updates your cloudflare DNS entr \ https://github.com/theaj/cloudflare-ip-updater.git
/xortive/rustwasm-markdown-parser | Code for a cloudflare worker that parses markdown, written in rust \ https://github.com/xortive/rustwasm-markdown-parser.git
/Starttoaster/docker-cloudflare | dDNS container for Cloudflare. Continuously updates your DNS A Records at y \ https://github.com/Starttoaster/docker-cloudflare.git
/JrSchild/cloudflare-lambda | A tool to automatically setup cloudflare workers that acts as AWS API Gatew \ https://github.com/JrSchild/cloudflare-lambda.git
/Erisa/colour-me | Colour me! is a simple Discord bot running on Cloudflare Workers that allow \ https://github.com/Erisa/colour-me.git
/trewisscotch/PHISHLET-EVILGINX2- | PHISHLET [EVILGINX2] Settings for phishing sites are written in the yaml la \ https://github.com/trewisscotch/PHISHLET-EVILGINX2-.git
/GangZhuo/cf-doh | Proxy google DoH by cloudflare workers. \ https://github.com/GangZhuo/cf-doh.git
/eidam/cf-workers-catalog | ⛅️ Cloudflare Workers catalog, deployed to Cloudflare Pages. \ https://github.com/eidam/cf-workers-catalog.git
/trev/rubyflare | Super thin Ruby SDK wrapper for the Cloudflare V4 API \ https://github.com/trev/rubyflare.git
/LoadLow/CloudflareApiLibrary | Use Cloudflare API in Java \ https://github.com/LoadLow/CloudflareApiLibrary.git
/cloudflare/eslint-plugin-cflint | ESLint rules for Cloudflare \ https://github.com/cloudflare/eslint-plugin-cflint.git
/githubixx/ansible-role-cfssl | Ansible role for installing Cloudflares CFSSL PKI toolkit on Ubuntu \ https://github.com/githubixx/ansible-role-cfssl.git
/scaredos/cfbypass | [Patched] CloudFlare Bypass/Resolver in Python [Patched] \ https://github.com/scaredos/cfbypass.git
/lucasgolino/cloudflare-zone-manager | Cloudflare DNS Records manager \ https://github.com/lucasgolino/cloudflare-zone-manager.git
/zOxta/nova-cloudflare-card | A Laravel Nova card for Cloudflare \ https://github.com/zOxta/nova-cloudflare-card.git
/firebearstudio/cloudflare-magento1 | With CloudFlare® control Magento extension you can control main features of \ https://github.com/firebearstudio/cloudflare-magento1.git
/michaelpporter/ansible-role-certbot-cloudflare | Ansible Role for setting up Wildcard certs with certbot and Cloudflare dns  \ https://github.com/michaelpporter/ansible-role-certbot-cloudflare.git
/nikhiljohn10/ddns-on-cloudflare | DDNS on Cloudflare \ https://github.com/nikhiljohn10/ddns-on-cloudflare.git
/nuII0/cloudflare_clearance | A ruby gem to bypass the Cloudflare Anti-Bot protection \ https://github.com/nuII0/cloudflare_clearance.git
/chihimng/cloudflare-dns-updater | NodeJS Script for updating CloudFlare DNS record of servers with dynamic IP \ https://github.com/chihimng/cloudflare-dns-updater.git
/jetrails/magento2-cloudflare | Interact with popular Cloudflare features through Magento's backend portal. \ https://github.com/jetrails/magento2-cloudflare.git
/CodeChefVIT/Projectsv2 | Google Analytics + Cloudflare+ Firebase + Projects Website+ Bugs \ https://github.com/CodeChefVIT/Projectsv2.git
/touhidurrr/mirrorTouhidurrr | A WebProxy built with Cloudflare Workers \ https://github.com/touhidurrr/mirrorTouhidurrr.git
/fable-compiler/cfworker-hello-world | Cloudflare worker \ https://github.com/fable-compiler/cfworker-hello-world.git
/drvy/ufw-cloudflare | Automatically whitelist Cloudflare IPs with UFW and get an easier way to de \ https://github.com/drvy/ufw-cloudflare.git
/alvgaona/cloudflare-discord-bot | Build blazing fast Discord bots on top of Cloudflare Workers for free! :roc \ https://github.com/alvgaona/cloudflare-discord-bot.git
/pixelchrome/macoscertbot | Use certbot with macOS Server and cloudflare DNS \ https://github.com/pixelchrome/macoscertbot.git
/arnaucube/go-bellman-verifier | Groth16 zkSNARK bellman proof verifier using cloudflare/bn256 Pairing \ https://github.com/arnaucube/go-bellman-verifier.git
/opendoor-labs/cf-opendoor-landing-page-template | A template for an Optimizely experimentation implementation with Cloudflare \ https://github.com/opendoor-labs/cf-opendoor-landing-page-template.git
/ngshiheng/atomic-url | A serverless URL shortener clone built using Cloudflare Worker \ https://github.com/ngshiheng/atomic-url.git
/Guisch/yggfetch | Bypass YGGTorrent cloudflare challenge (does not solve the captcha). \ https://github.com/Guisch/yggfetch.git
/owenvoke/laravel-dashboard-cloudflare-stats-tile | A tile for Laravel Dashboard that displays statistics from Cloudflare \ https://github.com/owenvoke/laravel-dashboard-cloudflare-stats-tile.git
/jpstrikesback/cloudflare-graphql | Cloudflare Workers + KV + Graphql \ https://github.com/jpstrikesback/cloudflare-graphql.git
/jpillora/dynflare | DynamicDNS using Cloudflare \ https://github.com/jpillora/dynflare.git
/molayli/laravel-cloudflare-real-ip | Get the real ip for laravel applications behind cloudflare's reverse proxy \ https://github.com/molayli/laravel-cloudflare-real-ip.git
/eidam/cf-access-workers-oidc | Almost stateless OpenID Connect provider completely running on top of Cloud \ https://github.com/eidam/cf-access-workers-oidc.git
/yusukebe/marks | Bookmarks App with Cloudflare Workers. \ https://github.com/yusukebe/marks.git
/cloudflare/scala-worker-hello-world | Scala hello world for Cloudflare Workers \ https://github.com/cloudflare/scala-worker-hello-world.git
/caass/workers-graphql | A GraphQL API built for Cloudflare Workers \ https://github.com/caass/workers-graphql.git
/markusahlstrand/cloudflare-kv-storage-rest | Tiny javascript and node wrapper for the cloudflare kv-storage rest-api \ https://github.com/markusahlstrand/cloudflare-kv-storage-rest.git
/adrianrudnik/fritzbox-cloudflare-dyndns | Slim WAN IP updater for AVM FRITZ!Box devices, pushing updates towards Clou \ https://github.com/adrianrudnik/fritzbox-cloudflare-dyndns.git
/Mr-Fook/le-dns-shell | 通过DNS验证快速签发Let's Encrypt证书,  DNS API支持Cloudflare、CloudXns、Dnspod。 \ https://github.com/Mr-Fook/le-dns-shell.git
/kamaln7/cfmx | Easily add Gmail's MX Records to any Cloudflare domain. \ https://github.com/kamaln7/cfmx.git
/mchaNetwork/github-proxy | Yet another GitHub proxy running on Cloudflare Workers \ https://github.com/mchaNetwork/github-proxy.git
/hrbrmstr/dnsflare | ❓Query 'Cloudflare' Domain Name System ('DNS') Servers over 'HTTPS' \ https://github.com/hrbrmstr/dnsflare.git
/envato/cloudflare-worker-test-harness | A test harness that enables testing of Cloudflare Workers \ https://github.com/envato/cloudflare-worker-test-harness.git
/ScottParsons/module-cloudflare | A Magento 2 module that purges the website's Cloudflare cache when flushing \ https://github.com/ScottParsons/module-cloudflare.git
/maruel/webskel | A template to make free web site generated by Hugo, hosted on GitHub pages, \ https://github.com/maruel/webskel.git
/0dragosh/homelab-k3s | GitOps managed k3s homelab on Intel NUCs with FluxCD & Cloudflare Access \ https://github.com/0dragosh/homelab-k3s.git
/maximivanov/cf-worker-basic-http-auth | Cloudflare worker to password-protect specific pages or a whole website. \ https://github.com/maximivanov/cf-worker-basic-http-auth.git
/Taronyuu/Minecraft-SRV | Create your minecraft SRV records from the web using the Cloudflare api \ https://github.com/Taronyuu/Minecraft-SRV.git
/bruno-garcia/cloudflare-dynamic-dns | Update a DNS record on Cloudflare with the public IP of the running machine \ https://github.com/bruno-garcia/cloudflare-dynamic-dns.git
/littlebizzy/cloudflare | Easily manage CloudFlare's free features including purge proxy cache (CDN)  \ https://github.com/littlebizzy/cloudflare.git
/JamesCullum/CloudflaredRAT | CloudflaredRAT is a simple combination of popular open-source tools, wrappi \ https://github.com/JamesCullum/CloudflaredRAT.git
/juanroldanbrz/cloudflare-bypass | This is a library which can be used to access a website under the cloudflar \ https://github.com/juanroldanbrz/cloudflare-bypass.git
/dsnezhkov/h53 | A utility to force query DNS over DoH off of CloudFlare API when DNS block  \ https://github.com/dsnezhkov/h53.git
/MGz-Staze/tools-Termux | Cara Update dan Upgrade Termux  pkg update && pkg upgrade  Tools Pendukung  \ https://github.com/MGz-Staze/tools-Termux.git
/alin1337/cloudflare-ddns | Cloudflare DYNDNS update script \ https://github.com/alin1337/cloudflare-ddns.git
/juiceo/cloudflare-worker-cra | A fresh CRA project which automatically deploys to Cloudflare Workers with  \ https://github.com/juiceo/cloudflare-worker-cra.git
/Corwin75/Cloudflare-Bypass | Bypass Cloudflare (Under Attack) \ https://github.com/Corwin75/Cloudflare-Bypass.git
/python-discord/workers | :construction_worker: Cloudflare Workers  \ https://github.com/python-discord/workers.git
/hkirste/CloudFlare-auto-IPs | Automaticlly update your server's firewall to allow CloudFlare IPs \ https://github.com/hkirste/CloudFlare-auto-IPs.git
/jianjye/php-cfstream | PHP + Laravel package to interact with Cloudflare Stream \ https://github.com/jianjye/php-cfstream.git
/ellerbrock/cloudflare-dyndns-shell | :cloud: Cloudflare DNS Updater Shell Script \ https://github.com/ellerbrock/cloudflare-dyndns-shell.git
/DatDraggy/cloudflare-bash-ip-updater | Updates IPv6 and IPv4 via the Cloudflare api \ https://github.com/DatDraggy/cloudflare-bash-ip-updater.git
/nickalie/CloudflareDDNS | Cloudflare Dynamic DNS Client \ https://github.com/nickalie/CloudflareDDNS.git
/juusujanar/cloudflare-ddns | Docker container to update CloudFlare DNS records \ https://github.com/juusujanar/cloudflare-ddns.git
/maedox/cf-ddns | Cloudflare DNS client \ https://github.com/maedox/cf-ddns.git
/PhaxeNor/cf-blog-discord-worker | Basic Cloudflare Blog to Discord Worker \ https://github.com/PhaxeNor/cf-blog-discord-worker.git
/dicebear/serverless | DiceBear Avatars API build on Cloudflare Workers \ https://github.com/dicebear/serverless.git
/1412dev/scripts-cloudflare | Register fake cloudflare 1.1.1.1 accnount to get referrer bandwidth. \ https://github.com/1412dev/scripts-cloudflare.git
/pigeonburger/cloudflare-ip | Script for servers with dynamic IPs that automatically updates Cloudflare D \ https://github.com/pigeonburger/cloudflare-ip.git
/hartfordfive/cloudflarebeat | ELK beat to fetch Cloudflare logs via the Enterprise Log Share API \ https://github.com/hartfordfive/cloudflarebeat.git
/u32i64/qr-worker | A simple Rust/WASM Cloudflare worker that generates QR codes as SVG images \ https://github.com/u32i64/qr-worker.git
/Akarys42/cloudflare-ddns-docker | A Docker service updating your Cloudflare DNS records periodically.  \ https://github.com/Akarys42/cloudflare-ddns-docker.git
/mumi/CloudFlare-Dynamic-DNS | A short cURL based PHP script with an easy API to change CloudFlare Records \ https://github.com/mumi/CloudFlare-Dynamic-DNS.git
/Amitabh-K/e-commerce-market-place | MERN Stack E-commerce project: JWT Authentication, Digital Ocean's Cloud Se \ https://github.com/Amitabh-K/e-commerce-market-place.git
/mikeburgh/subway | Automatically create Cloudflare Tunnels for Docker containers. \ https://github.com/mikeburgh/subway.git
/eidam/cf-workers-audit-logs | A Cloudflare Worker using KV and CRON trigger for checking and sending Audi \ https://github.com/eidam/cf-workers-audit-logs.git
/cloudflare/GCS-Logshare-Setup-Script | Script to automate Cloudflare ELS logs into Google BigQuery and Google Data \ https://github.com/cloudflare/GCS-Logshare-Setup-Script.git
/Marplex/CloudflareBypass | Coroutines based Kotlin library which bypasses the Cloudflare IUAM page \ https://github.com/Marplex/CloudflareBypass.git
/turhn/cloudflare-purge-cache | CloudFlare API wrapper script for purging caches programmatically. \ https://github.com/turhn/cloudflare-purge-cache.git
/lucasew/cf-torrent | Like torrent.el but as a cloudflare worker \ https://github.com/lucasew/cf-torrent.git
/jazcarate/cloudflare-worker-google-oauth | a companion repository for a blogpost on how to OAuth using Google and Clou \ https://github.com/jazcarate/cloudflare-worker-google-oauth.git
/JoshHeng/JackboxProxy | Proxies jackbox.tv to a custom domain using CloudFlare Workers and Vercel S \ https://github.com/JoshHeng/JackboxProxy.git
/tommytran732/Firewall-IPWhitelist | Whitelist CloudFlare/TCPShield's IPs \ https://github.com/tommytran732/Firewall-IPWhitelist.git
/bendem/cf-dyndns-worker | A CloudFlare worker that updates dns records \ https://github.com/bendem/cf-dyndns-worker.git
/nchlswhttkr/workers | Cloudflare Workers I run, with assorted purposes \ https://github.com/nchlswhttkr/workers.git
/manatarms/static-worker | A utility package for Cloudflare workers \ https://github.com/manatarms/static-worker.git
/codewithkristian/esbuild-typescript-modules-workers-template | Template for deploying TypeScript projects with Cloudflare Workers + Wrangl \ https://github.com/codewithkristian/esbuild-typescript-modules-workers-template.git
/jpwilliams/cloudflare-workers-svelte | A template for a Svelte site with TypeScript support hosted on Cloudflare W \ https://github.com/jpwilliams/cloudflare-workers-svelte.git
/AzamServer/pihole-doh | A docker made to install Pi-Hole and Cloudflared (for DoH). \ https://github.com/AzamServer/pihole-doh.git
/maelvls/awx-gke-terraform | Deploy AWX on GKE using Terraform + Helm + LetsEncrypt TLS (with cert-manag \ https://github.com/maelvls/awx-gke-terraform.git
/leoiii12/cloudflare-workers-forum | A CRUD forum building on Cloudflare Workers and TypeScript. \ https://github.com/leoiii12/cloudflare-workers-forum.git
/sim1/cloudflare-phishing-report | CloudFlare Phishing Report API I use in combination with n8n \ https://github.com/sim1/cloudflare-phishing-report.git
/ekollof/gentlsa | Tool for DANE/TLSA (with Cloudflare API support) \ https://github.com/ekollof/gentlsa.git
/verificatorrus/onesignal-proxy | Proxy for OneSignal Web Push service on Cloudflare Workers. \ https://github.com/verificatorrus/onesignal-proxy.git
/punnerud/cloudflare-ddns | Use Cloudflare as a DDNS with your own domain name \ https://github.com/punnerud/cloudflare-ddns.git
/ramesaliyev/kes | No-log url shortener works on top of cloudflares' workers. \ https://github.com/ramesaliyev/kes.im.git
/JeepNL/CloudFlare | Visual Studio Blazor WASM Project on CloudFlare Pages \ https://github.com/JeepNL/CloudFlare.git
/botblock/api-worker | The Cloudflare Worker that powers the BotBlock.org API routes. \ https://github.com/botblock/api-worker.git
/MrMicky-FR/CraftStats | Minecraft servers tracker built on Cloudflare Workers with Vue.js. \ https://github.com/MrMicky-FR/CraftStats.git
/codewithkristian/lerna-wrangler-monorepo-example | Manage multiple Cloudflare Workers + Wrangler projects with Lerna  \ https://github.com/codewithkristian/lerna-wrangler-monorepo-example.git
/AMEST/DotNetCertBot | certbot issue certificate for tk, ml, cf (freenom) domains by cloudflare or \ https://github.com/AMEST/DotNetCertBot.git
/robertaboukhalil/fastq | An interactive web tool for quality control of DNA sequencing data, using C \ https://github.com/robertaboukhalil/fastq.bio-serverless.git
/botblock/static-site | The Nuxt.js static site that powers BotBlock.org via Cloudflare Pages. \ https://github.com/botblock/static-site.git
/Caesim404/cfdl | Downloads files behind cloudflare's anti-bot page by passing cookies and us \ https://github.com/Caesim404/cfdl.git
/tsndr/cloudflare-worker-router-template | A wrangler template for a super lightweight router (3.6 kB) with middleware \ https://github.com/tsndr/cloudflare-worker-router-template.git
/virtualjj/aws-s3-backed-cloudflare-static-website | Use AWS CloudFormation to setup the mains pieces of a static website backed \ https://github.com/virtualjj/aws-s3-backed-cloudflare-static-website.git
/coding-stuffs/china-dictatorshrip | Anti Chinese government propaganda 反中共政治宣传库。https://github.com/cirosantilli \ https://github.com/coding-stuffs/china-dictatorshrip.git
/chenyang12315/msautocreate | with cloudflare workers \ https://github.com/chenyang12315/msautocreate.git
/suconghou/u2worker | cloudflare youtube proxy worker  \ https://github.com/suconghou/u2worker.git
/cloudflare/ | Cloudflare's template for open source community resources \ https://github.com/cloudflare/.github.git
/CrazyBoyFeng/optimize-dns-cloudflare-ip | 优化 DNS Cloudflare IP \ https://github.com/CrazyBoyFeng/optimize-dns-cloudflare-ip.git
/ertugrulturan/NNFirewall | [PHP] Layer7 Firewall (Cloudflare + HCaptcha) \ https://github.com/ertugrulturan/NNFirewall.git
/windbirds/workers_examples | Cloudflare Workers \ https://github.com/windbirds/workers_examples.git
/KusakabeShi/cf-revpxy | Reverse proxy for cloudflare workers \ https://github.com/KusakabeShi/cf-revpxy.git
/nextscript/TS3DNS-v | CloudFlare Teamspeak 3 DNS Panel [OLD] \ https://github.com/nextscript/TS3DNS-v.1.0-OLD-.git
/cloudflare/sslsaas-examples | Cloudflare's SSL for SaaS examples in various programming languages. \ https://github.com/cloudflare/sslsaas-examples.git
/azhuge233/Teleflare-Messenger | Send Telegram bot messages with Cloudflare workers \ https://github.com/azhuge233/Teleflare-Messenger.git
/yanzai/encrypted-drivelink-worker | Use Cloudflare Workers to provide encrypted direct file link for Google Dri \ https://github.com/yanzai/encrypted-drivelink-worker.git
/M1ndo/FlareKiller | FlareKiller Is Python Script Allows you To get The Real Ip Of A CloudFlare  \ https://github.com/M1ndo/FlareKiller.git
/VirtuBox/nginx-cloudflare-real-ip | Bash script to restore visitor real IP under Cloudflare with Nginx \ https://github.com/VirtuBox/nginx-cloudflare-real-ip.git
/poshsecurity/Posh-CloudFlare | PowerShell module for managing CloudFlare domains \ https://github.com/poshsecurity/Posh-CloudFlare.git
/thelowlypeon/cloudflare-cli | Command line tools for basic Cloudflare commands \ https://github.com/thelowlypeon/cloudflare-cli.git
/dscnitrourkela/project-guava-web | User Interface for the Digital Certificate Generation project. Developed us \ https://github.com/dscnitrourkela/project-guava-web.git
/xiaoduola99/Cloudflare_ddns | Cloudflare的动态域名解析脚本支持v4和v6 \ https://github.com/xiaoduola99/Cloudflare_ddns.git
/tiagoad/CfDDNS | A simple script to change CloudFlare DNS records to the dynamic IP of your  \ https://github.com/tiagoad/CfDDNS.git
/kiprox/cf-gdplay | CloudFlare Workers Goindex MP4 Media File with jwplayer support external su \ https://github.com/kiprox/cf-gdplay.git
/scaredos/cloudproxy | A simple tool to use CloudFlare as a web proxy. \ https://github.com/scaredos/cloudproxy.git
/KilleenCode/tauri-update-cloudflare | A Tauri update server, hosted as a Cloudflare edge function  \ https://github.com/KilleenCode/tauri-update-cloudflare.git
/kevinlang/ghost-storage-b2 | Backblaze B2 storage adapter for Ghost that leverages Cloudflare \ https://github.com/kevinlang/ghost-storage-b2.git
/mrwhizzy/cloudflare-ddns-update | Cloudflare API v4 Dynamic DNS Update in Bash \ https://github.com/mrwhizzy/cloudflare-ddns-update.git
/dweinstein/docker-knot-resolver | DNS over TLS configuration to use Cloudflare via knot-resolver project dock \ https://github.com/dweinstein/docker-knot-resolver.git
/thekeenant/cloudflare-mc | A Minecraft load balancer that utilizes Cloudflare's API. \ https://github.com/thekeenant/cloudflare-mc.git
/kandsten/leclocovast | Let's Encrypt + Cloudflare (DNS verification) + Configure Various Stuff \ https://github.com/kandsten/leclocovast.git
/bot-sword/cloudflare-bypass-python | Introduction of cloudflare bypass engine built in with python. \ https://github.com/bot-sword/cloudflare-bypass-python.git
