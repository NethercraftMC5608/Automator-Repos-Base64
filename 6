/nvm-sh/nvm | Node Version Manager - POSIX-compliant bash script to manage multiple activ \ https://github.com/nvm-sh/nvm.git
/alexanderepstein/Bash-Snippets | A collection of small bash scripts for heavy terminal users \ https://github.com/alexanderepstein/Bash-Snippets.git
/vishnubob/wait-for-it | Pure bash script to test and wait on the availability of a TCP host and por \ https://github.com/vishnubob/wait-for-it.git
/andreafabrizi/Dropbox-Uploader | Dropbox Uploader is a BASH script which can be used to upload, download, li \ https://github.com/andreafabrizi/Dropbox-Uploader.git
/donnemartin/dev-setup | macOS development environment setup:  Easy-to-understand instructions with  \ https://github.com/donnemartin/dev-setup.git
/Leo-G/Data-Science-Wiki | A wiki of  DataScience, Statistics, Maths, R,Python, AI, Machine Learning,  \ https://github.com/Leo-G/Data-Science-Wiki.git
/awesome-lists/awesome-bash | A curated list of delightful Bash scripts and resources. \ https://github.com/awesome-lists/awesome-bash.git
/v1s1t0r1sh3r3/airgeddon | This is a multi-use bash script for Linux systems to audit wireless network \ https://github.com/v1s1t0r1sh3r3/airgeddon.git
/v2fly/fhs-install-v2ray | Bash script for installing V2Ray in operating systems such as Debian / Cent \ https://github.com/v2fly/fhs-install-v2ray.git
/leebaird/discover | Custom bash scripts used to automate various penetration testing tasks incl \ https://github.com/leebaird/discover.git
/johanhaleby/kubetail | Bash script to tail Kubernetes logs from multiple pods at the same time \ https://github.com/johanhaleby/kubetail.git
/quericy/one-key-ikev2-vpn | A bash script base on Centos or Ubuntu help you to create IKEV2/L2TP vpn. \ https://github.com/quericy/one-key-ikev2-vpn.git
/fideloper/Vaprobash | Vagrant Provisioning Bash Scripts \ https://github.com/fideloper/Vaprobash.git
/bobbyiliev/introduction-to-bash-scripting | Free Introduction to Bash Scripting eBook \ https://github.com/bobbyiliev/introduction-to-bash-scripting.git
/kvz/bash3boilerplate | Templates to write better Bash scripts \ https://github.com/kvz/bash3boilerplate.git
/dana-at-cp/backdoor-apk | backdoor-apk is a shell script that simplifies the process of adding a back \ https://github.com/dana-at-cp/backdoor-apk.git
/tdenniston/bish | Bish is a language that compiles to Bash. It's designed to give shell scrip \ https://github.com/tdenniston/bish.git
/lmc999/RegionRestrictionCheck | A bash script to check if your VPS's IP is available for various OTT platfo \ https://github.com/lmc999/RegionRestrictionCheck.git
/kingkool68/generate-ssl-certs-for-local-development | A bash script for generating trusted self-signed SSL certs for local develo \ https://github.com/kingkool68/generate-ssl-certs-for-local-development.git
/cfenollosa/bashblog | A single Bash script to create blogs. Download, run, write, done! \ https://github.com/cfenollosa/bashblog.git
/adi1090x/dynamic-wallpaper | A simple bash script to set wallpapers according to current time, using cro \ https://github.com/adi1090x/dynamic-wallpaper.git
/shellfire-dev/shellfire | A repository of namespaced, composable shell (bash, sh and dash) function l \ https://github.com/shellfire-dev/shellfire.git
/wagoodman/bashful | Use a yaml file to stitch together commands and bash snippits and run them  \ https://github.com/wagoodman/bashful.git
/paxtonhare/demo-magic | A handy shell script that enables you to write repeatable demos in a bash e \ https://github.com/paxtonhare/demo-magic.git
/ruanyf/simple-bash-scripts | A collection of simple Bash scripts \ https://github.com/ruanyf/simple-bash-scripts.git
/masonr/yet-another-bench-script | YABS - a simple bash script to estimate Linux server performance using fio, \ https://github.com/masonr/yet-another-bench-script.git
/P3TERX/warp | WARP 一键安装脚本 | Cloudflare WARP Installer | A Bash script that automatically  \ https://github.com/P3TERX/warp.sh.git
/RoverWire/virtualhost | Bash Script to easy create or delete apache virtual hosts on ubuntu \ https://github.com/RoverWire/virtualhost.git
/StevenSLXie/Tutorials-for-Web-Developers | Tutorials for web developers including bash scripting, Linux commands, Mong \ https://github.com/StevenSLXie/Tutorials-for-Web-Developers.git
/riobard/bash-powerline | Powerline-style Bash prompt in pure Bash script. See also https://github.co \ https://github.com/riobard/bash-powerline.git
/coursehero/slacktee | slacktee is a bash script that works like tee command. Instead of writing t \ https://github.com/coursehero/slacktee.git
/anti-ddos/Anti-DDOS |  Anti DDOS | Bash Script Project  \ https://github.com/anti-ddos/Anti-DDOS.git
/lmorg/murex | Bash-like shell and scripting environment with advanced features designed f \ https://github.com/lmorg/murex.git
/ralish/bash-script-template | A best practices Bash script template with several useful functions \ https://github.com/ralish/bash-script-template.git
/swoodford/aws | A collection of bash shell scripts for automating various tasks with Amazon \ https://github.com/swoodford/aws.git
/denysdovhan/learnyoubash | Learn you how to write your first bash script \ https://github.com/denysdovhan/learnyoubash.git
/BashSupport/BashSupport | Bash and shell script language support for JetBrains IDEs. Please refer to  \ https://github.com/BashSupport/BashSupport.git
/cloudsec/brootkit | Lightweight rootkit implemented by bash shell scripts v0.10 \ https://github.com/cloudsec/brootkit.git
/trick77/ipset-blacklist | A bash script to ban large numbers of IP addresses published in blacklists. \ https://github.com/trick77/ipset-blacklist.git
/eth-p/bat-extras | Bash scripts that integrate bat with various command line tools. \ https://github.com/eth-p/bat-extras.git
/m3n0sd0n4ld/uDork | uDork is a script written in Bash Scripting that uses advanced Google searc \ https://github.com/m3n0sd0n4ld/uDork.git
/labbots/google-drive-upload | Bash scripts to upload files to google drive \ https://github.com/labbots/google-drive-upload.git
/kristopolous/TickTick | JSON in your Bash scripts \ https://github.com/kristopolous/TickTick.git
/jmcantrell/bashful | A collection of modules to simplify writing bash scripts. \ https://github.com/jmcantrell/bashful.git
/bigbluebutton/bbb-install | BASH script to install BigBlueButton in 30 minutes. \ https://github.com/bigbluebutton/bbb-install.git
/xwmx/bash-boilerplate | A collection of Bash scripts for creating safe and useful command line prog \ https://github.com/xwmx/bash-boilerplate.git
/mig1984/bashible | Simple bash DSL framework for writing shell scripts safe and agile. \ https://github.com/mig1984/bashible.git
/bahamas10/bash-style-guide | A style guide for writing safe, predictable, and portable bash scripts (not \ https://github.com/bahamas10/bash-style-guide.git
/pimlie/ubuntu-mainline-kernel | Bash script for Ubuntu (and derivatives) to easily (un)install kernels from \ https://github.com/pimlie/ubuntu-mainline-kernel.sh.git
/Hackplayers/4nonimizer | A bash script for anonymizing the public IP used to browsing Internet, mana \ https://github.com/Hackplayers/4nonimizer.git
/chvancooten/BugBountyScanner | A Bash script and Docker image for Bug Bounty reconnaissance. Intended for  \ https://github.com/chvancooten/BugBountyScanner.git
/HariSekhon/DevOps-Bash-tools | 750+ DevOps Bash Scripts - AWS, GCP, Kubernetes, Docker, CI/CD, APIs, SQL,  \ https://github.com/HariSekhon/DevOps-Bash-tools.git
/vk496/linset | Evil Twin Attack Bash script \ https://github.com/vk496/linset.git
/centos-bz/ezhttp | The bash shell script stack for installation of Nginx OpenResty Tengine lua \ https://github.com/centos-bz/ezhttp.git
/NullArray/RootHelper | A  Bash script that downloads and unzips scripts that will aid with privile \ https://github.com/NullArray/RootHelper.git
/0xApt/awesome-bbht | A bash script that will automatically install a list of bug hunting tools t \ https://github.com/0xApt/awesome-bbht.git
/gigamonkey/monorepoize | Bash scripts for creating a monorepo out of smaller repos. \ https://github.com/gigamonkey/monorepoize.git
/natelandau/shell-scripting-templates | Shell scripting utility functions and a bash script boilerplate template \ https://github.com/natelandau/shell-scripting-templates.git
/st42/termux-sudo | A bash script that provides sudo for Termux \ https://github.com/st42/termux-sudo.git
/JElchison/format-udf | Bash script to format a block device (hard drive or Flash drive) in UDF. Th \ https://github.com/JElchison/format-udf.git
/gkrizek/bash-lambda-layer | Run Bash scripts in AWS Lambda via Layers \ https://github.com/gkrizek/bash-lambda-layer.git
/msh-contrib/xeon | module loader for bash scripts with `require` style \ https://github.com/msh-contrib/xeon.git
/Cyclenerd/static_status | Bash script to generate a static status page. \ https://github.com/Cyclenerd/static_status.git
/vmavromatis/gnome-layout-manager | A bash script that batch installs and tweaks GNOME extensions as well as GT \ https://github.com/vmavromatis/gnome-layout-manager.git
/ShivamKumarJha/android_tools | Bash scripts for ROM development stuff. \ https://github.com/ShivamKumarJha/android_tools.git
/technopagan/adept-jpg-compressor | A Bash script to automate adaptive JPEG compression using common CLI tools \ https://github.com/technopagan/adept-jpg-compressor.git
/diogo-fernan/ir-rescue | A Windows Batch script and a Unix Bash script to comprehensively collect ho \ https://github.com/diogo-fernan/ir-rescue.git
/GinjaChris/pentmenu | A bash script for recon and DOS attacks \ https://github.com/GinjaChris/pentmenu.git
/lesaff/serverpilot-letsencrypt | (NO LONGER MAINTAINED) | Bash script to generate and install Let's Encrypt  \ https://github.com/lesaff/serverpilot-letsencrypt.git
/aviaryan/utility-bash-scripts | 🤓 Useful bash scripts to do automatable tasks with a single command \ https://github.com/aviaryan/utility-bash-scripts.git
/canha/golang-tools-install-script | Simple Bash script to automate Go language tools single user installation o \ https://github.com/canha/golang-tools-install-script.git
/adi1090x/battery-wallpaper | Simple bash script to set wallpaper according to battery percentage with ch \ https://github.com/adi1090x/battery-wallpaper.git
/DingGuodong/LinuxBashShellScriptForOps | Linux Bash Shell Script and Python Script For Ops and Devops \ https://github.com/DingGuodong/LinuxBashShellScriptForOps.git
/danielebailo/couchdb-dump | Bash command line scripts to dump &restore a couchdb database \ https://github.com/danielebailo/couchdb-dump.git
/LinuxStory/Advanced-Bash-Scripting-Guide-in-Chinese | Advanced Bash-Scripting Guide(Revision 10)翻译计划 \ https://github.com/LinuxStory/Advanced-Bash-Scripting-Guide-in-Chinese.git
/edenspiekermann/sprite | A Bash script to build a SVG sprite from a folder of SVG files (typically i \ https://github.com/edenspiekermann/sprite.sh.git
/KonradIT/gopro-linux | Bash script which helps with post production for GoPro cameras in Linux, ca \ https://github.com/KonradIT/gopro-linux.git
/jpetrucciani/bash | An inline Bash script runner, for Python. \ https://github.com/jpetrucciani/bash.py.git
/JakeWharton/mkvdts2ac3 | Bash script to convert DTS audio to AC3 within a matroska file. \ https://github.com/JakeWharton/mkvdts2ac3.git
/SafeBreach-Labs/pwndsh | Post-exploitation framework (and an interactive shell) developed in Bash sh \ https://github.com/SafeBreach-Labs/pwndsh.git
/hetzneronline/installimage | Bash scripts to universally deploy various distributions \ https://github.com/hetzneronline/installimage.git
/vaniacer/sshto | Small bash script to manage your ssh connections. It builds menu (via dialo \ https://github.com/vaniacer/sshto.git
/ChaoticWeg/discord | Write-only command-line Discord webhook integration written in 100% Bash sc \ https://github.com/ChaoticWeg/discord.sh.git
/AbedAlqaderSwedan1/ASWCrypter | An Bash&Python Script For Generating Payloads that Bypasses All Antivirus s \ https://github.com/AbedAlqaderSwedan1/ASWCrypter.git
/giovtorres/kvm-install-vm | Bash script to build local virtual machines using KVM/libvirt and cloud-ini \ https://github.com/giovtorres/kvm-install-vm.git
/CaseyLabs/aws-ec2-ebs-automatic-snapshot-bash | Bash script for Automatic EBS Snapshots and Cleanup on Amazon Web Services  \ https://github.com/CaseyLabs/aws-ec2-ebs-automatic-snapshot-bash.git
/adoyle-h/lobash | A modern, safe, powerful utility library for Bash script development. \ https://github.com/adoyle-h/lobash.git
/offensive-security/nethunter-LRT | The Nethunter Linux Root Toolkit is a collection of bash scripts which inst \ https://github.com/offensive-security/nethunter-LRT.git
/azet/community_bash_style_guide | Community Bash Style Guide: writing useful and modern bash scripts, serious \ https://github.com/azet/community_bash_style_guide.git
/zenstruck/schedule-bundle | Schedule Cron jobs (commands/callbacks/bash scripts) within your Symfony ap \ https://github.com/zenstruck/schedule-bundle.git
/imperialwicket/elasticsearch-logstash-index-mgmt | Bash scripts for managing backup, delete, and restore of elasticsearch inde \ https://github.com/imperialwicket/elasticsearch-logstash-index-mgmt.git
/mumoshu/variant | Wrap up your bash scripts into a modern CLI today. Graduate to a full-blown \ https://github.com/mumoshu/variant.git
/jgigault/42FileChecker | 42FileChecker is a tiny bash script developed at 42 school for testing and  \ https://github.com/jgigault/42FileChecker.git
/phohenecker/switch-cuda | A simple bash script for switching between installed versions of CUDA. \ https://github.com/phohenecker/switch-cuda.git
/v4d1/SpoofThatMail | Bash script to check if a domain or list of domains can be spoofed based in \ https://github.com/v4d1/SpoofThatMail.git
/w00fz/xdebug-osx | Simple bash script to toggle xdebug on/off in OSX \ https://github.com/w00fz/xdebug-osx.git
/apankrat/now | Pipeable bash script that prints current time while waiting for an input fr \ https://github.com/apankrat/now.sh.git
/Goles/Battery | Battery is a bash script to display your Laptop's battery status on the ter \ https://github.com/Goles/Battery.git
/bentasker/HLS-Stream-Creator | Simple Bash Script to take a media file, segment it and create an M3U8 play \ https://github.com/bentasker/HLS-Stream-Creator.git
/jamf/DEPNotify-Starter | Bash script to start DEPNotify and run policies during enrollment with Jamf \ https://github.com/jamf/DEPNotify-Starter.git
/tokyoneon/Armor | Armor is a simple Bash script designed to create encrypted macOS payloads c \ https://github.com/tokyoneon/Armor.git
/jpalardy/warp | A bash script to SSH from a list of hostnames. \ https://github.com/jpalardy/warp.git
/omgmog/install-all-firefox | bash script to install major Firefox versions on Mac OS X \ https://github.com/omgmog/install-all-firefox.git
/zbaylin/rofi-wifi-menu | a bash script using nmcli and rofi to make a wifi menu in i3/openbox/bspwm \ https://github.com/zbaylin/rofi-wifi-menu.git
/kris-anderson/remove-zoom-macos | A bash script for macOS that will completely uninstall the Zoom Desktop Cli \ https://github.com/kris-anderson/remove-zoom-macos.git
/arfoll/unrarall | bash script to unrar everything and cleanup in a given directory \ https://github.com/arfoll/unrarall.git
/xl-tech/OpenVPN-easy-setup | Bash script for easy and fast OpenVPN deploy \ https://github.com/xl-tech/OpenVPN-easy-setup.git
/trustedsec/hardcidr | hardCIDR is a Linux Bash script, but also functions under macOS. Your milea \ https://github.com/trustedsec/hardcidr.git
/rand0m1ze/ezsploit | Linux bash script automation for metasploit \ https://github.com/rand0m1ze/ezsploit.git
/perusio/nginx-cache-purge | A bash script for deleting items from Nginx cache \ https://github.com/perusio/nginx-cache-purge.git
/matthewmccullough/scripts | My favorite Bash and ZShell scripts and machine setup automation that help  \ https://github.com/matthewmccullough/scripts.git
/masternodes/vps | A handy bash script to setup crypto masternodes in no time. Initially devel \ https://github.com/masternodes/vps.git
/jplew/SyncDB | Bash script meant to take the tedium out of deploying and updating database \ https://github.com/jplew/SyncDB.git
/0xmachos/mOSL | Bash script to audit and fix macOS Catalina (10.15.x) security settings \ https://github.com/0xmachos/mOSL.git
/reHackable/scripts | [ THIS PROJECT IS CURRENTLY ON HALT :( ] A set of bash scripts that may enh \ https://github.com/reHackable/scripts.git
/fohtla/Fallout3Terminal | A recreation of the Fallout 3 terminal via a linux bash script! Requires co \ https://github.com/fohtla/Fallout3Terminal.git
/chbrown/overdrive | Bash script to download mp3s from the OverDrive audiobook service \ https://github.com/chbrown/overdrive.git
/ChrisPritchard/FSH | F# Shell with integrated F# scripting. Like Bash or Powershell, but better  \ https://github.com/ChrisPritchard/FSH.git
/brannondorsey/sniff-probes | Plug-and-play bash script for sniffing 802.11 probes requests :nose:  \ https://github.com/brannondorsey/sniff-probes.git
/PeterMosmans/security-scripts | A collection of security related Python and Bash shell scripts. Analyze hos \ https://github.com/PeterMosmans/security-scripts.git
/wuseman/Synology | Cheatsheet and bash scripts sripts for Synology Nas Stations cheet cheat sh \ https://github.com/wuseman/Synology.git
/Cyclenerd/gallery_shell |  Bash Script to generate static responsive image web galleries. \ https://github.com/Cyclenerd/gallery_shell.git
/piroor/tweet | Twitter client written in simple Bash script \ https://github.com/piroor/tweet.sh.git
/vp777/procrustes | A bash script that automates the exfiltration of data over dns in case we h \ https://github.com/vp777/procrustes.git
/Taoviqinvicible/Tools-termux | 1.[Script Termux] -Cmatrix *apt-get update *apt-get upgrade *apt-get instal \ https://github.com/Taoviqinvicible/Tools-termux.git
/mikejolley/github-to-wordpress-deploy-script | Bash script to handle tagging on Github and deployment to WordPress SVN \ https://github.com/mikejolley/github-to-wordpress-deploy-script.git
/fabacab/git-archive-all | A bash shell script wrapper for git-archive that archives a git superprojec \ https://github.com/fabacab/git-archive-all.sh.git
/raphaelcohn/bish-bosh | MQTT shell script client, for bash, dash, BusyBox ash and others. Gives you \ https://github.com/raphaelcohn/bish-bosh.git
/ko1nksm/getoptions | An elegant option/argument parser for shell scripts (full support for bash  \ https://github.com/ko1nksm/getoptions.git
/qrti/shrink | Linux bash script to resize Raspberry SD card images \ https://github.com/qrti/shrink.git
/lefayjey/linWinPwn | linWinPwn is a bash script that automates a number of Active Directory Enum \ https://github.com/lefayjey/linWinPwn.git
/alexedwards/go-reload | Bash script to automatically reload Go programs \ https://github.com/alexedwards/go-reload.git
/hodgesmr/FindGitHubEmail | Bash script that finds a GitHub user's email address based on username \ https://github.com/hodgesmr/FindGitHubEmail.git
/iye/lightsOn | Bash script that prevents the screensaver and display power # management (D \ https://github.com/iye/lightsOn.git
/pedroetb/rsync-incremental-backup | Configurable bash script to send incremental backups of your data to a loca \ https://github.com/pedroetb/rsync-incremental-backup.git
/niklasberglund/xcode-clean | Bash script freeing up disk space by removing Xcode generated data \ https://github.com/niklasberglund/xcode-clean.sh.git
/LevisWings/Auto-PWE | Script en Bash que te permite convertir una distribución de Linux en un ent \ https://github.com/LevisWings/Auto-PWE.git
/janosgyerik/bashoneliners | A collection of practical or just pure awesome bash one-liners or shell scr \ https://github.com/janosgyerik/bashoneliners.git
/Zer0CoolX/guacamole-install-rhel-7 | Apache Guacamole installation bash script for RHEL 7 and CentOS 7 including \ https://github.com/Zer0CoolX/guacamole-install-rhel-7.git
/tonikelope/megadown | Bash script for download files from mega.nz and megacrypter \ https://github.com/tonikelope/megadown.git
/tholum/PiBunny | Run Hak5 Bash Bunny scripts on a raspbery pi \ https://github.com/tholum/PiBunny.git
/reconquest/shdoc | Documentation generator for shell scripts (bash, sh, zsh). Javadoc for shel \ https://github.com/reconquest/shdoc.git
/rafritts/bunit | A unit testing framework for Shell scripts - namely Bash.   \ https://github.com/rafritts/bunit.git
/wick3dr0se/sysfetch | A super tiny system information fetch script written in BASH \ https://github.com/wick3dr0se/sysfetch.git
/gskielian/JPG-PNG-to-MNIST-NN-Format | Python/Bash scripts for creating custom Neural Net Training Data -- this re \ https://github.com/gskielian/JPG-PNG-to-MNIST-NN-Format.git
/borkdude/deps | A faithful port of the clojure CLI bash script to Clojure. Used as native C \ https://github.com/borkdude/deps.clj.git
/tremby/imgur | Bart's Imgur uploader bash script \ https://github.com/tremby/imgur.sh.git
/lowendbox/lowendscript | Bash scripts to set up/bootstrap low end virtual servers \ https://github.com/lowendbox/lowendscript.git
/T4P4N/Awesome-Termux | Awesome Termux :- Bash Scripts, Wiki, Articles,Shells & Many More... \ https://github.com/T4P4N/Awesome-Termux.git
/aks/bash-lib | Library of bash scripts \ https://github.com/aks/bash-lib.git
/chnm/WP-Static | Bash script to turn a WordPress install into static HTML. \ https://github.com/chnm/WP-Static.git
/todiadiyatmo/bash-backup-rotation-script | Bash backup rotation script for your files / website  \ https://github.com/todiadiyatmo/bash-backup-rotation-script.git
/ShivamRai2003/Reconky-Automated_Bash_Script | Reconky is an great Content Discovery bash script for bug bounty hunters wh \ https://github.com/ShivamRai2003/Reconky-Automated_Bash_Script.git
/beanaroo/display-visor | Bash script for applying a pre-defined Xorg monitor layout. Useful for tili \ https://github.com/beanaroo/display-visor.git
/noob-hackers/snap | Bash Script For Backing Up All Files In Termux With Easy step \ https://github.com/noob-hackers/snap.git
/landy22granatt/Kumpulan-Script-Termux | Ok, Langsung Saja Ke Materi. Sesuai Judul, Disini Saya Akan Memberikan Kump \ https://github.com/landy22granatt/Kumpulan-Script-Termux.git
/thornomad/dt-s3-backup | Bash script for automated backups with duplicity and Amazon's S3 online sto \ https://github.com/thornomad/dt-s3-backup.git
/petrkotek/chromecastize | Bash script to convert video files into Google Chromecast supported format. \ https://github.com/petrkotek/chromecastize.git
/hkdb/VBoxMacSetup | Bash Script to Setup VBox MacOS Guest \ https://github.com/hkdb/VBoxMacSetup.git
/KnpLabs/symfony2-autocomplete | A very simple script to autocomplete Symfony2 commands in a bash shell. \ https://github.com/KnpLabs/symfony2-autocomplete.git
/pirate/bash-utils | A collection of hand-crafted bash scripts for various common tasks. \ https://github.com/pirate/bash-utils.git
/brunelli/gnome-shell-extension-installer | A bash script to search and install extensions from extensions.gnome.org \ https://github.com/brunelli/gnome-shell-extension-installer.git
/relevance/etc | bash scripts, aliases, other misc things go here \ https://github.com/relevance/etc.git
/shubhampathak/autosetup | Auto setup is a bash script compatible with Debian based distributions to i \ https://github.com/shubhampathak/autosetup.git
/sierracircle/services-checker | Bash Script to check if services are running and restart if not. Sends emai \ https://github.com/sierracircle/services-checker.git
/NullArray/MIDA-Multitool | Bash script purposed for system enumeration, vulnerability identification a \ https://github.com/NullArray/MIDA-Multitool.git
/tsif/pu | A bash script to send iOS push notifications with the Apple Push Notificati \ https://github.com/tsif/pu.sh.git
/oh-my-fish/plugin-foreign-env | Run foreign bash scripts and capture exported environment variables \ https://github.com/oh-my-fish/plugin-foreign-env.git
/a-dma/yubitouch | Bash script for setting or clearing touch requirements for # cryptographic  \ https://github.com/a-dma/yubitouch.git
/nccgroup/LazyDroid | bash script to facilitate some aspects of an Android application assessment \ https://github.com/nccgroup/LazyDroid.git
/fredpalmer/log4bash |  log4bash is an attempt to have better logging for Bash scripts (i.e. make  \ https://github.com/fredpalmer/log4bash.git
/gmarik/gist | Bash shell script for getting/posting code snippets (gists) from/to https:/ \ https://github.com/gmarik/gist.sh.git
/quickshiftin/mysqlbkup | Lightweight MySQL backup script in BASH \ https://github.com/quickshiftin/mysqlbkup.git
/wschlich/bashinator | Bashinator: Bash Shell Script Framework \ https://github.com/wschlich/bashinator.git
/Silejonu/bash_loading_animations | Ready-to-use loading animations in ASCII and UTF-8 for easy integration int \ https://github.com/Silejonu/bash_loading_animations.git
/bing0o/bash_scripting | bash scripting thing! \ https://github.com/bing0o/bash_scripting.git
/atarola/pyjojo | Expose a directory of bash scripts as an API. \ https://github.com/atarola/pyjojo.git
/ericpaulbishop/yourchili | Bash script library for configuring Debian/Ubuntu VPS hosting, with emphasi \ https://github.com/ericpaulbishop/yourchili.git
/ryanoasis/public-bash-scripts | Bash Scripts that I can share publicly \ https://github.com/ryanoasis/public-bash-scripts.git
/dvschultz/ai | bash script to install Artifical Images materials \ https://github.com/dvschultz/ai.git
/Cyclenerd/postinstall |  Bash Script to automate post-installation steps \ https://github.com/Cyclenerd/postinstall.git
/github/training-utils | A series of Bash and ZShell scripts useful when teaching about git and GitH \ https://github.com/github/training-utils.git
/excalibur1234/pacui | Bash script providing advanced Pacman and Yay/Pikaur/Aurman/Pakku/Trizen/Pa \ https://github.com/excalibur1234/pacui.git
/gavinlyonsrepo/cylon | A CLI TUI menu driven bash shell script supporting updates, maintenance, ba \ https://github.com/gavinlyonsrepo/cylon.git
/tavinus/pdfScale | Bash Script to Scale and Resize PDFs using Ghostscript \ https://github.com/tavinus/pdfScale.git
/hhoover/lazyscripts | bash scripts to automate server administration tasks \ https://github.com/hhoover/lazyscripts.git
/pry0cc/ProxyDock | ProxyDock is a Dockerfile and Bash script that converts your OpenVPN files  \ https://github.com/pry0cc/ProxyDock.git
/ericleong/slickr | A collection of python and bash scripts to collect and analyze frame render \ https://github.com/ericleong/slickr.git
/michealespinola/syno | Bash script to automatically update Plex Media Server on Synology NAS \ https://github.com/michealespinola/syno.plexupdate.git
/mumoshu/variant2 | Turn your bash scripts into a modern, single-executable CLI app today \ https://github.com/mumoshu/variant2.git
/mhassan2/splunk-n-box | Docker Splunk "Orchestration" bash script (6,000+ lines) to create fully au \ https://github.com/mhassan2/splunk-n-box.git
/daniel-sc/bash-shell-to-bat-converter | Converter for bash shell scripts to windows batch files. \ https://github.com/daniel-sc/bash-shell-to-bat-converter.git
/corbanworks/aws-blocker | A simple bash script to block all AWS IP ranges using iptables. \ https://github.com/corbanworks/aws-blocker.git
/b3rito/yotter | yotter - bash script that performs recon and then uses dirb to discover dir \ https://github.com/b3rito/yotter.git
/stachre/dump-contacts2db | Bash script that dumps contacts from an Android contacts2.db to stdout in v \ https://github.com/stachre/dump-contacts2db.git
/pforret/bashew | bash script creator - from small stand-alone script to complex projects wit \ https://github.com/pforret/bashew.git
/Uberspace/paternoster | Paternoster allows you to run Ansible playbooks like ordinary Python or Bas \ https://github.com/Uberspace/paternoster.git
/fmahnke/shell-semver | Increment semantic versioning strings in Bash shell scripts. \ https://github.com/fmahnke/shell-semver.git
/DecaTec/Nextcloud-Backup-Restore | Moved to codeberg.org - https://codeberg.org/DecaTec/Nextcloud-Backup-Resto \ https://github.com/DecaTec/Nextcloud-Backup-Restore.git
/kolbasa/git-repo-watcher | A simple bash script to watch a git repository and pull upstream changes if \ https://github.com/kolbasa/git-repo-watcher.git
/usnistgov/applesec | Draft SP 800-179r1 macOS 10.12 Security project files: draft publication, s \ https://github.com/usnistgov/applesec.git
/rsvp/speedtest-linux | Get download/upload speeds via speedtest.net or fast.com from command line  \ https://github.com/rsvp/speedtest-linux.git
/zombieleet/async-bash | bash script that implements few asynchronous functions \ https://github.com/zombieleet/async-bash.git
/JoyGhoshs/0install | A bash script that will automatically install Bug Hunting tools used for re \ https://github.com/JoyGhoshs/0install.git
/zakhttp/Mongostead7 | A bash script to install MongoDB on Laravel Homestead with php7 \ https://github.com/zakhttp/Mongostead7.git
/johanhaleby/docker-machine-port-forwarder | Simple bash script that makes it easier to forward ports from Docker Machin \ https://github.com/johanhaleby/docker-machine-port-forwarder.git
/DominiLux/amdgpu-pro-fans | An alpha version written in bash script for the development of overall conc \ https://github.com/DominiLux/amdgpu-pro-fans.git
/jakeonrails/git-notify | This little bash script will watch your origin/master for updates every 60  \ https://github.com/jakeonrails/git-notify.git
/Juanhacker051/FOTOSPLOIT- | *FotoSploit*  $ git clone https://github.com/Cesar-Hack-Gray/FotoSploit $ c \ https://github.com/Juanhacker051/FOTOSPLOIT-.git
/moomindani/aws-mon-linux | Bash script that reports custom metric data about Linux performance to Amaz \ https://github.com/moomindani/aws-mon-linux.git
/johnteslade/vimeo-downloader | Bash script to download a video from Vimeo to your computer \ https://github.com/johnteslade/vimeo-downloader.git
/messutied/colors |  Colors.sh helps you add colors and formatting to your bash scripts \ https://github.com/messutied/colors.sh.git
/RealityNet/android_triage | Bash script to extract data from an Android device \ https://github.com/RealityNet/android_triage.git
/sandervanvugt/bash-scripting | files for my bash-scripting course on Safari Live \ https://github.com/sandervanvugt/bash-scripting.git
/GortCodex/DNSCrypt-Loader | A flexible and customizable bash script to manage DNSCrypt-proxy \ https://github.com/GortCodex/DNSCrypt-Loader.git
/hphde/yeelight-shell-scripts | Control Xiaomi Mi Yeelight (RGB) with bash scripts \ https://github.com/hphde/yeelight-shell-scripts.git
/postpostmodern/web-server-backup | A bash script for backing up MySQL databases and web site files (for cron) \ https://github.com/postpostmodern/web-server-backup.git
/crigroup/openrave-installation | Bash scripts to install OpenRAVE from source \ https://github.com/crigroup/openrave-installation.git
/8go/coinbash |  A bash script (CLI) for displaying crypto currencies market data in a ter \ https://github.com/8go/coinbash.git
/kaushalmodi/eless | A Better 'less' - A bash script that loads emacs with minimal view-mode con \ https://github.com/kaushalmodi/eless.git
/oxyc/bash-boilerplate | A simple starting point for bash scripts \ https://github.com/oxyc/bash-boilerplate.git
/esn89/dotfiles | here be bspwm and BAR bash scripts \ https://github.com/esn89/dotfiles.git
/openbridge/ob_hacky_slack | Hacky Slack - a bash script that sends beautiful messages to Slack  \ https://github.com/openbridge/ob_hacky_slack.git
/paulsm/bashtime | A bash script to display an analog time in your command prompt on OS X \ https://github.com/paulsm/bashtime.git
/tinkersec/cve-2020-1350 | Bash Proof-of-Concept (PoC) script to exploit SIGRed (CVE-2020-1350). Achie \ https://github.com/tinkersec/cve-2020-1350.git
/Gestas/Tarsnap-generations | A bash script that manages Tarsnap backups \ https://github.com/Gestas/Tarsnap-generations.git
/JohnHammond/ignition_key | This is a small BASH script to quickly setup all the tools I would want and \ https://github.com/JohnHammond/ignition_key.git
/mafintosh/taco-nginx | Bash script that runs a service and forwards a subdomain to it using nginx  \ https://github.com/mafintosh/taco-nginx.git
/jahendrie/cheat | A Bash reimplementation of Chris Lane's cheat sheet script \ https://github.com/jahendrie/cheat.git
/anexia-it/winshock-test | Bash script that tests if a system is Winshock (MS14-066) vulnerable \ https://github.com/anexia-it/winshock-test.git
/Frugghi/iSSH2 | A bash script to compile Libssh2 (and OpenSSL) for iOS, macOS, watchOS and  \ https://github.com/Frugghi/iSSH2.git
/yonilevy/noiseclean | A simple bash script to remove audio noise from audio and videos files. \ https://github.com/yonilevy/noiseclean.git
/antespi/s3md5 | Bash script to calculate Etag/S3 MD5 sum for very big files uploaded using  \ https://github.com/antespi/s3md5.git
/skroll/privoxy-adblock | A bash script for OS X that converts adblock lists to privoxy's format \ https://github.com/skroll/privoxy-adblock.git
/butteff/Ubuntu-Telemetry-Free-Privacy-Secure | This Bash script just removes a pre-installed Telemetry, a pre-installed so \ https://github.com/butteff/Ubuntu-Telemetry-Free-Privacy-Secure.git
/cloudnull/InstanceSync | Bash Script to Sync Linux Instances from one to another \ https://github.com/cloudnull/InstanceSync.git
/janosgyerik/shellscripts | Convenient shell scripts for everyday use, written in Bash, Perl, awk, Pyth \ https://github.com/janosgyerik/shellscripts.git
/goffinet/virt-scripts | Bash scripts for Linux KVM labs. Only for educational purposes. \ https://github.com/goffinet/virt-scripts.git
/khavishbhundoo/obfsproxy-openvpn | Bash script to setup openvpn with obfsproxy to defeat censorship \ https://github.com/khavishbhundoo/obfsproxy-openvpn.git
/Cyb0r9/DVR-Exploiter | DVR-Exploiter a Bash Script Program Exploit The DVR's Based on CVE-2018-999 \ https://github.com/Cyb0r9/DVR-Exploiter.git
/mariosemes/PornHub-downloader | Bash Script for downloading content from PornHub (the easy way) \ https://github.com/mariosemes/PornHub-downloader.git
/fffaraz/dockerweb | A docker-powered bash script for shared web hosting management. The ultimat \ https://github.com/fffaraz/dockerweb.git
/talwat/pokeget | pokeget is a bash script you can use to display cool sprites of pokemon in  \ https://github.com/talwat/pokeget.git
/tom5760/arch-install | Simple bash script to install Arch Linux. \ https://github.com/tom5760/arch-install.git
/soulseekah/bash-utils | A collection of pocket-size bash script utilities \ https://github.com/soulseekah/bash-utils.git
/naologic/nginx-builder | A bash script & GUI interface to make adding modules and building nginx eas \ https://github.com/naologic/nginx-builder.git
/weynhamz/dotploy | A bash only script to deploy $HOME dot files accrossing different hosts. \ https://github.com/weynhamz/dotploy.git
/vim-scripts/bash-support | BASH IDE -- Write and run BASH-scripts using menus and hotkeys. \ https://github.com/vim-scripts/bash-support.vim.git
/nikita-skobov/create-bash-script | A bash script designed to create other bash scripts with argument parsing \ https://github.com/nikita-skobov/create-bash-script.git
/amarjeetanandsingh/jps_stat | Bash script to moniter current_heap_memory , max_heap_till_now , current_ra \ https://github.com/amarjeetanandsingh/jps_stat.git
/TermuxHackz/anonphisher | Automated phishing tool made by AnonyminHack5 to phish various sites with 3 \ https://github.com/TermuxHackz/anonphisher.git
/evoforge/evomalware | Evomalware is a simple BASH script do detect malwares/virus/backdoor/... es \ https://github.com/evoforge/evomalware.git
/RealityNet/ios_triage | Bash script to extract data from a "chekcra1ned" iOS device \ https://github.com/RealityNet/ios_triage.git
/sromku/adb-export | Bash script to export android content providers data to csv \ https://github.com/sromku/adb-export.git
/blacklanternsecurity/kali-setup-script | Bash script which prepares Kali for a pentest by enabling session logging,  \ https://github.com/blacklanternsecurity/kali-setup-script.git
/proudlygeek/hipstadeploy | A bash script for generating and deploying static websites on Amazon Cloudf \ https://github.com/proudlygeek/hipstadeploy.git
/OffXec/PAVELOW | PAVELOW Exploit Toolbox is a BASH script that corresponds with your KALI di \ https://github.com/OffXec/PAVELOW.git
/bing0o/SubEnum | bash script for Subdomain Enumeration  \ https://github.com/bing0o/SubEnum.git
/smathot/zotero_installer | Bash script for automated Zotero standalone installation on Linux \ https://github.com/smathot/zotero_installer.git
/mbland/go-script-bash | Framework for writing modular, discoverable, testable Bash scripts \ https://github.com/mbland/go-script-bash.git
/ymgenesis/sshsetup | An interactive bash script that automates the setup of ssh configurations t \ https://github.com/ymgenesis/sshsetup.git
/cryptomarauder/TrackUrl | A Bash/JS Script For Tracking Locations \ https://github.com/cryptomarauder/TrackUrl.git
/cybersecurityops/cyber-ops-with-bash | Script repository for the book Cybersecurity Ops with bash \ https://github.com/cybersecurityops/cyber-ops-with-bash.git
/MartinSeeler/auto-changelog-hook | A simple bash script to automatically generate a CHANGELOG.md file with eve \ https://github.com/MartinSeeler/auto-changelog-hook.git
/damphat/kv-bash | key/value database written in bash script (permanent variables in shell) \ https://github.com/damphat/kv-bash.git
/lpikora/bing-wallpaper-daily-mac-multimonitor | Bash Script for download and set Bing Daily Wallpaper on all monitors for m \ https://github.com/lpikora/bing-wallpaper-daily-mac-multimonitor.git
/adamdehaven/fetchurls | A bash script to spider a site, follow links, and fetch urls (with built-in \ https://github.com/adamdehaven/fetchurls.git
/zerobyte-id/SEcraper | Search engine scraper tool with BASH script. \ https://github.com/zerobyte-id/SEcraper.git
/kasparsd/wp-deploy | Set of bash scripts for deploying plugins and themes from Git \ https://github.com/kasparsd/wp-deploy.git
/tripflex/inodes | Bash/Shell script to count inode usage \ https://github.com/tripflex/inodes.git
/jonzobrist/Bash-Admin-Scripts | Collection of my open source bash scripts BSD license \ https://github.com/jonzobrist/Bash-Admin-Scripts.git
/hopeseekr/BashScripts | My own personal bash scripts that revolutionize my life!! \ https://github.com/hopeseekr/BashScripts.git
/S2-/sshenc | bash script to encrypt data using a users ssh public key. \ https://github.com/S2-/sshenc.sh.git
/madmantm/pentest-tools | Bash script to install penetration testing tools on either Ubuntu or Fedora \ https://github.com/madmantm/pentest-tools.git
/Anvil/bash-doxygen | A doxygen filter for bash scripts \ https://github.com/Anvil/bash-doxygen.git
/yvoronoy/m2install | Magento 2 Bash Install/Restore Script \ https://github.com/yvoronoy/m2install.git
/chunshengster/scripts | some little scripts like python bash perl etc. \ https://github.com/chunshengster/scripts.git
/willshiao/node-bash-obfuscate | A Node.js CLI tool and library to heavily obfuscate bash scripts. \ https://github.com/willshiao/node-bash-obfuscate.git
/kiriaze/mac-dev-env-yosemite | Set up an ideal mac development environment on a fresh install of OSX yosem \ https://github.com/kiriaze/mac-dev-env-yosemite.git
/p292/NACKered | This is a bash script to bypass 802.1x NAC \ https://github.com/p292/NACKered.git
/Naategh/Funny-Scripts | A collection of funny bash scripts \ https://github.com/Naategh/Funny-Scripts.git
/harikvpy/deploy-django | A bash script to deploy a django project for production sites. \ https://github.com/harikvpy/deploy-django.git
/alexyorke/hofs-churn | A small bash script to approximate code churn for a Git repo as described b \ https://github.com/alexyorke/hofs-churn.git
/MiSTer-devel/Updater_script_MiSTer | Bash script for updating MiSTer \ https://github.com/MiSTer-devel/Updater_script_MiSTer.git
/pontikis/bash-cloud-backup | bash-cloud-backup is a set of bash scripts, which can be used to automate l \ https://github.com/pontikis/bash-cloud-backup.git
/fagiani/shellstack | ShellStack is a collection of bash scripts to install apps on ubuntu linux \ https://github.com/fagiani/shellstack.git
/NapoleonWils0n/kodi-playercorefactory | kodi playercorefactory.xml players to play and record videos and bash scrip \ https://github.com/NapoleonWils0n/kodi-playercorefactory.git
/danisla/kubefunc | Collection of handy kubernetes related helper scripts and bash functions. \ https://github.com/danisla/kubefunc.git
/mogensen/keychain | Bash script to access the osx keychain, for use in shell scripts. \ https://github.com/mogensen/keychain.git
/WolfgangMehner/bash-support | Edit Bash scripts in Vim/gVim. Insert code snippets, run, check, and debug  \ https://github.com/WolfgangMehner/bash-support.git
/sehidcan/easygentoo | Bash script for easy Gentoo installation \ https://github.com/sehidcan/easygentoo.git
/m4lv0id/LARE | [L]ocal [A]uto [R]oot [E]xploiter is a simple bash script that helps you de \ https://github.com/m4lv0id/LARE.git
/AntonioCS/no-ip | A simple bash script to update an account on no-ip.com \ https://github.com/AntonioCS/no-ip.com-bash-updater.git
/cep21/jackbash | My bash startup script \ https://github.com/cep21/jackbash.git
/Dlat/lbthw | Learn Bash Scripting The Hard Way \ https://github.com/Dlat/lbthw.git
/laraib07/TermuxBackupTools | Simple bash script to backup and restore termux(an android terminal emulato \ https://github.com/laraib07/TermuxBackupTools.git
/pirovc/genome_updater | Bash script to download/update snapshots of files from NCBI genomes reposit \ https://github.com/pirovc/genome_updater.git
/nanonation/floatsign | A bash script to re-sign iOS applications. \ https://github.com/nanonation/floatsign.git
/7USTIN/manga-cli |  Bash script for reading mangas via the terminal \ https://github.com/7USTIN/manga-cli.git
/bouk/babelfish | Translate bash scripts to fish \ https://github.com/bouk/babelfish.git
/cyclestreets/nominatim-install | Bash script to install Nominatim \ https://github.com/cyclestreets/nominatim-install.git
/onbiron/apk-resigner | A bash script utility for resining Android Package (APK) files.  \ https://github.com/onbiron/apk-resigner.git
/pronoiac/tarsnap-cron | Cron scripts (bash/shell) for tarsnap backup, including scheduled deletion  \ https://github.com/pronoiac/tarsnap-cron.git
/rik2803/aws-sts-assumerole | Bash script to easily set shell environment with temporary access tokens us \ https://github.com/rik2803/aws-sts-assumerole.git
/wcaleb/website | These are the plain text files used to produce my personal website with pan \ https://github.com/wcaleb/website.git
/bonsaiviking/nmap-completion | Bash-completion script for Nmap \ https://github.com/bonsaiviking/nmap-completion.git
/art-institute-of-chicago/aic-bash | A bash script to query our API for public domain artworks and render them a \ https://github.com/art-institute-of-chicago/aic-bash.git
/VirtuBox/img-optimize | Image optimization bash script \ https://github.com/VirtuBox/img-optimize.git
/JustWhit3/my-scripts | A collection of personal Python and Bash scripts. \ https://github.com/JustWhit3/my-scripts.git
/t3chnocat/oscp-ctf | oscp-ctf is a small collection of basic Bash scripts that make life easier  \ https://github.com/t3chnocat/oscp-ctf.git
/burrsutter/scripts-istio | My bash shell scripts for easy demo'ing of bit.ly/istio-tutorial \ https://github.com/burrsutter/scripts-istio.git
/nawar/kodi-cli | Kodi/XBMC bash script to send Kodi commands from the command line \ https://github.com/nawar/kodi-cli.git
/nixterrimus/tumbld | A bash script to download all the images from a tumblr or set of tumblrs \ https://github.com/nixterrimus/tumbld.git
/ronalde/mpd-configure | Bash scripts to assist users of mpd to configure it as an audiophile bit pe \ https://github.com/ronalde/mpd-configure.git
/ydns/bash-updater | YDNS Bash Updater Script \ https://github.com/ydns/bash-updater.git
/capitalone/bash_shell_mock | A shell script mocking utility/framework for the BASH shell \ https://github.com/capitalone/bash_shell_mock.git
/Pricetx/backup | Simple backup script utilising OpenSSL, tar and rsync, written in bash \ https://github.com/Pricetx/backup.git
/almroot/dnsresolvers | A bash script that fetches and maintains thousands of DNS resolvers \ https://github.com/almroot/dnsresolvers.git
/l34r00t/mainRecon | mainRecon is an automated reconnaissance docker image for bugbounty hunter  \ https://github.com/l34r00t/mainRecon.git
/ceejbot/jthoober | run bash scripts when you get a push event from a github webhook \ https://github.com/ceejbot/jthoober.git
/dn0m1n8tor/project-morya | Project Morya is just a collection of bash scripts that runs iteratively to \ https://github.com/dn0m1n8tor/project-morya.git
/rstudio/shinyapps-package-dependencies | Collection of bash scripts that install R package system dependencies \ https://github.com/rstudio/shinyapps-package-dependencies.git
/leprechau/zfs-replicate | simple bash script to manage zfs snapshots and replication between two host \ https://github.com/leprechau/zfs-replicate.git
/hello-jason/bedrock-deploy-to-wpengine | Bash script to deploy a Roots Bedrock project to WP Engine's hosting platfo \ https://github.com/hello-jason/bedrock-deploy-to-wpengine.git
/aizk/shell | bash shell script. \ https://github.com/aizk/shell.git
/krglaws/MyLFS | Giant bash script to build my own Linux distro based on LFS + BLFS \ https://github.com/krglaws/MyLFS.git
/numblr/glaciertools | Command line (bash) scripts to upload large files to AWS glacier using mult \ https://github.com/numblr/glaciertools.git
/jandob/rebash | ReBash - bash scripting library/framework \ https://github.com/jandob/rebash.git
/martinburger/bash-common-helpers | Helper functions commonly used when writing shell (for instance, Bash) scri \ https://github.com/martinburger/bash-common-helpers.git
/BillSkiCO/RX-Modulator | A bash script utilizing git --date to commit in the past. Effectively hacki \ https://github.com/BillSkiCO/RX-Modulator.git
/lukebond/microscanner-wrapper | Bash wrapper script for Aquasec Microscanner \ https://github.com/lukebond/microscanner-wrapper.git
/jakebenn/aws-key-rotation-scripts | Bash scripts for AWS EC2 and IAM key rotation \ https://github.com/jakebenn/aws-key-rotation-scripts.git
/Willian-Zhang/Ignore-node_modules-in-Spotlight | bash script for ignoring all files in node_modules for Spotlight \ https://github.com/Willian-Zhang/Ignore-node_modules-in-Spotlight.git
/clhenrick/shell_scripts | Bash shell scripts for batch GeoProcessing using GDAL & OGR2OGR \ https://github.com/clhenrick/shell_scripts.git
/padosoft/kill-process | Bash script to kill high CPU process, long running process and too much con \ https://github.com/padosoft/kill-process.git
/fluproject/Security-bash-scripts | Repositorio donde compartimos con la comunidad scripts de bash relacionados \ https://github.com/fluproject/Security-bash-scripts.git
/agnipau/telegram-palette-gen | A bash script that generates themes for Telegram based on an arbitrary 16-c \ https://github.com/agnipau/telegram-palette-gen.git
/thelazt/chessbash | A simple chess game in a bash script \ https://github.com/thelazt/chessbash.git
/BINDS-LAB-UMASS/bindsnet_experiments | Collection of experimental Python and accompanying Bash scripts for trainin \ https://github.com/BINDS-LAB-UMASS/bindsnet_experiments.git
/mopsicus/unity-build-pipeline | Custom BASH script for build, archive, export and upload APK and IPA to ser \ https://github.com/mopsicus/unity-build-pipeline.git
/aws-samples/amazon-aurora-labs-for-mysql | Workshop and lab content for Amazon Aurora MySQL compatible databases. This \ https://github.com/aws-samples/amazon-aurora-labs-for-mysql.git
/sharkdp/pysh | Python-enhanced bash scripts \ https://github.com/sharkdp/pysh.git
/JREAM/config-ubuntu | Quickly Setup Ubuntu Desktop or Server with all-in-one Bash Scripts. \ https://github.com/JREAM/config-ubuntu.git
/tavinus/cloudsend | Bash script that uses curl to send files to a nextcloud/owncloud shared fol \ https://github.com/tavinus/cloudsend.sh.git
/ltpitt/bash-network-repair-automation | This bash script checks the health status for either wired or wireless inte \ https://github.com/ltpitt/bash-network-repair-automation.git
/Bushmills/Bashforth | A Forth interpreter, entirely written as bash script. But by now is yoda (h \ https://github.com/Bushmills/Bashforth.git
/leogtzr/minimal-safe-bash-template | My Minimal Safe Bash Script Template \ https://github.com/leogtzr/minimal-safe-bash-template.git
/hannob/fpmvuln | bash poc scripts to exploit open fpm ports \ https://github.com/hannob/fpmvuln.git
/noqqe/bash-progress-bar | A simple progress / loading bar for your Bash scripts \ https://github.com/noqqe/bash-progress-bar.git
/Dheerajmadhukar/karma_v1 | KARMA is a simple bash script automation that can hit Shodan Premium API an \ https://github.com/Dheerajmadhukar/karma_v1.git
/zhanghai/AndroidSVGScripts | Bash scripts to automate and extend the process of using SVG as Android ima \ https://github.com/zhanghai/AndroidSVGScripts.git
/Migz93/lidarr-download-automation | Bash script to download artists in Lidarr using smloadr or d-Fi \ https://github.com/Migz93/lidarr-download-automation.git
/ajdiaz/bashdoc | The bashdoc script is a frontend which parse a bash file and create a docum \ https://github.com/ajdiaz/bashdoc.git
/wirefalls/geo-nft | Bash script to create nftables sets of country specific IP address ranges f \ https://github.com/wirefalls/geo-nft.git
/existz/shc-3 | SHC - Bash script compiler \ https://github.com/existz/shc-3.8.9.git
/bitnom/VPN-Chain | Bash script for making chained OpenVPN connections. \ https://github.com/bitnom/VPN-Chain.git
/PacktPublishing/Complete-Bash-Shell-Scripting- | Code Repository for Complete Bash Shell Scripting; Published by Packt \ https://github.com/PacktPublishing/Complete-Bash-Shell-Scripting-.git
/makerdao/dss-deploy | Set of smart contracts and bash scripts to deploy Multi collateral DAI \ https://github.com/makerdao/dss-deploy.git
/mattbryson/bash-arg-parse | Simple CLI argument parsing template for a stand alone bash script \ https://github.com/mattbryson/bash-arg-parse.git
/njh/sonoff-ota-flash-cli | Bash script to perform an OTA (Over the Air) firmware update for Sonoff 'DI \ https://github.com/njh/sonoff-ota-flash-cli.git
/qjcg/shell-examples | Little Bash shell scripting examples \ https://github.com/qjcg/shell-examples.git
/Marko-M/lamp-vhost-manager | LAMP virtual host manger Bash script \ https://github.com/Marko-M/lamp-vhost-manager.git
/K2/Scripting | PS / Bash / Python / Other scripts For FUN! \ https://github.com/K2/Scripting.git
/jasonjfrank/gnmap-parser | Bash script to parse multiple Nmap (.gnmap) exports into various plain-text \ https://github.com/jasonjfrank/gnmap-parser.git
/ericmurphyxyz/rofi-wifi-menu | A bash script using nmcli and rofi to make a wifi menu for your favorite wi \ https://github.com/ericmurphyxyz/rofi-wifi-menu.git
/palantir/go-java-launcher | A simple Go program for launching Java programs from a fixed configuration. \ https://github.com/palantir/go-java-launcher.git
/HadrienAka/TheBashMenu | A useful bash script allowing you to easily create your own menu, which use \ https://github.com/HadrienAka/TheBashMenu.git
/OzakIOne/termux-youtube-dl | Bash script to setup youtube-dl in termux \ https://github.com/OzakIOne/termux-youtube-dl.git
/whereisaaron/get-aws-profile-bash | Fetch AWS keys and secrets from ~/.aws/credentials using a simple bash scri \ https://github.com/whereisaaron/get-aws-profile-bash.git
/njradford/my-dear-watson | Bash script to help install Elementary OS on Chromebooks \ https://github.com/njradford/my-dear-watson.git
/techcoder20/MacOSBigSurThemeConverter | This is a bash script that will make your plain raspberry pi os lxde deskto \ https://github.com/techcoder20/MacOSBigSurThemeConverter.git
/tbridge/munki-in-a-cloud | A bash script designed to setup a Munki repository, download items, and the \ https://github.com/tbridge/munki-in-a-cloud.git
/rust-shell-script/rust-shell-script | Rustlike shell scripting language; Resilient & robust shell script, compili \ https://github.com/rust-shell-script/rust-shell-script.git
/HSBawa/icp-ce-on-linux-containers | Multi node IBM Cloud Private Community Edition 3.2.x w/ Kubernetes 1.13.5 i \ https://github.com/HSBawa/icp-ce-on-linux-containers.git
/Hood3dRob1n/addicted2hash | Hashcat Bash Scripts for bulk hash file processing \ https://github.com/Hood3dRob1n/addicted2hash.git
/ohmybahgosh/YT-DLP-SCRIPTS | ...Just a place for me to share my various YT-DLP & related bash scripts. \ https://github.com/ohmybahgosh/YT-DLP-SCRIPTS.git
/killswitch-GUI/lterm | lterm is a small script built to install a bash hook for full terminal logg \ https://github.com/killswitch-GUI/lterm.git
/jcromartie/gsd | A simple bash script to block access to time-wasting sites. \ https://github.com/jcromartie/gsd.sh.git
/juanbrujo/Talus | Bash script to automate download & setup your Mac OS X development environm \ https://github.com/juanbrujo/Talus.git
/mriza/XMind-Linux-Installer | A simple BASH script to install XMind in Linux \ https://github.com/mriza/XMind-Linux-Installer.git
/SixArm/sixarm_unix_shell_scripts | SixArm.com » Unix » shell scripts for command line programs in sh, bash, et \ https://github.com/SixArm/sixarm_unix_shell_scripts.git
/ferion11/LogosLinuxInstaller | LogosLinuxInstaller is a bash script for installation of Logos Bible on Lin \ https://github.com/ferion11/LogosLinuxInstaller.git
/pmargreff/juliavm | Julia Version Manager - Simple bash script to manage multiple julia environ \ https://github.com/pmargreff/juliavm.git
/rumesh986/wifianalyse | simple bash script to monitor wifi signal and ping time \ https://github.com/rumesh986/wifianalyse.git
/ericleong/scrollshot | A bash script for automatically scrolling and stitching screenshots of Andr \ https://github.com/ericleong/scrollshot.git
/reduardo7/bash-service-manager | Bash Script's for Service Manager \ https://github.com/reduardo7/bash-service-manager.git
/JamieCruwys/bash-menu-generator | A simple bash script that will generate menus \ https://github.com/JamieCruwys/bash-menu-generator.git
/LukeSmithxyz/shortcut-sync | Luke's Scripts for bash, ranger and qutebrowser synchronization \ https://github.com/LukeSmithxyz/shortcut-sync.git
/robertoestivill/densinator | Bash script to generate Android drawables \ https://github.com/robertoestivill/densinator.git
/frdmn/tar-multibackup | :floppy_disk: Bash script to backup and cycle tar archives \ https://github.com/frdmn/tar-multibackup.git
/muse/Captain | A dynamic lemonbar script written almost entirely in bash. \ https://github.com/muse/Captain.git
/faf0/macos-qemu-rpi | Bash scripts to run Raspbian (ARM architecture) on macOS Catalina using QEM \ https://github.com/faf0/macos-qemu-rpi.git
/dschrempf/syncthing-resolve-conflicts | A small bash script that handles synchronization conflicts with Syncthing.  \ https://github.com/dschrempf/syncthing-resolve-conflicts.git
/julianpoy/eGPUScripts | Some simple bash scripts to make hotswap eGPU work on Linux without restart \ https://github.com/julianpoy/eGPUScripts.git
/mertcangokgoz/UsefulBashScripts | A repository of useful bash script commands \ https://github.com/mertcangokgoz/UsefulBashScripts.git
/abhshkdz/8tracks-downloader | :musical_score: Bash script to download playlists from 8tracks \ https://github.com/abhshkdz/8tracks-downloader.git
/Bonveio/BonvScripts | Collection of shell scripts written in bash for automation and easy-to-use  \ https://github.com/Bonveio/BonvScripts.git
/subeshb1/api-test |  A simple bash script to test JSON API from terminal in a structured and o \ https://github.com/subeshb1/api-test.git
/jseidl/torblock | TORBlock is a BASH script to automatically download the list of TOR exit-no \ https://github.com/jseidl/torblock.git
/jimeh/stub | Helpers for bash script testing to stub/fake binaries and functions. Includ \ https://github.com/jimeh/stub.sh.git
/MiSTer-devel/Scripts_MiSTer | Miscellaneous Bash scripts for MiSTer \ https://github.com/MiSTer-devel/Scripts_MiSTer.git
/gree-gorey/bash-exporter | Simple & minimalistic Prometheus exporter for bash scripts, written in Go \ https://github.com/gree-gorey/bash-exporter.git
/ghostrider-reborn/scripts | Bunch of homemade noob bash scripts which I often use personally. \ https://github.com/ghostrider-reborn/scripts.git
/cpierce/rds-to-s3-backup | Simple RDS to S3 Backup Bash Script to run on EC2 \ https://github.com/cpierce/rds-to-s3-backup.git
/zombieleet/testify | A unit testing framework written in bash for bash scripts \ https://github.com/zombieleet/testify.git
/pierlauro/playlist2links | This bash script allows to extract video links from a youtube playlist \ https://github.com/pierlauro/playlist2links.git
/feherke/Bash-script | Bash scripts \ https://github.com/feherke/Bash-script.git
/hallison/bash-toolbox | Bash-Toolbox is a simple set of functions and instructions that help develo \ https://github.com/hallison/bash-toolbox.git
/alexanderepstein/bsupdate | A drop in bash script that can be added to any bash application/CLI to auto \ https://github.com/alexanderepstein/bsupdate.git
/BGundlach/css3Fonts | Bash script to convert fonts for css3 and generate @font-face. \ https://github.com/BGundlach/css3Fonts.git
/ksharinarayanan/bash-hacks | Handy bash and python scripts for bug bounty hunting! \ https://github.com/ksharinarayanan/bash-hacks.git
/Mavrepis/ShodanVulncheck | bash script to enumerate vulnerabilities on specific year through Shodan AP \ https://github.com/Mavrepis/ShodanVulncheck.git
/matthewreagan/BashSnippets | Simple bash scripting examples and snippets \ https://github.com/matthewreagan/BashSnippets.git
/kawaxi/Kali-Setup | Bash script to fully setup your kali system. \ https://github.com/kawaxi/Kali-Setup.git
/sdt/tmux-vim | Bash script to enable a persistent vim pane within tmux \ https://github.com/sdt/tmux-vim.git
/shawwn/scrap | Nearly a thousand bash and python scripts I've written over the years. \ https://github.com/shawwn/scrap.git
/cervoise/Abuse-bash-for-windows | Pentest scripts for abuse Bash on Windows (Cygwin/WSL) - HackLu 2018 \ https://github.com/cervoise/Abuse-bash-for-windows.git
/rune1979/ubuntu-vmmon-vmware-bash | Simpel bash script for updating MOK keys for VMWare in ubuntu: error "Canno \ https://github.com/rune1979/ubuntu-vmmon-vmware-bash.git
/theMiddleBlue/DNSenum | Bash script for DNS Enumeration. \ https://github.com/theMiddleBlue/DNSenum.git
/djui/bashunit | xUnit unit testing framework for Bash scripts \ https://github.com/djui/bashunit.git
/artberri/npm-yarn-benchmark | Bash script for comparing NPM and Yarn performance \ https://github.com/artberri/npm-yarn-benchmark.git
/kallsbo/BASH-RaspberryPI-System-Backup | Bash script for automatic imaging backup of a raspberry pi system while it' \ https://github.com/kallsbo/BASH-RaspberryPI-System-Backup.git
/vndroid/shadowsocks-install | a CLI Bash script to install shadowsocks server automatic for Debian / Ubun \ https://github.com/vndroid/shadowsocks-install.git
/j1elo/shell-snippets | Some Bash shell snippets, with functions and utilities that I use frequentl \ https://github.com/j1elo/shell-snippets.git
/danzitting/wordpress-slice-setup | A bash script used to quickly setup an Ubuntu, Nginx, MySQL, PHP, Postfix,  \ https://github.com/danzitting/wordpress-slice-setup.git
/tripflex/cpsetup | Intuitive bash/shell script to setup and harden/configure cPanel CentOS/RHE \ https://github.com/tripflex/cpsetup.git
/withfig/config | Fig's integrations with bash, zsh, fish, ssh, and tmux. Also contains Fig's \ https://github.com/withfig/config.git
/andymasteroffish/rev-ind | rev-ind is a bash script to cleanly reverse-indent any file \ https://github.com/andymasteroffish/rev-ind.git
/linkp2p/WPS-PIN |  # This scripts is edited under the General Public License as defined by th \ https://github.com/linkp2p/WPS-PIN.git
/Piker-Alpha/AppleHDA8Series | Bash script to create AppleHDA892.kext \ https://github.com/Piker-Alpha/AppleHDA8Series.sh.git
/xr09/rainbow | Simple colors for your bash scripts \ https://github.com/xr09/rainbow.sh.git
/HereInPlainSight/gshade_installer | GShade Installer / Updater Bash Script for Linux \ https://github.com/HereInPlainSight/gshade_installer.git
/enkydu/Raspi_Runner | Raspi Runner is a BASH script which will run all your scripts delivered by  \ https://github.com/enkydu/Raspi_Runner.git
/lzap/snap-guest | Bash script for quick provisioning of copy-on-write KVM guests \ https://github.com/lzap/snap-guest.git
/PavelLoparev/slitcamera | Bash script to turn video file into slit photo \ https://github.com/PavelLoparev/slitcamera.git
/utsanjan/Tsunami-Bomber | A simple but powerful OTP SMS and Call flooding script with unlimited sendi \ https://github.com/utsanjan/Tsunami-Bomber.git
/fnogatz/swivm |  SWI-Prolog Version Manager - Bash script to manage multiple active SWI-Pro \ https://github.com/fnogatz/swivm.git
/ktorn/reverse-ssh-tunnel | Bash script to establish an automatic and permanent reverse SSH tunnel conn \ https://github.com/ktorn/reverse-ssh-tunnel.git
/CNTRUN/Termux-command | char const* const commands[] = { "aapt", " aapt", " zipalign", "abduco", "  \ https://github.com/CNTRUN/Termux-command.git
/kelseyhightower/kube | Basic single node Kubernetes using a bash script. \ https://github.com/kelseyhightower/kube.git
/bertvv/scripts | A bunch of (mostly Bash) scripts that may be useful. Or not. \ https://github.com/bertvv/scripts.git
/oliverbenns/expo-deploy | Bash script to deploy to different Expo environments (https://expo.io) \ https://github.com/oliverbenns/expo-deploy.git
/offensi/LiveOverflow-cloudshell-stuff | Some bash scripts that are useful when performing research on Google's Clou \ https://github.com/offensi/LiveOverflow-cloudshell-stuff.git
/shinokada/tera | Interactive Bash script terminal music radio player. Play your favorite rad \ https://github.com/shinokada/tera.git
/aamnah/bash-scripts | Bash scripts to get stuff done.. \ https://github.com/aamnah/bash-scripts.git
/MagePsycho/magento2-db-code-backup-bash-script | Bash Script: Backup Magento2 Code + Database \ https://github.com/MagePsycho/magento2-db-code-backup-bash-script.git
/Oneiroi/sysadmin | Originally an all encompassing helper script, more now a library of scripts \ https://github.com/Oneiroi/sysadmin.git
/choupit0/MassVulScan | Bash script which quickly identifies open network ports and any associated  \ https://github.com/choupit0/MassVulScan.git
/stuartpb/aur | A Bash script to install packages from the Arch User Repository \ https://github.com/stuartpb/aur.sh.git
/tronyx/tronitor | Bash script to work with UptimeRobot, StatusCake,  HealthChecks.io, & Uppti \ https://github.com/tronyx/tronitor.git
/mnorin/bash-scripts | Different bash scripts \ https://github.com/mnorin/bash-scripts.git
/thcipriani/bashtemplate | My Bash script template \ https://github.com/thcipriani/bashtemplate.git
/eljuanchosf/source-code-to-pdf | A BASH script to put your source code to PDF \ https://github.com/eljuanchosf/source-code-to-pdf.git
/jdbit/django-auto-deploy | Deploy a Django website in one click with this bash script (Nginx, Gunicorn \ https://github.com/jdbit/django-auto-deploy.git
/madrobot/bash-script-generator | Generates a Bash Script Template that handles Arguments and Flags Cleanly \ https://github.com/madrobot/bash-script-generator.git
/asppsa/archlinux-nix | Bash script for managing the Nix package manager on Arch Linux \ https://github.com/asppsa/archlinux-nix.git
/hippie68/ftpdump | Bash script that dumps PS4 games via FTP connection over the network. For b \ https://github.com/hippie68/ftpdump.git
/securitygeneration/Honeyport | Bash and Python Honeyport scripts \ https://github.com/securitygeneration/Honeyport.git
/akusei/pushover-bash | A bash script to send Pushover messages \ https://github.com/akusei/pushover-bash.git
/mug896/bash-stepping-xtrace | Bash script that debug bash scripts and functions by stepping xtrace \ https://github.com/mug896/bash-stepping-xtrace.git
/garganshul108/Code-With-Mosh-Playlist-Downloader | Bash Script: A *.sh script to download full course from codewithmosh.com. \ https://github.com/garganshul108/Code-With-Mosh-Playlist-Downloader.git
/ravgeetdhillon/create-optimize-images | ♻️ Reusable, scalable, bash scripts to create and optimize images. \ https://github.com/ravgeetdhillon/create-optimize-images.git
/scrathe/plexEncode | BASH post-processing script for Plex DVR, Shell, Sonarr, Radarr \ https://github.com/scrathe/plexEncode.git
/lenormf/bash-oop | Object oriented scripting with a bash set of functions \ https://github.com/lenormf/bash-oop.git
/marianogappa/jira-cli | Lightweight bash script for easily querying your company's JIRA issues \ https://github.com/marianogappa/jira-cli.git
/SeanBannister/aws-helper-scripts | A set of bash scripts designed to ease the pain of working with Amazon Web  \ https://github.com/SeanBannister/aws-helper-scripts.git
/AdmiralSYN-ACKbar/bulkcheck | Script for running bulk checks via https://www.abuseipdb.com/. Available in \ https://github.com/AdmiralSYN-ACKbar/bulkcheck.git
/knowledge-club/bash | A lot of commands, to beginners in bash scripts \ https://github.com/knowledge-club/bash.git
/jar-o/bashapp | Compile a bash script to a binary and make an OS X Application out of it in \ https://github.com/jar-o/bashapp.git
/pkyeck/git-log-by-day | bash script to log git commits grouped by day (optionally filtered by autho \ https://github.com/pkyeck/git-log-by-day.git
/BradleyA/Search-docker-registry-v2-script | view-private-registry is a simple bash script for listing images in a priva \ https://github.com/BradleyA/Search-docker-registry-v2-script.1.0.git
/xhawk18/fast_cd_menu | a super cd command created by bash script to show cd history in menu. \ https://github.com/xhawk18/fast_cd_menu.git
/nickjj/wait-until | A zero dependency Bash script that waits until a command of your choosing h \ https://github.com/nickjj/wait-until.git
/virtapi/installimage | bash scripts for deploying every linux system \ https://github.com/virtapi/installimage.git
/fluffle/ca-scripts | Some bash(1) scripts for OpenSSL CA Management \ https://github.com/fluffle/ca-scripts.git
/tryhackme/openvpn-troubleshooting | Troubleshooting bash script for the TryHackMe OpenVPN connection pack \ https://github.com/tryhackme/openvpn-troubleshooting.git
/Hestat/minerchk | Bash script to Check for malicious Cryptomining \ https://github.com/Hestat/minerchk.git
/guided-hacking/cfautouam | Automatically enables CloudFlare Under Attack Mode - Bash Script \ https://github.com/guided-hacking/cfautouam.git
/s-n-ushakov/rename-efi-entry | A Bash script to rename EFI boot entries \ https://github.com/s-n-ushakov/rename-efi-entry.git
/RandomNinjaAtk/lidarr-automated-downloader | Lidarr enhancement bash script to download releases \ https://github.com/RandomNinjaAtk/lidarr-automated-downloader.git
/mitchellkrogza/linux-server-administration-scripts | Simple bash administration scripts for Linux to make your life easier. \ https://github.com/mitchellkrogza/linux-server-administration-scripts.git
/swiftotter/MagentoCI | Magento continuous integration bash scripts. Makes deploying Magento easy. \ https://github.com/swiftotter/MagentoCI.git
/idStar/ui-automation-runner | A bash script to more easily run your UIAutomation JavaScript tests from th \ https://github.com/idStar/ui-automation-runner.git
/koalatee/scripts | Mostly bash scripts. Mostly for jamf. \ https://github.com/koalatee/scripts.git
/vincepii/ubuntu-powerline-bash | A script to quickly setup powerline shell for bash in ubuntu \ https://github.com/vincepii/ubuntu-powerline-bash.git
/postmanlabs/postman-updater-linux | A simple bash script to update Postman from the command line (for Linux) \ https://github.com/postmanlabs/postman-updater-linux.git
/frntn/pki-manager | IT Freelancers : Manage small PKI for multiple projects (or clients) with 2 \ https://github.com/frntn/pki-manager.git
/rousan/upfy | A bash script to populate a fresh unix system with useful commands and alia \ https://github.com/rousan/upfy.git
/vp777/metahttp | A bash script that automates the scanning of a target network for HTTP reso \ https://github.com/vp777/metahttp.git
/ostrolucky/Simple-Subreddit-Image-Downloader | Bash script for downloading images posted in specific subreddit with minima \ https://github.com/ostrolucky/Simple-Subreddit-Image-Downloader.git
/pahaz/bashtest | BashTest is a UNIX command-line tool for testing your bash/sh scripts \ https://github.com/pahaz/bashtest.git
/gavinlyonsrepo/bashmultitool | A library  for bash shell program containing useful  functions. Can be impo \ https://github.com/gavinlyonsrepo/bashmultitool.git
/HelpSeeker/Restricted-WebM | A script to create WebMs within a certain file size limit (available in Pyt \ https://github.com/HelpSeeker/Restricted-WebM.git
/geeekpi/upsplus | UPS Plus is a new generation of UPS power management module. It is an impro \ https://github.com/geeekpi/upsplus.git
/cClaude/gitlab-bash-api |   Configure GitLab using bash scripts \ https://github.com/cClaude/gitlab-bash-api.git
/knrafto/language-bash | Parse and pretty-print Bash shell scripts \ https://github.com/knrafto/language-bash.git
/mfherbst/bash-course | Material for the advanced bash scripting course at Heidelberg University \ https://github.com/mfherbst/bash-course.git
/ghalfacree/bash-scripts | Handy bash scripts to do this, that or t'other. \ https://github.com/ghalfacree/bash-scripts.git
/chuguniy/bash-data-compression | Bash script for compressing data, useful for backup archives. \ https://github.com/chuguniy/bash-data-compression.git
/stayliv3/gdb-static-cross | A simple shell script and two bash sourceable scripts used to build a stati \ https://github.com/stayliv3/gdb-static-cross.git
/bitcrazed/24bit-color | Selection of Bash/*NIX scripts for generating 24-bit color tests \ https://github.com/bitcrazed/24bit-color.git
/h4sh5/ghidra-headless-decompile | bash script and modified java program to headlessly use ghidra's decompiler \ https://github.com/h4sh5/ghidra-headless-decompile.git
/homedepot/spingo | A collection of Terraform and bash scripts to setup an enterprise-grade Spi \ https://github.com/homedepot/spingo.git
/voidxv/avd_creation_script | A demonstration of how to create a Skinned Android Virtual Device using a b \ https://github.com/voidxv/avd_creation_script.git
/FabioDefilippo/linuxallremote | This bash scripts will help you to hack remote hosts. You can choose and ru \ https://github.com/FabioDefilippo/linuxallremote.git
/MagePsycho/nginx-virtual-host-bash-script | Nginx Virtual Host Bash Script \ https://github.com/MagePsycho/nginx-virtual-host-bash-script.git
/atorman/elfBash | Sample starter bash shell scripts for event log files \ https://github.com/atorman/elfBash.git
/S-o-T/telegram-3proxy-install | Bash script to install socks5 proxy (3proxy) configured for telegram. \ https://github.com/S-o-T/telegram-3proxy-install.git
/adon90/ip2hosts | Dirty bash script to obtain hosts given an IP address \ https://github.com/adon90/ip2hosts.git
/ivanistheone/writing_scripts | Bash scripts that highlight potential weaknesses in your scientific writing \ https://github.com/ivanistheone/writing_scripts.git
/Fitus/Zaloha2 | Small and simple directory synchronizer (a BASH script) \ https://github.com/Fitus/Zaloha2.sh.git
/riobard/zsh-powerline | Powerline for Zsh in pure Zsh script. See also https://github.com/riobard/b \ https://github.com/riobard/zsh-powerline.git
/dockito/compose2bash | Tool that converts docker-compose.yml files to bash scripts \ https://github.com/dockito/compose2bash.git
/rubo77/mouse-speed | Bash script for to increase or decrease the mouse and touchpad speed and th \ https://github.com/rubo77/mouse-speed.git
/overcast07/wayback-machine-spn-scripts | Bash scripts which interact with Internet Archive Wayback Machine's Save Pa \ https://github.com/overcast07/wayback-machine-spn-scripts.git
/AnthonyMusgrove/Emby-ScripterX | Run custom external application or script (batch/bash/powershell/php/python \ https://github.com/AnthonyMusgrove/Emby-ScripterX.git
/davromaniak/zimbashckup | ZimBashckup : Zimbra Backup Script in Bash \ https://github.com/davromaniak/zimbashckup.git
/sm0k3net/Useful-Scripts | Useful scripts on bash, powershell, batch \ https://github.com/sm0k3net/Useful-Scripts.git
/jahendrie/shalarm | A bash script alarm clock \ https://github.com/jahendrie/shalarm.git
/JAC2703/proxmox-scripts | Helpful Bash scripts for use with Proxmox VE \ https://github.com/JAC2703/proxmox-scripts.git
/vaniacer/bash_color | Small bash script that helps bring colors to your scripts. \ https://github.com/vaniacer/bash_color.git
/crdroidandroid/crdroid_build | bash script to build crDroid (simple and with auto upload to FTP) \ https://github.com/crdroidandroid/crdroid_build.git
/bahamas10/windows-bash-ssh-agent | Scripts to persist ssh-agent on Bash on Ubuntu on Windows \ https://github.com/bahamas10/windows-bash-ssh-agent.git
/unnikked/Apache-VirtualHost-Manager | A small bash script that lets you manage your apache Virtual Host \ https://github.com/unnikked/Apache-VirtualHost-Manager.git
/Cyclenerd/benchmark | ️ Bash Script which runs several Linux benchmarks (Sysbench, UnixBench and \ https://github.com/Cyclenerd/benchmark.git
/otakuto/bashcc | C compiler written in Bash script \ https://github.com/otakuto/bashcc.git
/westurner/dotfiles | Bash, Python, IPython scripts, and userspace configuration https://westurne \ https://github.com/westurner/dotfiles.git
/mttrb/antipopd | antipopd is a drop in replacement for Robert Tomsick's antipopd 1.0.2 bash  \ https://github.com/mttrb/antipopd.git
/alwaysdata/autodeploy-git-hook | A simple bash script to deploy on production using Git hooks \ https://github.com/alwaysdata/autodeploy-git-hook.git
/kaysond/spki | A bash script wrapper for OpenSSL that generates and manages a simple PKI s \ https://github.com/kaysond/spki.git
/Teradata/stampede | Stampede is the workflow tool for *nix that Cthulhu intended. It uses make  \ https://github.com/Teradata/stampede.git
/leveste/EternalBasher | Collection of bash scripts for different aspects of Doom Eternal modding, m \ https://github.com/leveste/EternalBasher.git
/preston/homeboy | Homeboy is a set of small, plain BASH scripts to synchronize your personal  \ https://github.com/preston/homeboy.git
/clarabez/comandosadb | Este repositório tem como objetivo explicar um pouco como que funcionam os  \ https://github.com/clarabez/comandosadb.git
/zszszszsz/ | # # Automatically generated file; DO NOT EDIT. # OpenWrt Configuration # CO \ https://github.com/zszszszsz/.config.git
/lab2023/builder | Bash scripts for development & production environments \ https://github.com/lab2023/builder.git
/houssoli/linux-shell-scripting-projects | Linux Shell Scripting: A Project-Based Approach to Learning Learn how to sh \ https://github.com/houssoli/linux-shell-scripting-projects.git
/klausi/pareviewsh | Simple Bash script to automatically review Drupal.org project applications. \ https://github.com/klausi/pareviewsh.git
/filipnet/checkmk-telegram-notify | Get alerted by Check_MK via Telegram bash script \ https://github.com/filipnet/checkmk-telegram-notify.git
/minhdanh/Linux-Kernel-Tuning-and-Hardening | Bash script for optimizing performance and hardening Linux kernel. \ https://github.com/minhdanh/Linux-Kernel-Tuning-and-Hardening.git
/mavieth/image-resizer | Bash script utilizing ImageMagick to compress and resize images for various \ https://github.com/mavieth/image-resizer.git
/nullbyte91/simple-Sh-DataScience | A collection of Bash scripts and Dockerfiles to install data science Tool,  \ https://github.com/nullbyte91/simple-Sh-DataScience.git
/snaptortoise/ssloca | Bash script that removes the headache of generating and trusting SSL certif \ https://github.com/snaptortoise/ssloca.git
/richbl/a-bash-template | A bash template (BaT) designed to make script development and command line  \ https://github.com/richbl/a-bash-template.git
/LuyaoHuang/virsh-bash-completion | Bash tab-completion scripts for libvirt virsh commands \ https://github.com/LuyaoHuang/virsh-bash-completion.git
/NullArray/SysEnum | Simple Bash script to retrieve basic system information. \ https://github.com/NullArray/SysEnum.git
/mgwoo/SSH-Tunnel-Auto-reconnecting | Simple SSH Tunnel Auto-reconnecting bash Script. \ https://github.com/mgwoo/SSH-Tunnel-Auto-reconnecting.git
/blha303/puush-linux | A Bash script for using puush from linux. \ https://github.com/blha303/puush-linux.git
/anantshri/script-collection | Collection of my scripts ranging from bash or python or shell. Readme will  \ https://github.com/anantshri/script-collection.git
/mattddowney/gogs-bash | Bash Script for Interacting with the GOGS API \ https://github.com/mattddowney/gogs-bash.git
/mmerian/MySQL-Maint | A bash script that performs backups and maintenance on your MySQL servers \ https://github.com/mmerian/MySQL-Maint.git
/xv-tom-l/build-openssl-android | A simple bash script for compiling openssl for android on Mac OS X \ https://github.com/xv-tom-l/build-openssl-android.git
/sayanriju/Tiny-Bash-Server | A tiny http server written in Bash which supports CGI like scripting in Bas \ https://github.com/sayanriju/Tiny-Bash-Server.git
/JohnTroony/LUKS-OPs | A bash script to automate the most basic usage of LUKS volumes in Linux VPS \ https://github.com/JohnTroony/LUKS-OPs.git
/illvart/termux-alpine | Bash script for installing Alpine Linux in Termux - 100 MB. \ https://github.com/illvart/termux-alpine.git
/meribold/signal-cli | Two Bash scripts making signal-cli convenient for interactive use \ https://github.com/meribold/signal-cli.bash.git
/techchipnet/RPI-Tor-Wireless-Hotspot | PiFiTorAP is simple bash script for configure your Raspberry Pi 3 B/B+ as a \ https://github.com/techchipnet/RPI-Tor-Wireless-Hotspot.git
/technomancy/lein | A no-startup-delay eshell replacement for the `lein` bash script. \ https://github.com/technomancy/lein.el.git
/sys0dm1n/varnish-cache-warmer | This is a bash script that uses wget and curl to warm up Varnish by targeti \ https://github.com/sys0dm1n/varnish-cache-warmer.git
/0x192/Bash-Android-Debloater | Bash script using ADB to debloat non-rooted smartphones. Improve your priva \ https://github.com/0x192/Bash-Android-Debloater.git
/mikispag/googlevoice-scraper | A quick and dirty bash script that queries Google for available area codes, \ https://github.com/mikispag/googlevoice-scraper.git
/12nick12/sshjump | Bash scripts to ease setting up reverse ssh tunnel for ssh to hosts behind  \ https://github.com/12nick12/sshjump.git
/aws-samples/fargate-game-servers | This repository contains an example solution on how to scale a fleet of gam \ https://github.com/aws-samples/fargate-game-servers.git
/covertg/m3u-download | A quick-and-dirty bash script for batch downloading music from an M3U playl \ https://github.com/covertg/m3u-download.git
/MagePsycho/magento2-installer-bash-script | Simplistic Magento 2 Installer Bash Script \ https://github.com/MagePsycho/magento2-installer-bash-script.git
/dabasanta/DNSExplorer | Bash script that automates the enumeration of domains and DNS servers in th \ https://github.com/dabasanta/DNSExplorer.git
/JohnTroony/Scriptology | Collection of some scripts I've written in Perl, Python BASH, GO and JS to  \ https://github.com/JohnTroony/Scriptology.git
/Privex/shell-core | A library of shell functions designed to ease the development of shell scri \ https://github.com/Privex/shell-core.git
/01sadra/IsTyping |  :memo: A simple Bash script to simulate "is typing..." in Telegram(desktop \ https://github.com/01sadra/IsTyping....git
/apparentlymart/terraform-provider-bash | Terraform utility provider for constructing bash scripts that use data from \ https://github.com/apparentlymart/terraform-provider-bash.git
/pconerly/lc-listcommands-bash | A bash script for providing a "list commands previously used in this direct \ https://github.com/pconerly/lc-listcommands-bash.git
/markusressel/zfs-inplace-rebalancing | Simple bash script to rebalance pool data between all mirrors when adding v \ https://github.com/markusressel/zfs-inplace-rebalancing.git
/tacksoo/bash_basics | Bash scripting basics for my students  \ https://github.com/tacksoo/bash_basics.git
/docker-how-to/portainer-bash-scripts | Bash scripts to interact with Portainer \ https://github.com/docker-how-to/portainer-bash-scripts.git
/supermamon/install-theos | Bash scripts to install theos \ https://github.com/supermamon/install-theos.git
/mehulpanchal007/venom | Auto Recon Bash Script \ https://github.com/mehulpanchal007/venom.git
/xcad2k/scripts | ▶️ Bash / PowerShell and Python scripts for various projects \ https://github.com/xcad2k/scripts.git
/inutano/pfastq-dump | parallel-fastq-dump implementation in bash script \ https://github.com/inutano/pfastq-dump.git
/basharkey/CVE-2022-0847-dirty-pipe-checker | Bash script to check for CVE-2022-0847 "Dirty Pipe" \ https://github.com/basharkey/CVE-2022-0847-dirty-pipe-checker.git
/xupefei/VPS-Daily-Backup-Script | Bash scripts for backing up your data automatically. \ https://github.com/xupefei/VPS-Daily-Backup-Script.git
/piroor/tweetbot | A bot program for Twitter, written in simple Bash script \ https://github.com/piroor/tweetbot.sh.git
/kathawala/gist | Bash script for posting gists to https://gists.github.com \ https://github.com/kathawala/gist.git
/tripflex/igitlab | GitLab shell/bash installer script for Ubuntu (really any Debian flavor) \ https://github.com/tripflex/igitlab.git
/extensionsapp/progre | Progress bar (loading, process) to a shell script (bash, console, terminal) \ https://github.com/extensionsapp/progre.sh.git
/nisrulz/terminal-utils | [Utils] A growing list of useful terminal utility/commands and bash scripts \ https://github.com/nisrulz/terminal-utils.git
/andrewbrg/crouton-auto | Bash script to auto-create (via crouton) a Debian / Cinnamon installation w \ https://github.com/andrewbrg/crouton-auto.git
/maksim07/url-tail | it is a bash script that allows to "tail -f" arbitrary url if the server su \ https://github.com/maksim07/url-tail.git
/npisanti/of_vscode | bash script for generating openFrameworks projects for Visual Studio Code o \ https://github.com/npisanti/of_vscode.git
/lejubila/piGarden | Bash script to manage an irrigation system built with a Raspberry Pi \ https://github.com/lejubila/piGarden.git
/notthebee/obsh | A tiny bash script for finding SSH servers in your local network \ https://github.com/notthebee/obsh.git
/oneohthree/bootify | Bash script to make USB drives bootables with Windows 7/8/8.1/10  installat \ https://github.com/oneohthree/bootify.git
/DavidM42/rpi-cpu | Bash script to conveniently change the raspberry pi governor and let this s \ https://github.com/DavidM42/rpi-cpu.gov.git
/imthenachoman/nBackup | A simple Bash script for making local backups with different views. \ https://github.com/imthenachoman/nBackup.git
/blackarrowsec/EAP_buster | EAP_buster is a simple bash script that lists what EAP methods are supporte \ https://github.com/blackarrowsec/EAP_buster.git
/rramatchandran/big-o-performance-java | # big-o-performance A simple html app to demonstrate performance costs of d \ https://github.com/rramatchandran/big-o-performance-java.git
/giggio/bashscripts | My bash profile and scripts. \ https://github.com/giggio/bashscripts.git
/PacktPublishing/Learn-Linux-Shell-Scripting-Fundamentals-of-Bash-4 | Learn Linux Shell Scripting Fundamentals of Bash 4.4, published by Packt \ https://github.com/PacktPublishing/Learn-Linux-Shell-Scripting-Fundamentals-of-Bash-4.4.git
/oohnoitz/nginx-installer | Bash script designed to ease the process of compiling nginx with multiple p \ https://github.com/oohnoitz/nginx-installer.git
/jpic/bashworks | Who said "temporary bash scripts"? I ain't Sir! \ https://github.com/jpic/bashworks.git
/gsylvie/git-reverse | Bash script to reverse a git repo. \ https://github.com/gsylvie/git-reverse.sh.git
/mozamimy/chromium-updater | A bash script to ease upgrades of the Chromium web browser on OS X \ https://github.com/mozamimy/chromium-updater.git
/docsmooth/vmware-bumblebee | Bash Script to start VMware Workstation under Bumblebee Primus/Optimus hybr \ https://github.com/docsmooth/vmware-bumblebee.git
/cec/wait-for-endpoint | bash script waiting until a given endpoint returns 200 or until timeout thr \ https://github.com/cec/wait-for-endpoint.git
/hemanth/futhark | Collection of all my old and new scripts written in bash, python, ruby and  \ https://github.com/hemanth/futhark.git
/felixmc/Bash-Scripts | collection of bash scripts I wrote/use \ https://github.com/felixmc/Bash-Scripts.git
/xtrasimplicity/killport | Simple bash script to kill a process which uses the specified port \ https://github.com/xtrasimplicity/killport.git
/hrishioa/nomohead | Simple Bash script that announces IP Address and ngrok tunnel of Raspberry  \ https://github.com/hrishioa/nomohead.git
/deluan/grails | Bash script for selecting and calling the correct Grails version when you h \ https://github.com/deluan/grails.sh.git
/TomJamesGray/fortune-i3lock | A simple bash script that makes i3lock look a bit nicer \ https://github.com/TomJamesGray/fortune-i3lock.git
/Pab0/album_splitter | Awk/bash script to split an album from YouTube into separate tracks. Depend \ https://github.com/Pab0/album_splitter.git
/ericpskl/exportEC2VolumeImage | A Bash script which uses AWS CLI to create an image of an AWS EC2 volume \ https://github.com/ericpskl/exportEC2VolumeImage.git
/FitzgeraldKrudde/spotify-reverse-playlist | This Linux bash script reverses the tracks in a playlist. It creates a new  \ https://github.com/FitzgeraldKrudde/spotify-reverse-playlist.git
/amlamarra/timertab | A bash script to easily create, delete, & manage Systemd Timers. \ https://github.com/amlamarra/timertab.git
/elfacht/craft-deploy | A bash script to deploy Craft CMS on production servers. \ https://github.com/elfacht/craft-deploy.git
/DPsystems/Login-Shield | Your first line of defense against Internet bots, hacks and probes.   Login \ https://github.com/DPsystems/Login-Shield.git
/AdmiralGaust/bountyRecon | Bash script to automate Bug Bounty Reconnaissance \ https://github.com/AdmiralGaust/bountyRecon.git
/taylanbildik/bash_script_dersleri | Bash shell script dersleri \ https://github.com/taylanbildik/bash_script_dersleri.git
/unfa/kdenlive-multirender | A Bash script enabling multi-threaded video rendering for Kdenlive. \ https://github.com/unfa/kdenlive-multirender.git
/A2L5E0X1/debloat-adb | Bash Debloat-Scripts for Android Devices (using ADB) \ https://github.com/A2L5E0X1/debloat-adb.git
/amiaopensource/ltopers | Bash scripts to manage LTO cartridges with LTFS \ https://github.com/amiaopensource/ltopers.git
/SalimHaddou/snmp0wn-md5 | Bash script to bruteforce snmpv3 authentication passwords using MD5 (usmHMA \ https://github.com/SalimHaddou/snmp0wn-md5.git
/yerv000/Bash-Git-Prompt | Addon script to provide a short git prompt info to a bash prompt \ https://github.com/yerv000/Bash-Git-Prompt.git
/vladios13/site-backupsh | Bash-script для бэкапа файлов и баз данных, с отправкой уведомления в Teleg \ https://github.com/vladios13/site-backupsh.git
/perlpunk/shell-completions | Collection of shell (bash, zsh) tab completion scripts for various command  \ https://github.com/perlpunk/shell-completions.git
/krypted/swiftscriptrunner | Swift project to run a bash script based on a user clicking on a button \ https://github.com/krypted/swiftscriptrunner.git
/skontar/bash-slides | Simple script written in Bash for slide presentations in terminal \ https://github.com/skontar/bash-slides.git
/sudharsan-selvaraj/selenium | Selenium web driver bindings for the shell script . Browser automation mad \ https://github.com/sudharsan-selvaraj/selenium.sh.git
/seapagan/ubuntu-win-bootstrap | DEPRECIATED! Use "linux-comfy-chair" instead. A very simple bootstrap scrip \ https://github.com/seapagan/ubuntu-win-bootstrap.git
/jayant2014/Bash-Scripting | This repository is for Udemy Bash Scripting course. \ https://github.com/jayant2014/Bash-Scripting.git
/dasgeekchannel/AutoInstallBashScripts | Scripts for core packages like Filezilla, Atom, Steam, Simplenote, Lutris,  \ https://github.com/dasgeekchannel/AutoInstallBashScripts.git
/binkybear/HoneyPi | Bash script to install Honeypot projects ona Raspbian System \ https://github.com/binkybear/HoneyPi.git
/eunas/gotdeb | Interactive bash script for Virtual and Dedicated servers. \ https://github.com/eunas/gotdeb.git
/kyleburton/bake | Pure bash, very lightweight scripting and build framework. \ https://github.com/kyleburton/bake.git
/mxbi/shell_scripts | Various bash scripts useful for setting up machines \ https://github.com/mxbi/shell_scripts.git
/eBay/ebashlib |  A bash script battery which gathers several generic helper scripts for oth \ https://github.com/eBay/ebashlib.git
/RanyAlbegWein/Tinypng | A Bash script for shrinking PNG files, using tinypng.com \ https://github.com/RanyAlbegWein/Tinypng.git
/scivision/pybashutils | Collection of Bash and Python scripts I've made that may be generally usefu \ https://github.com/scivision/pybashutils.git
/stonfute/BashUSBCopy | Bash script to automatically copy file on USB drive when plugged in \ https://github.com/stonfute/BashUSBCopy.git
/ritsu/ipset-fail2ban | Bash script to convert fail2ban IP addresses to an ipset blacklist \ https://github.com/ritsu/ipset-fail2ban.git
/w0lfschild/ClassicFolders | :wrench: Bash script to replace macOS folders with macOS 10.9 folders \ https://github.com/w0lfschild/ClassicFolders.git
/ethannam/git-privatize | A bash script for bulk privatization of GitHub repositories \ https://github.com/ethannam/git-privatize.git
/JonnyFox/powerline-bash | A Bash Powerline-like prompt in Bash script. \ https://github.com/JonnyFox/powerline-bash.git
/alixaxel/halBox | Bash Script to Bootstrap Debian/Ubuntu Servers \ https://github.com/alixaxel/halBox.git
/greenec/Proxmox-Status | A bash script to gather system metrics like temperatures and ARC utilizatio \ https://github.com/greenec/Proxmox-Status.git
/chschnell/build-qt5-rpi | Bash script to fully cross-compile Qt 5 using a pure Debian host targeting  \ https://github.com/chschnell/build-qt5-rpi.git
/Md-MamunAbdulKayum/shell-scripting-examples | This repository contains all the important shell/bash scripting examples (e \ https://github.com/Md-MamunAbdulKayum/shell-scripting-examples.git
/raducotescu/vmware-server-linux-2 | provides a bash script and a patch for installing VMware Server 2.0.x on th \ https://github.com/raducotescu/vmware-server-linux-2.6.3x-kernel.git
/noqqe/statistical | statistical is a tiny easy-to-use bash script for visualizing simple data i \ https://github.com/noqqe/statistical.git
/oracle/rwloadsim | RWP*Load Simulator - your tool for scripting, simulation and much more. Lik \ https://github.com/oracle/rwloadsim.git
/jeffward01/Chaincoin-MN-SetupScript | An automated bash script to set up ChiainCoin Masternodes \ https://github.com/jeffward01/Chaincoin-MN-SetupScript.git
/NullArray/Shellshocker | A Bash script to test a list of URLs for the shellshock vulnerability. \ https://github.com/NullArray/Shellshocker.git
/per1234/arduino-ci-script | Bash script for continuous integration of Arduino projects \ https://github.com/per1234/arduino-ci-script.git
/xwmx/bask | A runner and framework for command-centric Bash scripts. \ https://github.com/xwmx/bask.git
/billpcs/jammer |  A Bash script to automate the continuous circular deauthentication of all \ https://github.com/billpcs/jammer.git
/miteshashar/nginx_vhosts | Shell script to add a new vhost on nginx. Modifying the shell script availa \ https://github.com/miteshashar/nginx_vhosts.git
/zeroc00I/BashitRecon | A collection of famous recon public scripts, but in bash <3 \ https://github.com/zeroc00I/BashitRecon.git
/PHLAK/Soxy | Bash script for starting and stopping a SOCKS proxy tunnel over SSH in Linu \ https://github.com/PHLAK/Soxy.git
/mpangrazzi/spotify-status-on-slack | A very simple `bash` script to set Slack status to your currently playing t \ https://github.com/mpangrazzi/spotify-status-on-slack.git
/bci/Namecheap-DDNS-Update | Bash script to update the your namecheap.com ddns host. Tested under Macint \ https://github.com/bci/Namecheap-DDNS-Update.git
/p1r-a-t3/Hacker-Playbook-Utility | A Python3 powered bash script written to slightly automate the tool install \ https://github.com/p1r-a-t3/Hacker-Playbook-Utility.git
/asmehra95/wiseowl | This is a Fact based Question Answering System using Apache Solr as backend \ https://github.com/asmehra95/wiseowl.git
/kairyou/mac-bash-scripts | mac bash scripts \ https://github.com/kairyou/mac-bash-scripts.git
/dfaust/mkv-bash-tools | A collection of BASH scripts for processing mkv files \ https://github.com/dfaust/mkv-bash-tools.git
/stripe/stripe-reachability | A bash script to test access to the Stripe API     \ https://github.com/stripe/stripe-reachability.git
/tinmarino/mouse_xterm | Mouse support to move (readline) cursor on xterm (Bash script) \ https://github.com/tinmarino/mouse_xterm.git
/gbytedev/zfsbud | ZFS snapshotting, replicating & backup rotating convenience bash script \ https://github.com/gbytedev/zfsbud.git
/tdihp/dspcap | A humble bash script set that uses daemonset to capture tcpdump from all k8 \ https://github.com/tdihp/dspcap.git
/StafDehat/scripts | Scripts I've written that I never want to lose.  Mostly bash. \ https://github.com/StafDehat/scripts.git
/n3d1117/CrackBot2 | A macOS bash script to automate decryption of iOS Apps using a jailbroken i \ https://github.com/n3d1117/CrackBot2.git
/v1shwa/random-port-generator | Simple bash script to help you choose a free port on your server \ https://github.com/v1shwa/random-port-generator.git
/alpacacode/Homebrewn-Scripts | A cauldron of miscellaneous, independant handy scripts I've written myself  \ https://github.com/alpacacode/Homebrewn-Scripts.git
/theckman/gapps-linode-dns | BASH script to automatically add Google Apps MX, SPF, and CNAME records to  \ https://github.com/theckman/gapps-linode-dns.git
/eugene-dounar/docker-example | Example PHP project using Docker containers and simple bash scripts \ https://github.com/eugene-dounar/docker-example.git
/SAMtoBAM/MUMandCo | MUM&Co is a simple bash script that uses Whole Genome Alignment information \ https://github.com/SAMtoBAM/MUMandCo.git
/evonshahriar/stock-cli | A bash-script to check the stock market price update from the CLI using Yah \ https://github.com/evonshahriar/stock-cli.git
/baedrik/SCRT-sealed-bid-auction | Smart contract to implement a sealed-bid-auction on Secret Network.  Includ \ https://github.com/baedrik/SCRT-sealed-bid-auction.git
/psynaptic/bash_kit | Bash kit is a collection of functions, scripts and aliases for Drupal devel \ https://github.com/psynaptic/bash_kit.git
/mumoshu/gosh | (Re)write your bash script in Go and make it testable too \ https://github.com/mumoshu/gosh.git
/ganbarodigital/go_scriptish | scriptish is a library to help you port bash scripts to Golang \ https://github.com/ganbarodigital/go_scriptish.git
/nherson/choose-hive | Bash script to find the least congested hive machine in 330 Soda at UC Berk \ https://github.com/nherson/choose-hive.git
/cghdev/cloud-dl | Bash script to manage files from nextcloud \ https://github.com/cghdev/cloud-dl.git
/danradom/hue | Philips Hue bash scripts \ https://github.com/danradom/hue.git
/RandomNinjaAtk/docker-lidarr-lad | Official docker for LAD bash enhancement script \ https://github.com/RandomNinjaAtk/docker-lidarr-lad.git
/JunyueC/sci-RNA-seq3_pipeline | Processing pipeline scripts for sci-RNA-seq3 (bash, R, python) \ https://github.com/JunyueC/sci-RNA-seq3_pipeline.git
/jrussellfreelance/bash-scripts | A collection of bash scripts I've written \ https://github.com/jrussellfreelance/bash-scripts.git
/zacanger/dotfiles | scripts and configs for bash, vim, linux, mac, i3, etc. \ https://github.com/zacanger/dotfiles.git
/zzsza/shell-scripts | linux bash shell scripts code snippets \ https://github.com/zzsza/shell-scripts.git
/goodevilgenius/dropbox-shell | A BASH script to run scripts/programs on a remote machine via Dropbox. \ https://github.com/goodevilgenius/dropbox-shell.git
/akesterson/shunit | Functions for producing unit test results from bash scripts in junit or hum \ https://github.com/akesterson/shunit.git
/biodranik/sd-card-speed-test | Bash script for Mac OS X and Linux to test SD card or SSD/HDD read and writ \ https://github.com/biodranik/sd-card-speed-test.git
/jasongrimes/lamp-backup | Bash shell scripts for basic backup management on a LAMP server. \ https://github.com/jasongrimes/lamp-backup.git
/burhanxd/SimpleRecon | Simple Recon is just a simple bash script to automate my recon process. \ https://github.com/burhanxd/SimpleRecon.git
/Thrilleratplay/coreboot-builder-scripts | Bash scripts and config files to simplify building of Coreboot using the of \ https://github.com/Thrilleratplay/coreboot-builder-scripts.git
/colinodell/git-amend-old | DEPRECATED Bash script to amend older commits with staged changes - see: \ https://github.com/colinodell/git-amend-old.git
/gavinlyonsrepo/cylon-deb | TUI menu driven bash shell script  to maintain a  Debian based Linux distro \ https://github.com/gavinlyonsrepo/cylon-deb.git
/jamescoleuk/lk | A CLI frontend for your bash scripts. \ https://github.com/jamescoleuk/lk.git
/pforret/LearnBashQuickly | Learn Bash scripting in 27 minutes \ https://github.com/pforret/LearnBashQuickly.git
/AndrewHazelden/PLYmesher | PLYmesher is a collection of bash scripts and MeshLab .mlx filter scripts t \ https://github.com/AndrewHazelden/PLYmesher.git
/heewa/emoji-prompt | Small script to get random, stable emoji in your bash prompt. \ https://github.com/heewa/emoji-prompt.git
/sleemanj/gerb2etch | Bash script to convert gerber (and drill) files into a PDF containing artwo \ https://github.com/sleemanj/gerb2etch.git
/pijarr/pijarr | Bash shell script for Raspberry Pi to automate the setup and configuration  \ https://github.com/pijarr/pijarr.git
/Offirmo/offirmo-shell-lib | A collection of useful bash reusable functions for robust and advanced shel \ https://github.com/Offirmo/offirmo-shell-lib.git
/KebabLord/dotfiles | my rice dump featuring meme bash aliases, minimal slim theme with waifus, s \ https://github.com/KebabLord/dotfiles.git
/gorlapraveen/The-Learning-Documentation-Project | This documentation is about the new learning(s) and issue(s) resolvings on  \ https://github.com/gorlapraveen/The-Learning-Documentation-Project.git
/dmy/elm-sh-completion | Bash or Zsh shell completion script for Elm binary and tools \ https://github.com/dmy/elm-sh-completion.git
/lepe/scripts | Scripts in Bash and Perl \ https://github.com/lepe/scripts.git
/ryanmaclean/awful-bash-scripts | Awful Bash Scripts I Have Made... \ https://github.com/ryanmaclean/awful-bash-scripts.git
/twfcc/gfw | gfw.press bash script installer  \ https://github.com/twfcc/gfw.press_installer.git
/jgmdev/watchsys | Bash shell script for basic system monitoring and prevention. \ https://github.com/jgmdev/watchsys.git
/nethalo/backup-scripts | Short collection of backup scripts. Mostly on bash \ https://github.com/nethalo/backup-scripts.git
/icc/rrdtool-bash-scripts | BASH scripts that uses RRDtool to generate different stats graphs \ https://github.com/icc/rrdtool-bash-scripts.git
/mattmezza/vhost-creator | A simple bash script to create virtual host vhost with apache on Ubuntu or  \ https://github.com/mattmezza/vhost-creator.git
/lzap/dancepill | Quck tarball extract script in Bash for various distributions \ https://github.com/lzap/dancepill.git
/pettarin/setup-festival-mbrola | A Bash script for Linux and Mac OS X to download/compile/install Festival,  \ https://github.com/pettarin/setup-festival-mbrola.git
/ghoulmann/RasWAP | Bash script to bring fresh Raspbian/Raspian install to functioning wireless \ https://github.com/ghoulmann/RasWAP.git
/rhoconlinux/gnote-massive-export-to-txt | A bash script that exports Gnote notes to text files. It will transform eac \ https://github.com/rhoconlinux/gnote-massive-export-to-txt.git
/tharrrk/KDE-multiscreen-wallpaper-cutter | Bash script to split an image according to current monitors setup. \ https://github.com/tharrrk/KDE-multiscreen-wallpaper-cutter.git
/sethleedy/GRC-SECURITY-NOW-PODCAST-DOWNLOAD-SCRIPT | Purpose of this BASH script is to allow easy downloading of Security Now (G \ https://github.com/sethleedy/GRC-SECURITY-NOW-PODCAST-DOWNLOAD-SCRIPT.git
/TigerOnVaseline/ata-secure-erase | A bash script to securely erase ATA disks, runs the SECURITY ERASE UNIT com \ https://github.com/TigerOnVaseline/ata-secure-erase.git
/askedrelic/bash-history-punchcard | Command line script for creating a PNG punchcard graph of your bash history \ https://github.com/askedrelic/bash-history-punchcard.git
/LinkedInLearning/bashscripting-2874016 | Learning Bash Scripting \ https://github.com/LinkedInLearning/bashscripting-2874016.git
/sergioprado/bitbake-bash-completion | Bitbake bash completion script \ https://github.com/sergioprado/bitbake-bash-completion.git
/technopagan/php-code-deobfuscator | Bash script to retrieve unobfuscated (unencrypted) PHP code \ https://github.com/technopagan/php-code-deobfuscator.git
/lanzz/bash-supergenpass | Bash shell-script implementation of SuperGenPass \ https://github.com/lanzz/bash-supergenpass.git
/jadeallenx/erlbrew | Bash script to help you install Erlang versions side-by-side \ https://github.com/jadeallenx/erlbrew.git
/nneves/openwrt_mips_ar9331_nodejs | Linux bash script to cross-compile Node.js for OpenWrt MIPS Atheros AR9331  \ https://github.com/nneves/openwrt_mips_ar9331_nodejs.git
/nyabkun/bash-to-powershell-converter | Converts bash script to powershell script. \ https://github.com/nyabkun/bash-to-powershell-converter.git
/bradymholt/jBash | Helpers for Bash like shell scripting in JavaScript \ https://github.com/bradymholt/jBash.git
/alunperkins/holdall | linux bash script for synchronising computers over an air-gap \ https://github.com/alunperkins/holdall.git
/uberhacker/shrink-ibdata1 | Bash shell script to shrink /var/lib/mysql/ibdata1 and restore disk space \ https://github.com/uberhacker/shrink-ibdata1.git
/fatbattk/DigitalOceanDynDNS | Bash script to automatically add/update Digital Ocean DNS record for a doma \ https://github.com/fatbattk/DigitalOceanDynDNS.git
/acabal/scripts | A handful of short Bash scripts that make my life easier. \ https://github.com/acabal/scripts.git
/Seekurity/BrowserCookieGrabber | A bash script to collect and compress cookies files from various browsers. \ https://github.com/Seekurity/BrowserCookieGrabber.git
/DanielKinsman/lincremental | A set of bash scripts for automated incremental backups with rsync \ https://github.com/DanielKinsman/lincremental.git
/bobbyiliev/quick_access_logs_summary | This is a BASH script which will quickly summarize your access logs and pro \ https://github.com/bobbyiliev/quick_access_logs_summary.git
/tortuvshin/installer | Installer is a collection of bash scripts to install apps on ubuntu \ https://github.com/tortuvshin/installer.git
/evanRubinsteinIT/BugBounty-Oneliners | A compilation of quick bash scripts I wrote to make life easier while bug b \ https://github.com/evanRubinsteinIT/BugBounty-Oneliners.git
/NEUP-Net-Depart/neu-ipgw_linux | [Deprecated] Bash client script for NEU IP Gateway. \ https://github.com/NEUP-Net-Depart/neu-ipgw_linux.git
/Cartmanishere/aria2-recursive-scraper | A simple scraper and bash script combination to download open directories r \ https://github.com/Cartmanishere/aria2-recursive-scraper.git
/Peter-Moller/open-ports | A bash-script for OS X and Linux detailing the open network connections to  \ https://github.com/Peter-Moller/open-ports.git
/dlenski/travis-encrypt-sh | Pure-bash script to encrypt values for use in Travis-CI build scripts. \ https://github.com/dlenski/travis-encrypt-sh.git
/SumuduLansakara/JustBash | Bash based simplified scripting framework \ https://github.com/SumuduLansakara/JustBash.git
/ramirojoaquin/vestacp-borg-incremental-backups | A series of bash scripts to perform incremental backups of Vesta Control Pa \ https://github.com/ramirojoaquin/vestacp-borg-incremental-backups.git
/seb86/github-to-wordpress-deploy-script | Bash script to handle tagging on GitHub and deployment to WordPress SVN \ https://github.com/seb86/github-to-wordpress-deploy-script.git
/dennisMe2/usbfd | usbfd is a Linux Bash script. Used to mount unmount and format USB sticks w \ https://github.com/dennisMe2/usbfd.git
/Gruppio/Echolor | The most colorful echo command .................. Tags: color colors Color  \ https://github.com/Gruppio/Echolor.git
/resipsadude/rcloned | Bash scripts for near real-time mirroring of your data to the Cloud using r \ https://github.com/resipsadude/rcloned.git
/Wingie/Django_face_recognition | This is a proof of concept application that allows the Django platform to l \ https://github.com/Wingie/Django_face_recognition.git
/nixawk/hello-bash | Bash scripting tutorial \ https://github.com/nixawk/hello-bash.git
/jedipunkz/openstack_grizzly_install | Installation bash script for OpenStack Grizzly Release. \ https://github.com/jedipunkz/openstack_grizzly_install.git
/Graey/instashellOG | A bash script for bruteforcing IG! \ https://github.com/Graey/instashellOG.git
/boardstretcher/bash-script-skeleton | bash script skeleton \ https://github.com/boardstretcher/bash-script-skeleton.git
/daveoncode/ubuntu-dev-tools | Provides bash scripts to properly setup Ubuntu for web development \ https://github.com/daveoncode/ubuntu-dev-tools.git
/cirosantilli/bash-cheat | Bash information, cheatsheets and simple scripts. \ https://github.com/cirosantilli/bash-cheat.git
/lnfnunes/bash-progress-indicator | Animated progress indicator for Bash scripts \ https://github.com/lnfnunes/bash-progress-indicator.git
/deoxykev/SuperTransfer2 | Unlimited Gdrive upload rclone wrapper script written in Bash \ https://github.com/deoxykev/SuperTransfer2.git
/bkuhlmann/bashsmith | A template for smithing new Bash scripts. \ https://github.com/bkuhlmann/bashsmith.git
/tinytengu/sublime-patcher | Bash script for patching/cracking Sublime Text on Linux \ https://github.com/tinytengu/sublime-patcher.git
/Xaqron/tor-private-bridge | Bash script for setting up a private Tor bridge \ https://github.com/Xaqron/tor-private-bridge.git
/X0rg/dmg2dir | A Bash script which extract macOS application from DMG file \ https://github.com/X0rg/dmg2dir.git
/spaghetti-/imgurdl | Bash script to download imgur.com albums. \ https://github.com/spaghetti-/imgurdl.git
/niklasberglund/ipinfo | A Bash shell-script wrapping the IP address information API of http://ipinf \ https://github.com/niklasberglund/ipinfo.git
/matthiaskrgr/gitdiffbinstat | A bash script to get a git diff --shortstat-like output for changes in bina \ https://github.com/matthiaskrgr/gitdiffbinstat.git
/arikogan/mysql-gelf | A (very) basic Bash script to send MySQL status information to GrayLog thro \ https://github.com/arikogan/mysql-gelf.git
/sutlxwhx/highload-lemp | This bash script will install LEMP stack on your Ubuntu and configure it to \ https://github.com/sutlxwhx/highload-lemp.git
/patrickd-/ooengine | Intuitive pseudo object orientation for bash (Object oriented Shell Script) \ https://github.com/patrickd-/ooengine.git
/vorachet/bash-cli-template | Bash shell script template for readability CLI \ https://github.com/vorachet/bash-cli-template.git
/Phexcom/Ettercap-and-sslstrip | A little script witten in bash to fire up Ettercap and SSLstrip during a Ne \ https://github.com/Phexcom/Ettercap-and-sslstrip.git
/CutePoisonX/ffmpegInstaller | A simple bash script to automatically install ffmpeg (as well as x264, libf \ https://github.com/CutePoisonX/ffmpegInstaller.git
/cubny/php-built-in-server-manager | Bash script to stop, start, restart PHP built-in web server \ https://github.com/cubny/php-built-in-server-manager.git
/katattakd/nightcore | A Bash script that allows you to easily create "Nightcore" versions of song \ https://github.com/katattakd/nightcore.sh.git
/atorman/curlREST | Bash shell script (Mac OSX tested) for using curl and the REST API to acces \ https://github.com/atorman/curlREST.git
/evilsocket/gobench | A simple bash script that does its best to automate and visualize different \ https://github.com/evilsocket/gobench.git
/patones/XenServer-Patcher-bash | Simple bash script for Xen Server 6.2 that will download the patches xml, s \ https://github.com/patones/XenServer-Patcher-bash.git
/andyrblank/Commercial-Clapboard | This is a post processing BASH / Shell script designed for use with Tvheade \ https://github.com/andyrblank/Commercial-Clapboard.git
/gidoBOSSftw5731/notion-auto-pull | Bash script to automatically download a notion workspace \ https://github.com/gidoBOSSftw5731/notion-auto-pull.git
/dualbus/bashly | Bashly is a collection of solutions to common problems that arise when writ \ https://github.com/dualbus/bashly.git
/0vercl0k/TV-Show-Downloader | Maybe you're a guy a bit like me -- who watch a lot of series -- so I guess \ https://github.com/0vercl0k/TV-Show-Downloader.git
/keisentraut/awsbackup | Bash script for personal backup with Amazon Web Services S3 Glacier Deep Ar \ https://github.com/keisentraut/awsbackup.git
/MainakRepositor/Shell-Scripting | A collection of bash programs (shell scripts) that can be run on Linux, Uni \ https://github.com/MainakRepositor/Shell-Scripting.git
/bobbyiliev/bash-ssl-checker-tool | This is a very simple bash script that you could use to gain general inform \ https://github.com/bobbyiliev/bash-ssl-checker-tool.git
/nirzaf/EventDrivenCSharp | From my time as a sysadmin (scripting in various languages — Bash, Python,  \ https://github.com/nirzaf/EventDrivenCSharp.git
/KevCui/obashfuscator | :performing_arts: A Bash script to obfuscate Bash script \ https://github.com/KevCui/obashfuscator.git
/andyceo/bash_scripts | My bash scripts collection \ https://github.com/andyceo/bash_scripts.git
/leonov-av/openvas-commander | Small bash script for OpenVAS installation and management \ https://github.com/leonov-av/openvas-commander.git
/mapbox/install-node | Bash script to install a version/platform of Node.js \ https://github.com/mapbox/install-node.git
/Lednerb/vestacp-backup-manager | [DEPRECATED] Bash-Script to manage your VestaCP backups \ https://github.com/Lednerb/vestacp-backup-manager.git
/shifa123/chaos-hunt | Bash Script to Hunt all the targets/Subdomains from Chaos by Project Discov \ https://github.com/shifa123/chaos-hunt.git
/jamesridgway/pwnedpasswords | A bash script for searching Troy Hunt's pwnedpasswords \ https://github.com/jamesridgway/pwnedpasswords.sh.git
/xetys/kubeconfig-loader | A simple bash script for rotating local kubeconfigs \ https://github.com/xetys/kubeconfig-loader.git
/toolbear/svm | Scala Version Manager - Simple bash script to manage multiple active scala  \ https://github.com/toolbear/svm.git
/jbisbee/virtualenvwrapper-django | Django project friendly virtualenvwrapper postactivate and postdeactivate b \ https://github.com/jbisbee/virtualenvwrapper-django.git
/VirtuBox/ee-acme-sh | Bash script to install Let's Encrypt SSL certificates automatically using a \ https://github.com/VirtuBox/ee-acme-sh.git
/moomindani/aws-mon-pgsql | Bash script that reports custom metric data about PostgreSQL(RDS) performan \ https://github.com/moomindani/aws-mon-pgsql.git
/KatzeMau/wifite2-requirements | This bash script will install wifite2 and its other tools Pyrit, bully, wir \ https://github.com/KatzeMau/wifite2-requirements.git
/qq2225936589/xfade-ffmpeg-script | A bash script that uses ffmpeg's xfade transition filter to connect multipl \ https://github.com/qq2225936589/xfade-ffmpeg-script.git
/engineyard/sous_chef | bash scripts with chef like syntax \ https://github.com/engineyard/sous_chef.git
/chopmo/git-autopush | Very simple bash script to add "git push" as the post commit hook in a Git  \ https://github.com/chopmo/git-autopush.git
/mybasementcloud/R8x-export-import-api-scripts | Check Point R8x Export, Import, [and more] API scripts for bash and maybe p \ https://github.com/mybasementcloud/R8x-export-import-api-scripts.git
/tobor88/Bash | Collection of bash scripts I wrote to make my life easier or test myself th \ https://github.com/tobor88/Bash.git
/gibrown/bash-my-day | Bash scripts for my day \ https://github.com/gibrown/bash-my-day.git
/hummingbirdy2/auto-cross-seed | Bash script to search and add cross-seedable torrents (for Movies and TV) \ https://github.com/hummingbirdy2/auto-cross-seed.git
/smallerxie/wifi-kickout | A bash shell script for OpenWrt kicks out wifi client with a weak signal an \ https://github.com/smallerxie/wifi-kickout.git
/carolinepetrova/OperatingSystems_2020-2021 | Notes on basic shell commands, bash scripting and C code for the Operating  \ https://github.com/carolinepetrova/OperatingSystems_2020-2021.git
/x1n13y84issmd42/bashttpd | ‍‍‍ An HTTP server and a web framework in Bash script. \ https://github.com/x1n13y84issmd42/bashttpd.git
/lowtechmag/materialserver | a bash script exposing `AXP209` device power metrics, temperature and machi \ https://github.com/lowtechmag/materialserver.git
/pbkwee/deshellshock | Bash script to detect if a server is hosting a vulnerable bash, and to patc \ https://github.com/pbkwee/deshellshock.git
/lejacobroy/Guetzling | Guetzling is a simple script for macOS and Linux written in Bash, to automa \ https://github.com/lejacobroy/Guetzling.git
/gridpane/prime-mover | Bash script to facilitate migration of WordPress sites into and out of serv \ https://github.com/gridpane/prime-mover.git
/FabioDefilippo/linuxallenum | this bash script is for remote linux and macos hosts hacked! \ https://github.com/FabioDefilippo/linuxallenum.git
/ponchoblesa/GoPro-Studio-for-linux | This repository contains some bash scripts to process your GoPro media file \ https://github.com/ponchoblesa/GoPro-Studio-for-linux.git
/dionmulaj/EnumVolcano | EnumVolcano is an open source Bash script which is used to perform automate \ https://github.com/dionmulaj/EnumVolcano.git
/metaist/idempotent-bash | Make your bash scripts idempotent. \ https://github.com/metaist/idempotent-bash.git
/relarizky/wpenum | Simple Bash Script For Collecting Wordpress Username \ https://github.com/relarizky/wpenum.git
/Joebh/MysqlDumpToH2 | Bash Script to convert an ansi mysqldump to h2 compatible. \ https://github.com/Joebh/MysqlDumpToH2.git
/FreedomBen/handy-bash-scripts | Collection of some handy Bash scripts for doing common tasks \ https://github.com/FreedomBen/handy-bash-scripts.git
/MediaCrush/MediaCrush-cli | A bash script for working with MediaCrush from a shell \ https://github.com/MediaCrush/MediaCrush-cli.git
/foospidy/ipt-kit | Bash scripts to help setup port redirects with iptables \ https://github.com/foospidy/ipt-kit.git
/dlabey/simple-linux-bash-rotating-backup-script | Simple Linux bash rotating backup script that also backs up MySQL. \ https://github.com/dlabey/simple-linux-bash-rotating-backup-script.git
/gclayburg/coreos-vmware-deploy | Bash script for provisioning coreos cluster on vmwware ESXi \ https://github.com/gclayburg/coreos-vmware-deploy.git
/corpnewt/OC-Update | Bash script to update OpenCore and some efi drivers \ https://github.com/corpnewt/OC-Update.git
/jreading/svn-export-changes | Bash script for exporting svn files from a range of revisions \ https://github.com/jreading/svn-export-changes.sh.git
/linuxsquad/Linux_Workstation_Harden_Security | Library of bash scripts that allow to harden security of Linux workstation  \ https://github.com/linuxsquad/Linux_Workstation_Harden_Security.git
/raja-jamwal/Google-Maps-Downloader | Bash script to download Google maps satellite imagery for a given coordinat \ https://github.com/raja-jamwal/Google-Maps-Downloader.git
/johanneszab/vpn-auto-reconnect | A simple bash script for autoreconnect to OpenVPN via NetworkManager comman \ https://github.com/johanneszab/vpn-auto-reconnect.sh.git
/buzink/podcast2playlist | Bash script to convert podcast rss feeds to m3u, pls or Volumio 2 playlist  \ https://github.com/buzink/podcast2playlist.git
/mchon89/Udemy | Web-scraping Udemy online courses using BeautifulSoup in Python and with a  \ https://github.com/mchon89/Udemy.git
/markus7017/AndroidTV_Control | A bash script providing a bunch of functions to control your TV based on AD \ https://github.com/markus7017/AndroidTV_Control.git
/RaymiiOrg/restrict_ssh | This bash script restricts ssh to a set of commands via .ssh/authorized_key \ https://github.com/RaymiiOrg/restrict_ssh.git
/paukstelis/octoprint_deploy | Bash script for rapid deployment of multiple octoprint instance on a single \ https://github.com/paukstelis/octoprint_deploy.git
/Hestat/soc-threat-hunting | Repo of python/bash scripts for identifying IoC's in threat feed and other  \ https://github.com/Hestat/soc-threat-hunting.git
/mmphego/new-computer | Bash script to install everything I need, after a fresh [X]Ubuntu system in \ https://github.com/mmphego/new-computer.git
/evanx/redis-scan-bash | CLI bash script to scan Redis keys for inspection, or to expire/persist etc \ https://github.com/evanx/redis-scan-bash.git
/bobwya/build-multilib-wine | Monolithic BASH script to build multilib Wine / Wine-Staging, from source,  \ https://github.com/bobwya/build-multilib-wine.git
/sfiorini/NordVPN-Wireguard | A bash scripts that generates Wireguard configuration file for a NordVPN co \ https://github.com/sfiorini/NordVPN-Wireguard.git
/zar-nicolas20/GlyphsApp-Package-Install | Bash shell to install most of the Scripts and Pluging of Glyphs App \ https://github.com/zar-nicolas20/GlyphsApp-Package-Install.git
/TekWizely/bash-tpl | A smart, lightweight shell script templating engine, written in Bash \ https://github.com/TekWizely/bash-tpl.git
/BryanDollery/remove-snap | A bash script to remove snap from ubuntu \ https://github.com/BryanDollery/remove-snap.git
/tenhishadow/mbkp | Mikrotik backup script | simple bash script for doing encrypted backups of  \ https://github.com/tenhishadow/mbkp.git
/openstack-archive/fuel-virtualbox | A set of bash scripts that allow to easily deploy Fuel environment and try  \ https://github.com/openstack-archive/fuel-virtualbox.git
/zAbuQasem/zBuster | Bash script for CTF automating  basic enumeration  \ https://github.com/zAbuQasem/zBuster.git
/pauljeannot/SwiftyBash | Bash scripting & piping in Swift made easy ! \ https://github.com/pauljeannot/SwiftyBash.git
/rhummelmose/rclonesyncservice | Bash script for continuous, safe synchronization from a local volume to an  \ https://github.com/rhummelmose/rclonesyncservice.git
/aboutsecurity/Audit_Host-Baseline | A set of Bash scripts that allows you to repeatably collect and compare bas \ https://github.com/aboutsecurity/Audit_Host-Baseline.git
/geekaholic/ii | A simple bash todo script which uses Markdown syntax \ https://github.com/geekaholic/ii.do.git
/tronyx/sonarr-episode-name-checker | Bash script to check for episodes named "Episode ##" or "TBA" \ https://github.com/tronyx/sonarr-episode-name-checker.git
/mattwebbio/rpi-webpage-display | A rudimentary bash script to turn a fresh Raspbian install into a webpage d \ https://github.com/mattwebbio/rpi-webpage-display.git
/tt-viic/UdemyCoupons | Bash script que consulta dos páginas web sacando fácil y simplemente los cu \ https://github.com/tt-viic/UdemyCoupons.git
/alexkapps/landsat-gifworks | A bash tool (script) to generate animated (gif) temporal progressions of la \ https://github.com/alexkapps/landsat-gifworks.git
/pulsar123/Macro-scripts | A set of BASH scripts and C++ programs representing a complete workflow for \ https://github.com/pulsar123/Macro-scripts.git
/BashSupport-Pro/bashsupport-pro | Public issue tracking for BashSupport Pro. This is a plugin, which provides \ https://github.com/BashSupport-Pro/bashsupport-pro.git
/runeimp/IconImp | The iconimp BASH script is a PNG to FavIcon ICO, Mac ICNS, Windows ICO and  \ https://github.com/runeimp/IconImp.git
/Catfriend1/openwrt-presence | OpenWrt device presence detection bash script. Works accross multiple APs.  \ https://github.com/Catfriend1/openwrt-presence.git
/roelio/backup-script | Simple bash backup script using rsync  \ https://github.com/roelio/backup-script.git
/ppaskowsky/Bash | Bash Scripts for Downloading Linux Torrents \ https://github.com/ppaskowsky/Bash.git
/UtkarshVerma/installer-scripts | :computer: Bash scripts for doing installations in one go. \ https://github.com/UtkarshVerma/installer-scripts.git
/ferstl/eclipse-builder | A bash script to create Eclipse distributions \ https://github.com/ferstl/eclipse-builder.git
/Yekki1/Enumeration-Script | Bash Enumeration Script \ https://github.com/Yekki1/Enumeration-Script.git
/riboch/LaTeXLogbookTemplate | My LaTeX logbook template, including the date generation bash script. \ https://github.com/riboch/LaTeXLogbookTemplate.git
/GSA/github-federal-stats | Bash scripts to generate metrics on U.S. Federal usage of GitHub using the  \ https://github.com/GSA/github-federal-stats.git
/bluerider/zswap | Bash script to setup zram swap devices \ https://github.com/bluerider/zswap.git
/mkalewski/pdflatex | A bash script to simplify TeX, LaTeX, XeLaTeX, and LuaLaTeX files compilati \ https://github.com/mkalewski/pdflatex.sh.git
/owtf/http-request-translator | HTTP Request Translator (hrt) translates raw HTTP requests to different scr \ https://github.com/owtf/http-request-translator.git
/adjust/hydra-curl | a bash script to download with hundreds of parallel curls \ https://github.com/adjust/hydra-curl.git
/jasonrichardsmith/s3_sync | Bash script to automatically sync directories with S3 utilizing inotifywatc \ https://github.com/jasonrichardsmith/s3_sync.git
/mujtaba1747/git-autocommit | A bash script to automate pushing changes to github \ https://github.com/mujtaba1747/git-autocommit.git
/nurd1n/Xoxo | Auto bash/shell script video play, download, stream, bypass, text to speech \ https://github.com/nurd1n/Xoxo.git
/pH-7/Crawling-Emails | Very simple bash script to crawl email addresses from a specific website. \ https://github.com/pH-7/Crawling-Emails.git
/tomas-fer/HybPhyloMaker | Bash scripts for analysis of Hyb-Seq data (from raw reads to species trees) \ https://github.com/tomas-fer/HybPhyloMaker.git
/trice81384/macOSSoftwareUpdates | A bash script to check for updates on macOS and notify users via JAMF Helpe \ https://github.com/trice81384/macOSSoftwareUpdates.git
